//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ITSWebApp.ITSService.LookUpService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentPeriodType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentPeriodType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentPeriodTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentPeriodTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentPeriodTypeDesc {
            get {
                return this.TreatmentPeriodTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentPeriodTypeDescField, value) != true)) {
                    this.TreatmentPeriodTypeDescField = value;
                    this.RaisePropertyChanged("TreatmentPeriodTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentPeriodTypeID {
            get {
                return this.TreatmentPeriodTypeIDField;
            }
            set {
                if ((this.TreatmentPeriodTypeIDField.Equals(value) != true)) {
                    this.TreatmentPeriodTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentPeriodTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentCategory", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentCategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentCategoryName {
            get {
                return this.TreatmentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentCategoryNameField, value) != true)) {
                    this.TreatmentCategoryNameField = value;
                    this.RaisePropertyChanged("TreatmentCategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PricingType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PricingType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PricingTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricingTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PricingTypeID {
            get {
                return this.PricingTypeIDField;
            }
            set {
                if ((this.PricingTypeIDField.Equals(value) != true)) {
                    this.PricingTypeIDField = value;
                    this.RaisePropertyChanged("PricingTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricingTypeName {
            get {
                return this.PricingTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PricingTypeNameField, value) != true)) {
                    this.PricingTypeNameField = value;
                    this.RaisePropertyChanged("PricingTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceLevelAgreement", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ServiceLevelAgreement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceLevelAgreementIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceLevelAgreementNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceLevelAgreementID {
            get {
                return this.ServiceLevelAgreementIDField;
            }
            set {
                if ((this.ServiceLevelAgreementIDField.Equals(value) != true)) {
                    this.ServiceLevelAgreementIDField = value;
                    this.RaisePropertyChanged("ServiceLevelAgreementID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceLevelAgreementName {
            get {
                return this.ServiceLevelAgreementNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceLevelAgreementNameField, value) != true)) {
                    this.ServiceLevelAgreementNameField = value;
                    this.RaisePropertyChanged("ServiceLevelAgreementName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssessmentService", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class AssessmentService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssessmentServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssessmentServiceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssessmentServiceID {
            get {
                return this.AssessmentServiceIDField;
            }
            set {
                if ((this.AssessmentServiceIDField.Equals(value) != true)) {
                    this.AssessmentServiceIDField = value;
                    this.RaisePropertyChanged("AssessmentServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssessmentServiceName {
            get {
                return this.AssessmentServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssessmentServiceNameField, value) != true)) {
                    this.AssessmentServiceNameField = value;
                    this.RaisePropertyChanged("AssessmentServiceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssessmentType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class AssessmentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssessmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssessmentTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssessmentTypeID {
            get {
                return this.AssessmentTypeIDField;
            }
            set {
                if ((this.AssessmentTypeIDField.Equals(value) != true)) {
                    this.AssessmentTypeIDField = value;
                    this.RaisePropertyChanged("AssessmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssessmentTypeName {
            get {
                return this.AssessmentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssessmentTypeNameField, value) != true)) {
                    this.AssessmentTypeNameField = value;
                    this.RaisePropertyChanged("AssessmentTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DelegatedAuthorisation", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class DelegatedAuthorisation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DelegatedAuthorisationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeletegatedAuthorisationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DelegatedAuthorisationID {
            get {
                return this.DelegatedAuthorisationIDField;
            }
            set {
                if ((this.DelegatedAuthorisationIDField.Equals(value) != true)) {
                    this.DelegatedAuthorisationIDField = value;
                    this.RaisePropertyChanged("DelegatedAuthorisationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeletegatedAuthorisationName {
            get {
                return this.DeletegatedAuthorisationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletegatedAuthorisationNameField, value) != true)) {
                    this.DeletegatedAuthorisationNameField = value;
                    this.RaisePropertyChanged("DeletegatedAuthorisationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentCategoriesPricingTypes", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentCategoriesPricingTypes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PricingTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricingTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryPricingTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PricingTypeID {
            get {
                return this.PricingTypeIDField;
            }
            set {
                if ((this.PricingTypeIDField.Equals(value) != true)) {
                    this.PricingTypeIDField = value;
                    this.RaisePropertyChanged("PricingTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricingTypeName {
            get {
                return this.PricingTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PricingTypeNameField, value) != true)) {
                    this.PricingTypeNameField = value;
                    this.RaisePropertyChanged("PricingTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentCategoryName {
            get {
                return this.TreatmentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentCategoryNameField, value) != true)) {
                    this.TreatmentCategoryNameField = value;
                    this.RaisePropertyChanged("TreatmentCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryPricingTypeID {
            get {
                return this.TreatmentCategoryPricingTypeIDField;
            }
            set {
                if ((this.TreatmentCategoryPricingTypeIDField.Equals(value) != true)) {
                    this.TreatmentCategoryPricingTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryPricingTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceMethod", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class InvoiceMethod : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceMethodIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceMethodNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceMethodID {
            get {
                return this.InvoiceMethodIDField;
            }
            set {
                if ((this.InvoiceMethodIDField.Equals(value) != true)) {
                    this.InvoiceMethodIDField = value;
                    this.RaisePropertyChanged("InvoiceMethodID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceMethodName {
            get {
                return this.InvoiceMethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceMethodNameField, value) != true)) {
                    this.InvoiceMethodNameField = value;
                    this.RaisePropertyChanged("InvoiceMethodName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DelegatedAuthorisationTypes", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class DelegatedAuthorisationTypes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DelegatedAuthorisationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DelegatedAuthorisationTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DelegatedAuthorisationTypeID {
            get {
                return this.DelegatedAuthorisationTypeIDField;
            }
            set {
                if ((this.DelegatedAuthorisationTypeIDField.Equals(value) != true)) {
                    this.DelegatedAuthorisationTypeIDField = value;
                    this.RaisePropertyChanged("DelegatedAuthorisationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DelegatedAuthorisationTypeName {
            get {
                return this.DelegatedAuthorisationTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DelegatedAuthorisationTypeNameField, value) != true)) {
                    this.DelegatedAuthorisationTypeNameField = value;
                    this.RaisePropertyChanged("DelegatedAuthorisationTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentSetupTypes", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class DocumentSetupTypes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentSetupTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentSetupTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentSetupTypeID {
            get {
                return this.DocumentSetupTypeIDField;
            }
            set {
                if ((this.DocumentSetupTypeIDField.Equals(value) != true)) {
                    this.DocumentSetupTypeIDField = value;
                    this.RaisePropertyChanged("DocumentSetupTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentSetupTypeName {
            get {
                return this.DocumentSetupTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentSetupTypeNameField, value) != true)) {
                    this.DocumentSetupTypeNameField = value;
                    this.RaisePropertyChanged("DocumentSetupTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class EmailType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmailTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmailTypeID {
            get {
                return this.EmailTypeIDField;
            }
            set {
                if ((this.EmailTypeIDField.Equals(value) != true)) {
                    this.EmailTypeIDField = value;
                    this.RaisePropertyChanged("EmailTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailTypeName {
            get {
                return this.EmailTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailTypeNameField, value) != true)) {
                    this.EmailTypeNameField = value;
                    this.RaisePropertyChanged("EmailTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserTypeID {
            get {
                return this.UserTypeIDField;
            }
            set {
                if ((this.UserTypeIDField.Equals(value) != true)) {
                    this.UserTypeIDField = value;
                    this.RaisePropertyChanged("UserTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplaintStatus", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ComplaintStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComplaintStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplaintStatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComplaintStatusID {
            get {
                return this.ComplaintStatusIDField;
            }
            set {
                if ((this.ComplaintStatusIDField.Equals(value) != true)) {
                    this.ComplaintStatusIDField = value;
                    this.RaisePropertyChanged("ComplaintStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComplaintStatusName {
            get {
                return this.ComplaintStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplaintStatusNameField, value) != true)) {
                    this.ComplaintStatusNameField = value;
                    this.RaisePropertyChanged("ComplaintStatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplaintType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ComplaintType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComplaintTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplaintTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComplaintTypeID {
            get {
                return this.ComplaintTypeIDField;
            }
            set {
                if ((this.ComplaintTypeIDField.Equals(value) != true)) {
                    this.ComplaintTypeIDField = value;
                    this.RaisePropertyChanged("ComplaintTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComplaintTypeName {
            get {
                return this.ComplaintTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplaintTypeNameField, value) != true)) {
                    this.ComplaintTypeNameField = value;
                    this.RaisePropertyChanged("ComplaintTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class RegistrationType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegistrationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegistrationTypeID {
            get {
                return this.RegistrationTypeIDField;
            }
            set {
                if ((this.RegistrationTypeIDField.Equals(value) != true)) {
                    this.RegistrationTypeIDField = value;
                    this.RaisePropertyChanged("RegistrationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationTypeName {
            get {
                return this.RegistrationTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationTypeNameField, value) != true)) {
                    this.RegistrationTypeNameField = value;
                    this.RaisePropertyChanged("RegistrationTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentTypeID {
            get {
                return this.TreatmentTypeIDField;
            }
            set {
                if ((this.TreatmentTypeIDField.Equals(value) != true)) {
                    this.TreatmentTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentTypeName {
            get {
                return this.TreatmentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentTypeNameField, value) != true)) {
                    this.TreatmentTypeNameField = value;
                    this.RaisePropertyChanged("TreatmentTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AreasofExpertise", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class AreasofExpertise : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AreasofExpertiseCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AreasofExpertiseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreasofExpertiseNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreasofExpertiseCategoryID {
            get {
                return this.AreasofExpertiseCategoryIDField;
            }
            set {
                if ((this.AreasofExpertiseCategoryIDField.Equals(value) != true)) {
                    this.AreasofExpertiseCategoryIDField = value;
                    this.RaisePropertyChanged("AreasofExpertiseCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreasofExpertiseID {
            get {
                return this.AreasofExpertiseIDField;
            }
            set {
                if ((this.AreasofExpertiseIDField.Equals(value) != true)) {
                    this.AreasofExpertiseIDField = value;
                    this.RaisePropertyChanged("AreasofExpertiseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreasofExpertiseName {
            get {
                return this.AreasofExpertiseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreasofExpertiseNameField, value) != true)) {
                    this.AreasofExpertiseNameField = value;
                    this.RaisePropertyChanged("AreasofExpertiseName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientImpactValue", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientImpactValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientImpactValueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientImpactValueNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientImpactValueID {
            get {
                return this.PatientImpactValueIDField;
            }
            set {
                if ((this.PatientImpactValueIDField.Equals(value) != true)) {
                    this.PatientImpactValueIDField = value;
                    this.RaisePropertyChanged("PatientImpactValueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientImpactValueName {
            get {
                return this.PatientImpactValueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientImpactValueNameField, value) != true)) {
                    this.PatientImpactValueNameField = value;
                    this.RaisePropertyChanged("PatientImpactValueName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UKPostCode", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class UKPostCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EastingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NorthingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiansLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiansLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WardCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountyCode {
            get {
                return this.CountyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyCodeField, value) != true)) {
                    this.CountyCodeField = value;
                    this.RaisePropertyChanged("CountyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string District {
            get {
                return this.DistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictField, value) != true)) {
                    this.DistrictField = value;
                    this.RaisePropertyChanged("District");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictCode {
            get {
                return this.DistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictCodeField, value) != true)) {
                    this.DistrictCodeField = value;
                    this.RaisePropertyChanged("DistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Easting {
            get {
                return this.EastingField;
            }
            set {
                if ((this.EastingField.Equals(value) != true)) {
                    this.EastingField = value;
                    this.RaisePropertyChanged("Easting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridRef {
            get {
                return this.GridRefField;
            }
            set {
                if ((object.ReferenceEquals(this.GridRefField, value) != true)) {
                    this.GridRefField = value;
                    this.RaisePropertyChanged("GridRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Northing {
            get {
                return this.NorthingField;
            }
            set {
                if ((this.NorthingField.Equals(value) != true)) {
                    this.NorthingField = value;
                    this.RaisePropertyChanged("Northing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RadiansLatitude {
            get {
                return this.RadiansLatitudeField;
            }
            set {
                if ((this.RadiansLatitudeField.Equals(value) != true)) {
                    this.RadiansLatitudeField = value;
                    this.RaisePropertyChanged("RadiansLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RadiansLongitude {
            get {
                return this.RadiansLongitudeField;
            }
            set {
                if ((this.RadiansLongitudeField.Equals(value) != true)) {
                    this.RadiansLongitudeField = value;
                    this.RaisePropertyChanged("RadiansLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ward {
            get {
                return this.WardField;
            }
            set {
                if ((object.ReferenceEquals(this.WardField, value) != true)) {
                    this.WardField = value;
                    this.RaisePropertyChanged("Ward");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WardCode {
            get {
                return this.WardCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WardCodeField, value) != true)) {
                    this.WardCodeField = value;
                    this.RaisePropertyChanged("WardCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PsychologicalFactor", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PsychologicalFactor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PsychologicalFactorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PsychologicalFactorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PsychologicalFactorID {
            get {
                return this.PsychologicalFactorIDField;
            }
            set {
                if ((this.PsychologicalFactorIDField.Equals(value) != true)) {
                    this.PsychologicalFactorIDField = value;
                    this.RaisePropertyChanged("PsychologicalFactorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PsychologicalFactorName {
            get {
                return this.PsychologicalFactorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PsychologicalFactorNameField, value) != true)) {
                    this.PsychologicalFactorNameField = value;
                    this.RaisePropertyChanged("PsychologicalFactorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientWorkstatus", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientWorkstatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientWorkstatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientWorkstatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientWorkstatusID {
            get {
                return this.PatientWorkstatusIDField;
            }
            set {
                if ((this.PatientWorkstatusIDField.Equals(value) != true)) {
                    this.PatientWorkstatusIDField = value;
                    this.RaisePropertyChanged("PatientWorkstatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientWorkstatusName {
            get {
                return this.PatientWorkstatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientWorkstatusNameField, value) != true)) {
                    this.PatientWorkstatusNameField = value;
                    this.RaisePropertyChanged("PatientWorkstatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientImpact", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientImpact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientImpactIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientImpactNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientImpactID {
            get {
                return this.PatientImpactIDField;
            }
            set {
                if ((this.PatientImpactIDField.Equals(value) != true)) {
                    this.PatientImpactIDField = value;
                    this.RaisePropertyChanged("PatientImpactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientImpactName {
            get {
                return this.PatientImpactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientImpactNameField, value) != true)) {
                    this.PatientImpactNameField = value;
                    this.RaisePropertyChanged("PatientImpactName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientImpactOnWork", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientImpactOnWork : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientImpactOnWorkIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientImpactOnWorkNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientImpactOnWorkID {
            get {
                return this.PatientImpactOnWorkIDField;
            }
            set {
                if ((this.PatientImpactOnWorkIDField.Equals(value) != true)) {
                    this.PatientImpactOnWorkIDField = value;
                    this.RaisePropertyChanged("PatientImpactOnWorkID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientImpactOnWorkName {
            get {
                return this.PatientImpactOnWorkNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientImpactOnWorkNameField, value) != true)) {
                    this.PatientImpactOnWorkNameField = value;
                    this.RaisePropertyChanged("PatientImpactOnWorkName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProposedTreatmentMethod", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ProposedTreatmentMethod : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProposedTreatmentMethodIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposedTreatmentMethodNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProposedTreatmentMethodID {
            get {
                return this.ProposedTreatmentMethodIDField;
            }
            set {
                if ((this.ProposedTreatmentMethodIDField.Equals(value) != true)) {
                    this.ProposedTreatmentMethodIDField = value;
                    this.RaisePropertyChanged("ProposedTreatmentMethodID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposedTreatmentMethodName {
            get {
                return this.ProposedTreatmentMethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposedTreatmentMethodNameField, value) != true)) {
                    this.ProposedTreatmentMethodNameField = value;
                    this.RaisePropertyChanged("ProposedTreatmentMethodName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientLevelOfRecovery", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientLevelOfRecovery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientLevelOfRecoveryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientLevelOfRecoveryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientLevelOfRecoveryID {
            get {
                return this.PatientLevelOfRecoveryIDField;
            }
            set {
                if ((this.PatientLevelOfRecoveryIDField.Equals(value) != true)) {
                    this.PatientLevelOfRecoveryIDField = value;
                    this.RaisePropertyChanged("PatientLevelOfRecoveryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientLevelOfRecoveryName {
            get {
                return this.PatientLevelOfRecoveryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientLevelOfRecoveryNameField, value) != true)) {
                    this.PatientLevelOfRecoveryNameField = value;
                    this.RaisePropertyChanged("PatientLevelOfRecoveryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentCategoryBespokeService", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentCategoryBespokeService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BespokeServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryBespokeServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BespokeServiceID {
            get {
                return this.BespokeServiceIDField;
            }
            set {
                if ((this.BespokeServiceIDField.Equals(value) != true)) {
                    this.BespokeServiceIDField = value;
                    this.RaisePropertyChanged("BespokeServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryBespokeServiceID {
            get {
                return this.TreatmentCategoryBespokeServiceIDField;
            }
            set {
                if ((this.TreatmentCategoryBespokeServiceIDField.Equals(value) != true)) {
                    this.TreatmentCategoryBespokeServiceIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryBespokeServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Duration", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class Duration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DurationID {
            get {
                return this.DurationIDField;
            }
            set {
                if ((this.DurationIDField.Equals(value) != true)) {
                    this.DurationIDField = value;
                    this.RaisePropertyChanged("DurationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationName {
            get {
                return this.DurationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationNameField, value) != true)) {
                    this.DurationNameField = value;
                    this.RaisePropertyChanged("DurationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientRole", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientRoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientRoleID {
            get {
                return this.PatientRoleIDField;
            }
            set {
                if ((this.PatientRoleIDField.Equals(value) != true)) {
                    this.PatientRoleIDField = value;
                    this.RaisePropertyChanged("PatientRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientRoleName {
            get {
                return this.PatientRoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientRoleNameField, value) != true)) {
                    this.PatientRoleNameField = value;
                    this.RaisePropertyChanged("PatientRoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SymptomDescription", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SymptomDescription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SymptomDescriptionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymptomDescriptionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SymptomDescriptionID {
            get {
                return this.SymptomDescriptionIDField;
            }
            set {
                if ((this.SymptomDescriptionIDField.Equals(value) != true)) {
                    this.SymptomDescriptionIDField = value;
                    this.RaisePropertyChanged("SymptomDescriptionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SymptomDescriptionName {
            get {
                return this.SymptomDescriptionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SymptomDescriptionNameField, value) != true)) {
                    this.SymptomDescriptionNameField = value;
                    this.RaisePropertyChanged("SymptomDescriptionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StrengthTesting", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class StrengthTesting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrengthTestingDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StrengthTestingIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrengthTestingDescription {
            get {
                return this.StrengthTestingDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StrengthTestingDescriptionField, value) != true)) {
                    this.StrengthTestingDescriptionField = value;
                    this.RaisePropertyChanged("StrengthTestingDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StrengthTestingID {
            get {
                return this.StrengthTestingIDField;
            }
            set {
                if ((this.StrengthTestingIDField.Equals(value) != true)) {
                    this.StrengthTestingIDField = value;
                    this.RaisePropertyChanged("StrengthTestingID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RestrictionRange", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class RestrictionRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionRangeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RestrictionRangeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionRangeDescription {
            get {
                return this.RestrictionRangeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionRangeDescriptionField, value) != true)) {
                    this.RestrictionRangeDescriptionField = value;
                    this.RaisePropertyChanged("RestrictionRangeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RestrictionRangeID {
            get {
                return this.RestrictionRangeIDField;
            }
            set {
                if ((this.RestrictionRangeIDField.Equals(value) != true)) {
                    this.RestrictionRangeIDField = value;
                    this.RaisePropertyChanged("RestrictionRangeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AffectedArea", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class AffectedArea : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AffectedAreaDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AffectedAreaIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AffectedAreaDescription {
            get {
                return this.AffectedAreaDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AffectedAreaDescriptionField, value) != true)) {
                    this.AffectedAreaDescriptionField = value;
                    this.RaisePropertyChanged("AffectedAreaDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AffectedAreaID {
            get {
                return this.AffectedAreaIDField;
            }
            set {
                if ((this.AffectedAreaIDField.Equals(value) != true)) {
                    this.AffectedAreaIDField = value;
                    this.RaisePropertyChanged("AffectedAreaID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Admitted", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class Admitted : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdmittedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdmittedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdmittedID {
            get {
                return this.AdmittedIDField;
            }
            set {
                if ((this.AdmittedIDField.Equals(value) != true)) {
                    this.AdmittedIDField = value;
                    this.RaisePropertyChanged("AdmittedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdmittedName {
            get {
                return this.AdmittedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AdmittedNameField, value) != true)) {
                    this.AdmittedNameField = value;
                    this.RaisePropertyChanged("AdmittedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmploymentType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class EmploymentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmploymentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmploymentTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmploymentTypeID {
            get {
                return this.EmploymentTypeIDField;
            }
            set {
                if ((this.EmploymentTypeIDField.Equals(value) != true)) {
                    this.EmploymentTypeIDField = value;
                    this.RaisePropertyChanged("EmploymentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmploymentTypeName {
            get {
                return this.EmploymentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmploymentTypeNameField, value) != true)) {
                    this.EmploymentTypeNameField = value;
                    this.RaisePropertyChanged("EmploymentTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FitForWork", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class FitForWork : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FitforWorkIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FitforWorkNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FitforWorkID {
            get {
                return this.FitforWorkIDField;
            }
            set {
                if ((this.FitforWorkIDField.Equals(value) != true)) {
                    this.FitforWorkIDField = value;
                    this.RaisePropertyChanged("FitforWorkID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FitforWorkName {
            get {
                return this.FitforWorkNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FitforWorkNameField, value) != true)) {
                    this.FitforWorkNameField = value;
                    this.RaisePropertyChanged("FitforWorkName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyCriteria", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PolicyCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PolicyCriteriaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyCriteriaNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PolicyCriteriaID {
            get {
                return this.PolicyCriteriaIDField;
            }
            set {
                if ((this.PolicyCriteriaIDField.Equals(value) != true)) {
                    this.PolicyCriteriaIDField = value;
                    this.RaisePropertyChanged("PolicyCriteriaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyCriteriaName {
            get {
                return this.PolicyCriteriaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyCriteriaNameField, value) != true)) {
                    this.PolicyCriteriaNameField = value;
                    this.RaisePropertyChanged("PolicyCriteriaName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PolicyType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PolicyTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PolicyTypeID {
            get {
                return this.PolicyTypeIDField;
            }
            set {
                if ((this.PolicyTypeIDField.Equals(value) != true)) {
                    this.PolicyTypeIDField = value;
                    this.RaisePropertyChanged("PolicyTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyTypeName {
            get {
                return this.PolicyTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyTypeNameField, value) != true)) {
                    this.PolicyTypeNameField = value;
                    this.RaisePropertyChanged("PolicyTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeCover", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TypeCover : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeCoverIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCoverNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeCoverID {
            get {
                return this.TypeCoverIDField;
            }
            set {
                if ((this.TypeCoverIDField.Equals(value) != true)) {
                    this.TypeCoverIDField = value;
                    this.RaisePropertyChanged("TypeCoverID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCoverName {
            get {
                return this.TypeCoverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCoverNameField, value) != true)) {
                    this.TypeCoverNameField = value;
                    this.RaisePropertyChanged("TypeCoverName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class WorkType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkName {
            get {
                return this.WorkNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkNameField, value) != true)) {
                    this.WorkNameField = value;
                    this.RaisePropertyChanged("WorkName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkTypeID {
            get {
                return this.WorkTypeIDField;
            }
            set {
                if ((this.WorkTypeIDField.Equals(value) != true)) {
                    this.WorkTypeIDField = value;
                    this.RaisePropertyChanged("WorkTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class RoleType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleTypeID {
            get {
                return this.RoleTypeIDField;
            }
            set {
                if ((this.RoleTypeIDField.Equals(value) != true)) {
                    this.RoleTypeIDField = value;
                    this.RaisePropertyChanged("RoleTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reinsurer", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class Reinsurer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameOfReinsurerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReinsurerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameOfReinsurer {
            get {
                return this.NameOfReinsurerField;
            }
            set {
                if ((object.ReferenceEquals(this.NameOfReinsurerField, value) != true)) {
                    this.NameOfReinsurerField = value;
                    this.RaisePropertyChanged("NameOfReinsurer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReinsurerID {
            get {
                return this.ReinsurerIDField;
            }
            set {
                if ((this.ReinsurerIDField.Equals(value) != true)) {
                    this.ReinsurerIDField = value;
                    this.RaisePropertyChanged("ReinsurerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gender", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class Gender : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenderID {
            get {
                return this.GenderIDField;
            }
            set {
                if ((this.GenderIDField.Equals(value) != true)) {
                    this.GenderIDField = value;
                    this.RaisePropertyChanged("GenderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenderName {
            get {
                return this.GenderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderNameField, value) != true)) {
                    this.GenderNameField = value;
                    this.RaisePropertyChanged("GenderName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdditionalTest", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class AdditionalTest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdditionalTestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdditionalTestID {
            get {
                return this.AdditionalTestIDField;
            }
            set {
                if ((this.AdditionalTestIDField.Equals(value) != true)) {
                    this.AdditionalTestIDField = value;
                    this.RaisePropertyChanged("AdditionalTestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReasonForReferral", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ReasonForReferral : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReasonForReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReasonForReferralID {
            get {
                return this.ReasonForReferralIDField;
            }
            set {
                if ((this.ReasonForReferralIDField.Equals(value) != true)) {
                    this.ReasonForReferralIDField = value;
                    this.RaisePropertyChanged("ReasonForReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NetworkRailStandardApplicable", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class NetworkRailStandardApplicable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NetworkRailStandardApplicableIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NetworkRailStandardApplicableID {
            get {
                return this.NetworkRailStandardApplicableIDField;
            }
            set {
                if ((this.NetworkRailStandardApplicableIDField.Equals(value) != true)) {
                    this.NetworkRailStandardApplicableIDField = value;
                    this.RaisePropertyChanged("NetworkRailStandardApplicableID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmploymentQuery", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class EmploymentQuery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmploymentQueryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmploymentQueryID {
            get {
                return this.EmploymentQueryIDField;
            }
            set {
                if ((this.EmploymentQueryIDField.Equals(value) != true)) {
                    this.EmploymentQueryIDField = value;
                    this.RaisePropertyChanged("EmploymentQueryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueryName {
            get {
                return this.QueryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryNameField, value) != true)) {
                    this.QueryNameField = value;
                    this.RaisePropertyChanged("QueryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ITSService.LookUpService.ILookUpService")]
    public interface ILookUpService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetTreatmentPeriodTypes", ReplyAction="http://tempuri.org/ILookUpService/GetTreatmentPeriodTypesResponse")]
        ITSWebApp.ITSService.LookUpService.TreatmentPeriodType[] GetTreatmentPeriodTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllTreatmentCategory", ReplyAction="http://tempuri.org/ILookUpService/GetAllTreatmentCategoryResponse")]
        ITSWebApp.ITSService.LookUpService.TreatmentCategory[] GetAllTreatmentCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllPricingType", ReplyAction="http://tempuri.org/ILookUpService/GetAllPricingTypeResponse")]
        ITSWebApp.ITSService.LookUpService.PricingType[] GetAllPricingType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllServiceLevelAgreement", ReplyAction="http://tempuri.org/ILookUpService/GetAllServiceLevelAgreementResponse")]
        ITSWebApp.ITSService.LookUpService.ServiceLevelAgreement[] GetAllServiceLevelAgreement();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllAssessmentService", ReplyAction="http://tempuri.org/ILookUpService/GetAllAssessmentServiceResponse")]
        ITSWebApp.ITSService.LookUpService.AssessmentService[] GetAllAssessmentService();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllAssessmentType", ReplyAction="http://tempuri.org/ILookUpService/GetAllAssessmentTypeResponse")]
        ITSWebApp.ITSService.LookUpService.AssessmentType[] GetAllAssessmentType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllDelegatedAuthorisation", ReplyAction="http://tempuri.org/ILookUpService/GetAllDelegatedAuthorisationResponse")]
        ITSWebApp.ITSService.LookUpService.DelegatedAuthorisation[] GetAllDelegatedAuthorisation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetPricingTypesByTreatmentCategoryID", ReplyAction="http://tempuri.org/ILookUpService/GetPricingTypesByTreatmentCategoryIDResponse")]
        ITSWebApp.ITSService.LookUpService.TreatmentCategoriesPricingTypes[] GetPricingTypesByTreatmentCategoryID(int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllInvoiceMethod", ReplyAction="http://tempuri.org/ILookUpService/GetAllInvoiceMethodResponse")]
        ITSWebApp.ITSService.LookUpService.InvoiceMethod[] GetAllInvoiceMethod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllDelegatedAuthorisationTypes", ReplyAction="http://tempuri.org/ILookUpService/GetAllDelegatedAuthorisationTypesResponse")]
        ITSWebApp.ITSService.LookUpService.DelegatedAuthorisationTypes[] GetAllDelegatedAuthorisationTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllDocumentSetupTypes", ReplyAction="http://tempuri.org/ILookUpService/GetAllDocumentSetupTypesResponse")]
        ITSWebApp.ITSService.LookUpService.DocumentSetupTypes[] GetAllDocumentSetupTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllEmailType", ReplyAction="http://tempuri.org/ILookUpService/GetAllEmailTypeResponse")]
        ITSWebApp.ITSService.LookUpService.EmailType[] GetAllEmailType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllComplaintStatus", ReplyAction="http://tempuri.org/ILookUpService/GetAllComplaintStatusResponse")]
        ITSWebApp.ITSService.LookUpService.ComplaintStatus[] GetAllComplaintStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllComplaintType", ReplyAction="http://tempuri.org/ILookUpService/GetAllComplaintTypeResponse")]
        ITSWebApp.ITSService.LookUpService.ComplaintType[] GetAllComplaintType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllRegistrationType", ReplyAction="http://tempuri.org/ILookUpService/GetAllRegistrationTypeResponse")]
        ITSWebApp.ITSService.LookUpService.RegistrationType[] GetAllRegistrationType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllTreatmentType", ReplyAction="http://tempuri.org/ILookUpService/GetAllTreatmentTypeResponse")]
        ITSWebApp.ITSService.LookUpService.TreatmentType[] GetAllTreatmentType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllAreasofExpertise", ReplyAction="http://tempuri.org/ILookUpService/GetAllAreasofExpertiseResponse")]
        ITSWebApp.ITSService.LookUpService.AreasofExpertise[] GetAllAreasofExpertise();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllPatientImpactValues", ReplyAction="http://tempuri.org/ILookUpService/GetAllPatientImpactValuesResponse")]
        ITSWebApp.ITSService.LookUpService.PatientImpactValue[] GetAllPatientImpactValues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetPostCodeInfo", ReplyAction="http://tempuri.org/ILookUpService/GetPostCodeInfoResponse")]
        ITSWebApp.ITSService.LookUpService.UKPostCode GetPostCodeInfo(string postCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllPsychologicalFactors", ReplyAction="http://tempuri.org/ILookUpService/GetAllPsychologicalFactorsResponse")]
        ITSWebApp.ITSService.LookUpService.PsychologicalFactor[] GetAllPsychologicalFactors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllPatientWorkstatus", ReplyAction="http://tempuri.org/ILookUpService/GetAllPatientWorkstatusResponse")]
        ITSWebApp.ITSService.LookUpService.PatientWorkstatus[] GetAllPatientWorkstatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllPatientImpacts", ReplyAction="http://tempuri.org/ILookUpService/GetAllPatientImpactsResponse")]
        ITSWebApp.ITSService.LookUpService.PatientImpact[] GetAllPatientImpacts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllPatientImpactOnWork", ReplyAction="http://tempuri.org/ILookUpService/GetAllPatientImpactOnWorkResponse")]
        ITSWebApp.ITSService.LookUpService.PatientImpactOnWork[] GetAllPatientImpactOnWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllProposedTreatmentMethod", ReplyAction="http://tempuri.org/ILookUpService/GetAllProposedTreatmentMethodResponse")]
        ITSWebApp.ITSService.LookUpService.ProposedTreatmentMethod[] GetAllProposedTreatmentMethod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllPatientLevelOfRecovery", ReplyAction="http://tempuri.org/ILookUpService/GetAllPatientLevelOfRecoveryResponse")]
        ITSWebApp.ITSService.LookUpService.PatientLevelOfRecovery[] GetAllPatientLevelOfRecovery();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetTreatmentCategoryBespokeServicesByTreatmentC" +
            "ategoryID", ReplyAction="http://tempuri.org/ILookUpService/GetTreatmentCategoryBespokeServicesByTreatmentC" +
            "ategoryIDResponse")]
        ITSWebApp.ITSService.LookUpService.TreatmentCategoryBespokeService[] GetTreatmentCategoryBespokeServicesByTreatmentCategoryID(int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllDuration", ReplyAction="http://tempuri.org/ILookUpService/GetAllDurationResponse")]
        ITSWebApp.ITSService.LookUpService.Duration[] GetAllDuration();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllPatientRole", ReplyAction="http://tempuri.org/ILookUpService/GetAllPatientRoleResponse")]
        ITSWebApp.ITSService.LookUpService.PatientRole[] GetAllPatientRole();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllSymptomDescription", ReplyAction="http://tempuri.org/ILookUpService/GetAllSymptomDescriptionResponse")]
        ITSWebApp.ITSService.LookUpService.SymptomDescription[] GetAllSymptomDescription();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllStrengthTesting", ReplyAction="http://tempuri.org/ILookUpService/GetAllStrengthTestingResponse")]
        ITSWebApp.ITSService.LookUpService.StrengthTesting[] GetAllStrengthTesting();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllRestrictionRange", ReplyAction="http://tempuri.org/ILookUpService/GetAllRestrictionRangeResponse")]
        ITSWebApp.ITSService.LookUpService.RestrictionRange[] GetAllRestrictionRange();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllAffecteArea", ReplyAction="http://tempuri.org/ILookUpService/GetAllAffecteAreaResponse")]
        ITSWebApp.ITSService.LookUpService.AffectedArea[] GetAllAffecteArea();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetSymptomDescriptionDesciptionByID", ReplyAction="http://tempuri.org/ILookUpService/GetSymptomDescriptionDesciptionByIDResponse")]
        string GetSymptomDescriptionDesciptionByID(int _symptomDescriptionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetStrengthTestingDesciptionByID", ReplyAction="http://tempuri.org/ILookUpService/GetStrengthTestingDesciptionByIDResponse")]
        string GetStrengthTestingDesciptionByID(int _strengthTestingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetRestrictionRangeDesciptionByID", ReplyAction="http://tempuri.org/ILookUpService/GetRestrictionRangeDesciptionByIDResponse")]
        string GetRestrictionRangeDesciptionByID(int _restrictionRangeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAffectedAreaDesciptionByID", ReplyAction="http://tempuri.org/ILookUpService/GetAffectedAreaDesciptionByIDResponse")]
        string GetAffectedAreaDesciptionByID(int _affectedAreaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllAdmitted", ReplyAction="http://tempuri.org/ILookUpService/GetAllAdmittedResponse")]
        ITSWebApp.ITSService.LookUpService.Admitted[] GetAllAdmitted();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllEmploymentType", ReplyAction="http://tempuri.org/ILookUpService/GetAllEmploymentTypeResponse")]
        ITSWebApp.ITSService.LookUpService.EmploymentType[] GetAllEmploymentType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllFitForWork", ReplyAction="http://tempuri.org/ILookUpService/GetAllFitForWorkResponse")]
        ITSWebApp.ITSService.LookUpService.FitForWork[] GetAllFitForWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllPolicyCriteria", ReplyAction="http://tempuri.org/ILookUpService/GetAllPolicyCriteriaResponse")]
        ITSWebApp.ITSService.LookUpService.PolicyCriteria[] GetAllPolicyCriteria();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllPolicyType", ReplyAction="http://tempuri.org/ILookUpService/GetAllPolicyTypeResponse")]
        ITSWebApp.ITSService.LookUpService.PolicyType[] GetAllPolicyType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllTypeCover", ReplyAction="http://tempuri.org/ILookUpService/GetAllTypeCoverResponse")]
        ITSWebApp.ITSService.LookUpService.TypeCover[] GetAllTypeCover();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllWorkType", ReplyAction="http://tempuri.org/ILookUpService/GetAllWorkTypeResponse")]
        ITSWebApp.ITSService.LookUpService.WorkType[] GetAllWorkType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllRoleType", ReplyAction="http://tempuri.org/ILookUpService/GetAllRoleTypeResponse")]
        ITSWebApp.ITSService.LookUpService.RoleType[] GetAllRoleType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllReinsurer", ReplyAction="http://tempuri.org/ILookUpService/GetAllReinsurerResponse")]
        ITSWebApp.ITSService.LookUpService.Reinsurer[] GetAllReinsurer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllGenderTypes", ReplyAction="http://tempuri.org/ILookUpService/GetAllGenderTypesResponse")]
        ITSWebApp.ITSService.LookUpService.Gender[] GetAllGenderTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllAdditionalTest", ReplyAction="http://tempuri.org/ILookUpService/GetAllAdditionalTestResponse")]
        ITSWebApp.ITSService.LookUpService.AdditionalTest[] GetAllAdditionalTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllReasonForReferral", ReplyAction="http://tempuri.org/ILookUpService/GetAllReasonForReferralResponse")]
        ITSWebApp.ITSService.LookUpService.ReasonForReferral[] GetAllReasonForReferral();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllNetworkRailStandardApplicable", ReplyAction="http://tempuri.org/ILookUpService/GetAllNetworkRailStandardApplicableResponse")]
        ITSWebApp.ITSService.LookUpService.NetworkRailStandardApplicable[] GetAllNetworkRailStandardApplicable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpService/GetAllEmploymentQuery", ReplyAction="http://tempuri.org/ILookUpService/GetAllEmploymentQueryResponse")]
        ITSWebApp.ITSService.LookUpService.EmploymentQuery[] GetAllEmploymentQuery();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILookUpServiceChannel : ITSWebApp.ITSService.LookUpService.ILookUpService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LookUpServiceClient : System.ServiceModel.ClientBase<ITSWebApp.ITSService.LookUpService.ILookUpService>, ITSWebApp.ITSService.LookUpService.ILookUpService {
        
        public LookUpServiceClient() {
        }
        
        public LookUpServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LookUpServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LookUpServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LookUpServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ITSWebApp.ITSService.LookUpService.TreatmentPeriodType[] GetTreatmentPeriodTypes() {
            return base.Channel.GetTreatmentPeriodTypes();
        }
        
        public ITSWebApp.ITSService.LookUpService.TreatmentCategory[] GetAllTreatmentCategory() {
            return base.Channel.GetAllTreatmentCategory();
        }
        
        public ITSWebApp.ITSService.LookUpService.PricingType[] GetAllPricingType() {
            return base.Channel.GetAllPricingType();
        }
        
        public ITSWebApp.ITSService.LookUpService.ServiceLevelAgreement[] GetAllServiceLevelAgreement() {
            return base.Channel.GetAllServiceLevelAgreement();
        }
        
        public ITSWebApp.ITSService.LookUpService.AssessmentService[] GetAllAssessmentService() {
            return base.Channel.GetAllAssessmentService();
        }
        
        public ITSWebApp.ITSService.LookUpService.AssessmentType[] GetAllAssessmentType() {
            return base.Channel.GetAllAssessmentType();
        }
        
        public ITSWebApp.ITSService.LookUpService.DelegatedAuthorisation[] GetAllDelegatedAuthorisation() {
            return base.Channel.GetAllDelegatedAuthorisation();
        }
        
        public ITSWebApp.ITSService.LookUpService.TreatmentCategoriesPricingTypes[] GetPricingTypesByTreatmentCategoryID(int treatmentCategoryID) {
            return base.Channel.GetPricingTypesByTreatmentCategoryID(treatmentCategoryID);
        }
        
        public ITSWebApp.ITSService.LookUpService.InvoiceMethod[] GetAllInvoiceMethod() {
            return base.Channel.GetAllInvoiceMethod();
        }
        
        public ITSWebApp.ITSService.LookUpService.DelegatedAuthorisationTypes[] GetAllDelegatedAuthorisationTypes() {
            return base.Channel.GetAllDelegatedAuthorisationTypes();
        }
        
        public ITSWebApp.ITSService.LookUpService.DocumentSetupTypes[] GetAllDocumentSetupTypes() {
            return base.Channel.GetAllDocumentSetupTypes();
        }
        
        public ITSWebApp.ITSService.LookUpService.EmailType[] GetAllEmailType() {
            return base.Channel.GetAllEmailType();
        }
        
        public ITSWebApp.ITSService.LookUpService.ComplaintStatus[] GetAllComplaintStatus() {
            return base.Channel.GetAllComplaintStatus();
        }
        
        public ITSWebApp.ITSService.LookUpService.ComplaintType[] GetAllComplaintType() {
            return base.Channel.GetAllComplaintType();
        }
        
        public ITSWebApp.ITSService.LookUpService.RegistrationType[] GetAllRegistrationType() {
            return base.Channel.GetAllRegistrationType();
        }
        
        public ITSWebApp.ITSService.LookUpService.TreatmentType[] GetAllTreatmentType() {
            return base.Channel.GetAllTreatmentType();
        }
        
        public ITSWebApp.ITSService.LookUpService.AreasofExpertise[] GetAllAreasofExpertise() {
            return base.Channel.GetAllAreasofExpertise();
        }
        
        public ITSWebApp.ITSService.LookUpService.PatientImpactValue[] GetAllPatientImpactValues() {
            return base.Channel.GetAllPatientImpactValues();
        }
        
        public ITSWebApp.ITSService.LookUpService.UKPostCode GetPostCodeInfo(string postCode) {
            return base.Channel.GetPostCodeInfo(postCode);
        }
        
        public ITSWebApp.ITSService.LookUpService.PsychologicalFactor[] GetAllPsychologicalFactors() {
            return base.Channel.GetAllPsychologicalFactors();
        }
        
        public ITSWebApp.ITSService.LookUpService.PatientWorkstatus[] GetAllPatientWorkstatus() {
            return base.Channel.GetAllPatientWorkstatus();
        }
        
        public ITSWebApp.ITSService.LookUpService.PatientImpact[] GetAllPatientImpacts() {
            return base.Channel.GetAllPatientImpacts();
        }
        
        public ITSWebApp.ITSService.LookUpService.PatientImpactOnWork[] GetAllPatientImpactOnWork() {
            return base.Channel.GetAllPatientImpactOnWork();
        }
        
        public ITSWebApp.ITSService.LookUpService.ProposedTreatmentMethod[] GetAllProposedTreatmentMethod() {
            return base.Channel.GetAllProposedTreatmentMethod();
        }
        
        public ITSWebApp.ITSService.LookUpService.PatientLevelOfRecovery[] GetAllPatientLevelOfRecovery() {
            return base.Channel.GetAllPatientLevelOfRecovery();
        }
        
        public ITSWebApp.ITSService.LookUpService.TreatmentCategoryBespokeService[] GetTreatmentCategoryBespokeServicesByTreatmentCategoryID(int treatmentCategoryID) {
            return base.Channel.GetTreatmentCategoryBespokeServicesByTreatmentCategoryID(treatmentCategoryID);
        }
        
        public ITSWebApp.ITSService.LookUpService.Duration[] GetAllDuration() {
            return base.Channel.GetAllDuration();
        }
        
        public ITSWebApp.ITSService.LookUpService.PatientRole[] GetAllPatientRole() {
            return base.Channel.GetAllPatientRole();
        }
        
        public ITSWebApp.ITSService.LookUpService.SymptomDescription[] GetAllSymptomDescription() {
            return base.Channel.GetAllSymptomDescription();
        }
        
        public ITSWebApp.ITSService.LookUpService.StrengthTesting[] GetAllStrengthTesting() {
            return base.Channel.GetAllStrengthTesting();
        }
        
        public ITSWebApp.ITSService.LookUpService.RestrictionRange[] GetAllRestrictionRange() {
            return base.Channel.GetAllRestrictionRange();
        }
        
        public ITSWebApp.ITSService.LookUpService.AffectedArea[] GetAllAffecteArea() {
            return base.Channel.GetAllAffecteArea();
        }
        
        public string GetSymptomDescriptionDesciptionByID(int _symptomDescriptionID) {
            return base.Channel.GetSymptomDescriptionDesciptionByID(_symptomDescriptionID);
        }
        
        public string GetStrengthTestingDesciptionByID(int _strengthTestingID) {
            return base.Channel.GetStrengthTestingDesciptionByID(_strengthTestingID);
        }
        
        public string GetRestrictionRangeDesciptionByID(int _restrictionRangeID) {
            return base.Channel.GetRestrictionRangeDesciptionByID(_restrictionRangeID);
        }
        
        public string GetAffectedAreaDesciptionByID(int _affectedAreaID) {
            return base.Channel.GetAffectedAreaDesciptionByID(_affectedAreaID);
        }
        
        public ITSWebApp.ITSService.LookUpService.Admitted[] GetAllAdmitted() {
            return base.Channel.GetAllAdmitted();
        }
        
        public ITSWebApp.ITSService.LookUpService.EmploymentType[] GetAllEmploymentType() {
            return base.Channel.GetAllEmploymentType();
        }
        
        public ITSWebApp.ITSService.LookUpService.FitForWork[] GetAllFitForWork() {
            return base.Channel.GetAllFitForWork();
        }
        
        public ITSWebApp.ITSService.LookUpService.PolicyCriteria[] GetAllPolicyCriteria() {
            return base.Channel.GetAllPolicyCriteria();
        }
        
        public ITSWebApp.ITSService.LookUpService.PolicyType[] GetAllPolicyType() {
            return base.Channel.GetAllPolicyType();
        }
        
        public ITSWebApp.ITSService.LookUpService.TypeCover[] GetAllTypeCover() {
            return base.Channel.GetAllTypeCover();
        }
        
        public ITSWebApp.ITSService.LookUpService.WorkType[] GetAllWorkType() {
            return base.Channel.GetAllWorkType();
        }
        
        public ITSWebApp.ITSService.LookUpService.RoleType[] GetAllRoleType() {
            return base.Channel.GetAllRoleType();
        }
        
        public ITSWebApp.ITSService.LookUpService.Reinsurer[] GetAllReinsurer() {
            return base.Channel.GetAllReinsurer();
        }
        
        public ITSWebApp.ITSService.LookUpService.Gender[] GetAllGenderTypes() {
            return base.Channel.GetAllGenderTypes();
        }
        
        public ITSWebApp.ITSService.LookUpService.AdditionalTest[] GetAllAdditionalTest() {
            return base.Channel.GetAllAdditionalTest();
        }
        
        public ITSWebApp.ITSService.LookUpService.ReasonForReferral[] GetAllReasonForReferral() {
            return base.Channel.GetAllReasonForReferral();
        }
        
        public ITSWebApp.ITSService.LookUpService.NetworkRailStandardApplicable[] GetAllNetworkRailStandardApplicable() {
            return base.Channel.GetAllNetworkRailStandardApplicable();
        }
        
        public ITSWebApp.ITSService.LookUpService.EmploymentQuery[] GetAllEmploymentQuery() {
            return base.Channel.GetAllEmploymentQuery();
        }
    }
}
