//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ITSWebApp.ITSService.SupplierService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SuppliersName", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SuppliersName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Supplier", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class Supplier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEveningsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHomeVisitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsParkingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTriageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWeekendsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWheelChairAccessibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RankingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEvenings {
            get {
                return this.IsEveningsField;
            }
            set {
                if ((this.IsEveningsField.Equals(value) != true)) {
                    this.IsEveningsField = value;
                    this.RaisePropertyChanged("IsEvenings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHomeVisit {
            get {
                return this.IsHomeVisitField;
            }
            set {
                if ((this.IsHomeVisitField.Equals(value) != true)) {
                    this.IsHomeVisitField = value;
                    this.RaisePropertyChanged("IsHomeVisit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsParking {
            get {
                return this.IsParkingField;
            }
            set {
                if ((this.IsParkingField.Equals(value) != true)) {
                    this.IsParkingField = value;
                    this.RaisePropertyChanged("IsParking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTriage {
            get {
                return this.IsTriageField;
            }
            set {
                if ((this.IsTriageField.Equals(value) != true)) {
                    this.IsTriageField = value;
                    this.RaisePropertyChanged("IsTriage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWeekends {
            get {
                return this.IsWeekendsField;
            }
            set {
                if ((this.IsWeekendsField.Equals(value) != true)) {
                    this.IsWeekendsField = value;
                    this.RaisePropertyChanged("IsWeekends");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWheelChairAccessibility {
            get {
                return this.IsWheelChairAccessibilityField;
            }
            set {
                if ((this.IsWheelChairAccessibilityField.Equals(value) != true)) {
                    this.IsWheelChairAccessibilityField = value;
                    this.RaisePropertyChanged("IsWheelChairAccessibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Ranking {
            get {
                return this.RankingField;
            }
            set {
                if ((this.RankingField.Equals(value) != true)) {
                    this.RankingField = value;
                    this.RaisePropertyChanged("Ranking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedSupplierSearch", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PagedSupplierSearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierSearchTotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSWebApp.ITSService.SupplierService.SupplierSearch[] SupplierSearchsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierSearchTotalCount {
            get {
                return this.SupplierSearchTotalCountField;
            }
            set {
                if ((this.SupplierSearchTotalCountField.Equals(value) != true)) {
                    this.SupplierSearchTotalCountField = value;
                    this.RaisePropertyChanged("SupplierSearchTotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSWebApp.ITSService.SupplierService.SupplierSearch[] SupplierSearchs {
            get {
                return this.SupplierSearchsField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierSearchsField, value) != true)) {
                    this.SupplierSearchsField = value;
                    this.RaisePropertyChanged("SupplierSearchs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierSearch", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierSearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentCategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentCategoryName {
            get {
                return this.TreatmentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentCategoryNameField, value) != true)) {
                    this.TreatmentCategoryNameField = value;
                    this.RaisePropertyChanged("TreatmentCategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierTreatment", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierTreatment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierTreatmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierTreatmentID {
            get {
                return this.SupplierTreatmentIDField;
            }
            set {
                if ((this.SupplierTreatmentIDField.Equals(value) != true)) {
                    this.SupplierTreatmentIDField = value;
                    this.RaisePropertyChanged("SupplierTreatmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplaintStatus", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ComplaintStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComplaintStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplaintStatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComplaintStatusID {
            get {
                return this.ComplaintStatusIDField;
            }
            set {
                if ((this.ComplaintStatusIDField.Equals(value) != true)) {
                    this.ComplaintStatusIDField = value;
                    this.RaisePropertyChanged("ComplaintStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComplaintStatusName {
            get {
                return this.ComplaintStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplaintStatusNameField, value) != true)) {
                    this.ComplaintStatusNameField = value;
                    this.RaisePropertyChanged("ComplaintStatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplaintType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ComplaintType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComplaintTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplaintTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComplaintTypeID {
            get {
                return this.ComplaintTypeIDField;
            }
            set {
                if ((this.ComplaintTypeIDField.Equals(value) != true)) {
                    this.ComplaintTypeIDField = value;
                    this.RaisePropertyChanged("ComplaintTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComplaintTypeName {
            get {
                return this.ComplaintTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplaintTypeNameField, value) != true)) {
                    this.ComplaintTypeNameField = value;
                    this.RaisePropertyChanged("ComplaintTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierDocument", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentfullnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReferrerProjectTreatmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CaseId {
            get {
                return this.CaseIdField;
            }
            set {
                if ((this.CaseIdField.Equals(value) != true)) {
                    this.CaseIdField = value;
                    this.RaisePropertyChanged("CaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Documentfullname {
            get {
                return this.DocumentfullnameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentfullnameField, value) != true)) {
                    this.DocumentfullnameField = value;
                    this.RaisePropertyChanged("Documentfullname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReferrerProjectTreatmentID {
            get {
                return this.ReferrerProjectTreatmentIDField;
            }
            set {
                if ((this.ReferrerProjectTreatmentIDField.Equals(value) != true)) {
                    this.ReferrerProjectTreatmentIDField = value;
                    this.RaisePropertyChanged("ReferrerProjectTreatmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierDocumentID {
            get {
                return this.SupplierDocumentIDField;
            }
            set {
                if ((this.SupplierDocumentIDField.Equals(value) != true)) {
                    this.SupplierDocumentIDField = value;
                    this.RaisePropertyChanged("SupplierDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadPath {
            get {
                return this.UploadPathField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadPathField, value) != true)) {
                    this.UploadPathField = value;
                    this.RaisePropertyChanged("UploadPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierDocumentUser", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierDocumentUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierDocumentID {
            get {
                return this.SupplierDocumentIDField;
            }
            set {
                if ((this.SupplierDocumentIDField.Equals(value) != true)) {
                    this.SupplierDocumentIDField = value;
                    this.RaisePropertyChanged("SupplierDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadPath {
            get {
                return this.UploadPathField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadPathField, value) != true)) {
                    this.UploadPathField = value;
                    this.RaisePropertyChanged("UploadPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierComplaint", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierComplaint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ComplaintDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplaintDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComplaintStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComplaintTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierComplaintIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ComplaintDate {
            get {
                return this.ComplaintDateField;
            }
            set {
                if ((this.ComplaintDateField.Equals(value) != true)) {
                    this.ComplaintDateField = value;
                    this.RaisePropertyChanged("ComplaintDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComplaintDescription {
            get {
                return this.ComplaintDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplaintDescriptionField, value) != true)) {
                    this.ComplaintDescriptionField = value;
                    this.RaisePropertyChanged("ComplaintDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComplaintStatusID {
            get {
                return this.ComplaintStatusIDField;
            }
            set {
                if ((this.ComplaintStatusIDField.Equals(value) != true)) {
                    this.ComplaintStatusIDField = value;
                    this.RaisePropertyChanged("ComplaintStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComplaintTypeID {
            get {
                return this.ComplaintTypeIDField;
            }
            set {
                if ((this.ComplaintTypeIDField.Equals(value) != true)) {
                    this.ComplaintTypeIDField = value;
                    this.RaisePropertyChanged("ComplaintTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierComplaintID {
            get {
                return this.SupplierComplaintIDField;
            }
            set {
                if ((this.SupplierComplaintIDField.Equals(value) != true)) {
                    this.SupplierComplaintIDField = value;
                    this.RaisePropertyChanged("SupplierComplaintID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierTreatmentPricing", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierTreatmentPricing : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PricingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PricingTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierTreatmentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PricingID {
            get {
                return this.PricingIDField;
            }
            set {
                if ((this.PricingIDField.Equals(value) != true)) {
                    this.PricingIDField = value;
                    this.RaisePropertyChanged("PricingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PricingTypeID {
            get {
                return this.PricingTypeIDField;
            }
            set {
                if ((this.PricingTypeIDField.Equals(value) != true)) {
                    this.PricingTypeIDField = value;
                    this.RaisePropertyChanged("PricingTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierTreatmentID {
            get {
                return this.SupplierTreatmentIDField;
            }
            set {
                if ((this.SupplierTreatmentIDField.Equals(value) != true)) {
                    this.SupplierTreatmentIDField = value;
                    this.RaisePropertyChanged("SupplierTreatmentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class RegistrationType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegistrationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegistrationTypeID {
            get {
                return this.RegistrationTypeIDField;
            }
            set {
                if ((this.RegistrationTypeIDField.Equals(value) != true)) {
                    this.RegistrationTypeIDField = value;
                    this.RaisePropertyChanged("RegistrationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationTypeName {
            get {
                return this.RegistrationTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationTypeNameField, value) != true)) {
                    this.RegistrationTypeNameField = value;
                    this.RaisePropertyChanged("RegistrationTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierInsurance", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierInsurance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelOfCoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RenewalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierInsuredIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevelOfCover {
            get {
                return this.LevelOfCoverField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelOfCoverField, value) != true)) {
                    this.LevelOfCoverField = value;
                    this.RaisePropertyChanged("LevelOfCover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RenewalDate {
            get {
                return this.RenewalDateField;
            }
            set {
                if ((this.RenewalDateField.Equals(value) != true)) {
                    this.RenewalDateField = value;
                    this.RaisePropertyChanged("RenewalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierDocumentID {
            get {
                return this.SupplierDocumentIDField;
            }
            set {
                if ((this.SupplierDocumentIDField.Equals(value) != true)) {
                    this.SupplierDocumentIDField = value;
                    this.RaisePropertyChanged("SupplierDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierInsuredID {
            get {
                return this.SupplierInsuredIDField;
            }
            set {
                if ((this.SupplierInsuredIDField.Equals(value) != true)) {
                    this.SupplierInsuredIDField = value;
                    this.RaisePropertyChanged("SupplierInsuredID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierSiteAudit", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierSiteAudit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AuditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AuditPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SupplierDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierSiteAuditIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AuditDate {
            get {
                return this.AuditDateField;
            }
            set {
                if ((this.AuditDateField.Equals(value) != true)) {
                    this.AuditDateField = value;
                    this.RaisePropertyChanged("AuditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuditNotes {
            get {
                return this.AuditNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditNotesField, value) != true)) {
                    this.AuditNotesField = value;
                    this.RaisePropertyChanged("AuditNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AuditPass {
            get {
                return this.AuditPassField;
            }
            set {
                if ((this.AuditPassField.Equals(value) != true)) {
                    this.AuditPassField = value;
                    this.RaisePropertyChanged("AuditPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SupplierDocumentID {
            get {
                return this.SupplierDocumentIDField;
            }
            set {
                if ((this.SupplierDocumentIDField.Equals(value) != true)) {
                    this.SupplierDocumentIDField = value;
                    this.RaisePropertyChanged("SupplierDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierSiteAuditID {
            get {
                return this.SupplierSiteAuditIDField;
            }
            set {
                if ((this.SupplierSiteAuditIDField.Equals(value) != true)) {
                    this.SupplierSiteAuditIDField = value;
                    this.RaisePropertyChanged("SupplierSiteAuditID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierClinicalAudit", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierClinicalAudit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AuditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AuditPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierClinicalAuditIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AuditDate {
            get {
                return this.AuditDateField;
            }
            set {
                if ((this.AuditDateField.Equals(value) != true)) {
                    this.AuditDateField = value;
                    this.RaisePropertyChanged("AuditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AuditPass {
            get {
                return this.AuditPassField;
            }
            set {
                if ((this.AuditPassField.Equals(value) != true)) {
                    this.AuditPassField = value;
                    this.RaisePropertyChanged("AuditPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierClinicalAuditID {
            get {
                return this.SupplierClinicalAuditIDField;
            }
            set {
                if ((this.SupplierClinicalAuditIDField.Equals(value) != true)) {
                    this.SupplierClinicalAuditIDField = value;
                    this.RaisePropertyChanged("SupplierClinicalAuditID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierDocumentID {
            get {
                return this.SupplierDocumentIDField;
            }
            set {
                if ((this.SupplierDocumentIDField.Equals(value) != true)) {
                    this.SupplierDocumentIDField = value;
                    this.RaisePropertyChanged("SupplierDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierPractitioner", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierPractitioner : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PractitionerRegistrationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierPractitionerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PractitionerRegistrationID {
            get {
                return this.PractitionerRegistrationIDField;
            }
            set {
                if ((this.PractitionerRegistrationIDField.Equals(value) != true)) {
                    this.PractitionerRegistrationIDField = value;
                    this.RaisePropertyChanged("PractitionerRegistrationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierPractitionerID {
            get {
                return this.SupplierPractitionerIDField;
            }
            set {
                if ((this.SupplierPractitionerIDField.Equals(value) != true)) {
                    this.SupplierPractitionerIDField = value;
                    this.RaisePropertyChanged("SupplierPractitionerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierPractitionerTreatmentRegistration", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierPractitionerTreatmentRegistration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PractitionerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PractitionerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PractitionerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PractitionerRegistrationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierPractitionerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentCategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PractitionerFirstName {
            get {
                return this.PractitionerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PractitionerFirstNameField, value) != true)) {
                    this.PractitionerFirstNameField = value;
                    this.RaisePropertyChanged("PractitionerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PractitionerID {
            get {
                return this.PractitionerIDField;
            }
            set {
                if ((this.PractitionerIDField.Equals(value) != true)) {
                    this.PractitionerIDField = value;
                    this.RaisePropertyChanged("PractitionerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PractitionerLastName {
            get {
                return this.PractitionerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PractitionerLastNameField, value) != true)) {
                    this.PractitionerLastNameField = value;
                    this.RaisePropertyChanged("PractitionerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PractitionerRegistrationID {
            get {
                return this.PractitionerRegistrationIDField;
            }
            set {
                if ((this.PractitionerRegistrationIDField.Equals(value) != true)) {
                    this.PractitionerRegistrationIDField = value;
                    this.RaisePropertyChanged("PractitionerRegistrationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationNumber {
            get {
                return this.RegistrationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationNumberField, value) != true)) {
                    this.RegistrationNumberField = value;
                    this.RaisePropertyChanged("RegistrationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationTypeName {
            get {
                return this.RegistrationTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationTypeNameField, value) != true)) {
                    this.RegistrationTypeNameField = value;
                    this.RaisePropertyChanged("RegistrationTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierPractitionerID {
            get {
                return this.SupplierPractitionerIDField;
            }
            set {
                if ((this.SupplierPractitionerIDField.Equals(value) != true)) {
                    this.SupplierPractitionerIDField = value;
                    this.RaisePropertyChanged("SupplierPractitionerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentCategoryName {
            get {
                return this.TreatmentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentCategoryNameField, value) != true)) {
                    this.TreatmentCategoryNameField = value;
                    this.RaisePropertyChanged("TreatmentCategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PractitionerTreatmentRegistration", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PractitionerTreatmentRegistration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PractitionerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PractitionerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PractitionerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PractitionerRegistrationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentCategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PractitionerFirstName {
            get {
                return this.PractitionerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PractitionerFirstNameField, value) != true)) {
                    this.PractitionerFirstNameField = value;
                    this.RaisePropertyChanged("PractitionerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PractitionerID {
            get {
                return this.PractitionerIDField;
            }
            set {
                if ((this.PractitionerIDField.Equals(value) != true)) {
                    this.PractitionerIDField = value;
                    this.RaisePropertyChanged("PractitionerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PractitionerLastName {
            get {
                return this.PractitionerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PractitionerLastNameField, value) != true)) {
                    this.PractitionerLastNameField = value;
                    this.RaisePropertyChanged("PractitionerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PractitionerRegistrationID {
            get {
                return this.PractitionerRegistrationIDField;
            }
            set {
                if ((this.PractitionerRegistrationIDField.Equals(value) != true)) {
                    this.PractitionerRegistrationIDField = value;
                    this.RaisePropertyChanged("PractitionerRegistrationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationNumber {
            get {
                return this.RegistrationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationNumberField, value) != true)) {
                    this.RegistrationNumberField = value;
                    this.RaisePropertyChanged("RegistrationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationTypeName {
            get {
                return this.RegistrationTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationTypeNameField, value) != true)) {
                    this.RegistrationTypeNameField = value;
                    this.RaisePropertyChanged("RegistrationTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentCategoryName {
            get {
                return this.TreatmentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentCategoryNameField, value) != true)) {
                    this.TreatmentCategoryNameField = value;
                    this.RaisePropertyChanged("TreatmentCategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentTypeID {
            get {
                return this.TreatmentTypeIDField;
            }
            set {
                if ((this.TreatmentTypeIDField.Equals(value) != true)) {
                    this.TreatmentTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentTypeName {
            get {
                return this.TreatmentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentTypeNameField, value) != true)) {
                    this.TreatmentTypeNameField = value;
                    this.RaisePropertyChanged("TreatmentTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentCategoriesTreatmentType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentCategoriesTreatmentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryTreatmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryTreatmentTypeID {
            get {
                return this.TreatmentCategoryTreatmentTypeIDField;
            }
            set {
                if ((this.TreatmentCategoryTreatmentTypeIDField.Equals(value) != true)) {
                    this.TreatmentCategoryTreatmentTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryTreatmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentTypeID {
            get {
                return this.TreatmentTypeIDField;
            }
            set {
                if ((this.TreatmentTypeIDField.Equals(value) != true)) {
                    this.TreatmentTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentTypeName {
            get {
                return this.TreatmentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentTypeNameField, value) != true)) {
                    this.TreatmentTypeNameField = value;
                    this.RaisePropertyChanged("TreatmentTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentCategoriesRegistrationTypes", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentCategoriesRegistrationTypes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegistrationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryRegistrationTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegistrationTypeID {
            get {
                return this.RegistrationTypeIDField;
            }
            set {
                if ((this.RegistrationTypeIDField.Equals(value) != true)) {
                    this.RegistrationTypeIDField = value;
                    this.RaisePropertyChanged("RegistrationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationTypeName {
            get {
                return this.RegistrationTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationTypeNameField, value) != true)) {
                    this.RegistrationTypeNameField = value;
                    this.RaisePropertyChanged("RegistrationTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentCategoryName {
            get {
                return this.TreatmentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentCategoryNameField, value) != true)) {
                    this.TreatmentCategoryNameField = value;
                    this.RaisePropertyChanged("TreatmentCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryRegistrationTypeID {
            get {
                return this.TreatmentCategoryRegistrationTypeIDField;
            }
            set {
                if ((this.TreatmentCategoryRegistrationTypeIDField.Equals(value) != true)) {
                    this.TreatmentCategoryRegistrationTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryRegistrationTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentCategoriesAreasofExpertises", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentCategoriesAreasofExpertises : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AreasofExpertiseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreasofExpertiseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryAreasofExpertiseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentCategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreasofExpertiseID {
            get {
                return this.AreasofExpertiseIDField;
            }
            set {
                if ((this.AreasofExpertiseIDField.Equals(value) != true)) {
                    this.AreasofExpertiseIDField = value;
                    this.RaisePropertyChanged("AreasofExpertiseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreasofExpertiseName {
            get {
                return this.AreasofExpertiseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreasofExpertiseNameField, value) != true)) {
                    this.AreasofExpertiseNameField = value;
                    this.RaisePropertyChanged("AreasofExpertiseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryAreasofExpertiseID {
            get {
                return this.TreatmentCategoryAreasofExpertiseIDField;
            }
            set {
                if ((this.TreatmentCategoryAreasofExpertiseIDField.Equals(value) != true)) {
                    this.TreatmentCategoryAreasofExpertiseIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryAreasofExpertiseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentCategoryName {
            get {
                return this.TreatmentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentCategoryNameField, value) != true)) {
                    this.TreatmentCategoryNameField = value;
                    this.RaisePropertyChanged("TreatmentCategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierCasePatient", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierCasePatient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InitialAssessmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkflowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkflowNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InitialAssessmentDate {
            get {
                return this.InitialAssessmentDateField;
            }
            set {
                if ((this.InitialAssessmentDateField.Equals(value) != true)) {
                    this.InitialAssessmentDateField = value;
                    this.RaisePropertyChanged("InitialAssessmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowID {
            get {
                return this.WorkflowIDField;
            }
            set {
                if ((this.WorkflowIDField.Equals(value) != true)) {
                    this.WorkflowIDField = value;
                    this.RaisePropertyChanged("WorkflowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowName {
            get {
                return this.WorkflowNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowNameField, value) != true)) {
                    this.WorkflowNameField = value;
                    this.RaisePropertyChanged("WorkflowName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierDistanceRankPrice", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierDistanceRankPrice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSWebApp.ITSService.SupplierService.PriceAverage[] PriceAveragesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RankingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSWebApp.ITSService.SupplierService.PriceAverage[] PriceAverages {
            get {
                return this.PriceAveragesField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceAveragesField, value) != true)) {
                    this.PriceAveragesField = value;
                    this.RaisePropertyChanged("PriceAverages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Ranking {
            get {
                return this.RankingField;
            }
            set {
                if ((this.RankingField.Equals(value) != true)) {
                    this.RankingField = value;
                    this.RaisePropertyChanged("Ranking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PriceAverage", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PriceAverage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PricingTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PricingTypeID {
            get {
                return this.PricingTypeIDField;
            }
            set {
                if ((this.PricingTypeIDField.Equals(value) != true)) {
                    this.PricingTypeIDField = value;
                    this.RaisePropertyChanged("PricingTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierClinicalAuditSupplierDocument", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierClinicalAuditSupplierDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AuditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AuditPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierClinicalAuditIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AuditDate {
            get {
                return this.AuditDateField;
            }
            set {
                if ((this.AuditDateField.Equals(value) != true)) {
                    this.AuditDateField = value;
                    this.RaisePropertyChanged("AuditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AuditPass {
            get {
                return this.AuditPassField;
            }
            set {
                if ((this.AuditPassField.Equals(value) != true)) {
                    this.AuditPassField = value;
                    this.RaisePropertyChanged("AuditPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientFirstName {
            get {
                return this.PatientFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientFirstNameField, value) != true)) {
                    this.PatientFirstNameField = value;
                    this.RaisePropertyChanged("PatientFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientLastName {
            get {
                return this.PatientLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientLastNameField, value) != true)) {
                    this.PatientLastNameField = value;
                    this.RaisePropertyChanged("PatientLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierClinicalAuditID {
            get {
                return this.SupplierClinicalAuditIDField;
            }
            set {
                if ((this.SupplierClinicalAuditIDField.Equals(value) != true)) {
                    this.SupplierClinicalAuditIDField = value;
                    this.RaisePropertyChanged("SupplierClinicalAuditID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierDocumentID {
            get {
                return this.SupplierDocumentIDField;
            }
            set {
                if ((this.SupplierDocumentIDField.Equals(value) != true)) {
                    this.SupplierDocumentIDField = value;
                    this.RaisePropertyChanged("SupplierDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadPath {
            get {
                return this.UploadPathField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadPathField, value) != true)) {
                    this.UploadPathField = value;
                    this.RaisePropertyChanged("UploadPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierInsuranceSupplierDocument", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierInsuranceSupplierDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelOfCoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RenewalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierInsuredIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevelOfCover {
            get {
                return this.LevelOfCoverField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelOfCoverField, value) != true)) {
                    this.LevelOfCoverField = value;
                    this.RaisePropertyChanged("LevelOfCover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RenewalDate {
            get {
                return this.RenewalDateField;
            }
            set {
                if ((this.RenewalDateField.Equals(value) != true)) {
                    this.RenewalDateField = value;
                    this.RaisePropertyChanged("RenewalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierDocumentID {
            get {
                return this.SupplierDocumentIDField;
            }
            set {
                if ((this.SupplierDocumentIDField.Equals(value) != true)) {
                    this.SupplierDocumentIDField = value;
                    this.RaisePropertyChanged("SupplierDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierInsuredID {
            get {
                return this.SupplierInsuredIDField;
            }
            set {
                if ((this.SupplierInsuredIDField.Equals(value) != true)) {
                    this.SupplierInsuredIDField = value;
                    this.RaisePropertyChanged("SupplierInsuredID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadPath {
            get {
                return this.UploadPathField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadPathField, value) != true)) {
                    this.UploadPathField = value;
                    this.RaisePropertyChanged("UploadPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierRegistrationSupplierDocument", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierRegistrationSupplierDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierDocumentID {
            get {
                return this.SupplierDocumentIDField;
            }
            set {
                if ((this.SupplierDocumentIDField.Equals(value) != true)) {
                    this.SupplierDocumentIDField = value;
                    this.RaisePropertyChanged("SupplierDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadPath {
            get {
                return this.UploadPathField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadPathField, value) != true)) {
                    this.UploadPathField = value;
                    this.RaisePropertyChanged("UploadPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierSiteAuditSupplierDocument", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierSiteAuditSupplierDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AuditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AuditPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierSiteAuditIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AuditDate {
            get {
                return this.AuditDateField;
            }
            set {
                if ((this.AuditDateField.Equals(value) != true)) {
                    this.AuditDateField = value;
                    this.RaisePropertyChanged("AuditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuditNotes {
            get {
                return this.AuditNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditNotesField, value) != true)) {
                    this.AuditNotesField = value;
                    this.RaisePropertyChanged("AuditNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AuditPass {
            get {
                return this.AuditPassField;
            }
            set {
                if ((this.AuditPassField.Equals(value) != true)) {
                    this.AuditPassField = value;
                    this.RaisePropertyChanged("AuditPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierDocumentID {
            get {
                return this.SupplierDocumentIDField;
            }
            set {
                if ((this.SupplierDocumentIDField.Equals(value) != true)) {
                    this.SupplierDocumentIDField = value;
                    this.RaisePropertyChanged("SupplierDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierSiteAuditID {
            get {
                return this.SupplierSiteAuditIDField;
            }
            set {
                if ((this.SupplierSiteAuditIDField.Equals(value) != true)) {
                    this.SupplierSiteAuditIDField = value;
                    this.RaisePropertyChanged("SupplierSiteAuditID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadPath {
            get {
                return this.UploadPathField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadPathField, value) != true)) {
                    this.UploadPathField = value;
                    this.RaisePropertyChanged("UploadPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierComplaintAndStatusAndType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierComplaintAndStatusAndType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ComplaintDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplaintDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComplaintStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplaintStatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComplaintTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplaintTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierComplaintIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ComplaintDate {
            get {
                return this.ComplaintDateField;
            }
            set {
                if ((this.ComplaintDateField.Equals(value) != true)) {
                    this.ComplaintDateField = value;
                    this.RaisePropertyChanged("ComplaintDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComplaintDescription {
            get {
                return this.ComplaintDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplaintDescriptionField, value) != true)) {
                    this.ComplaintDescriptionField = value;
                    this.RaisePropertyChanged("ComplaintDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComplaintStatusID {
            get {
                return this.ComplaintStatusIDField;
            }
            set {
                if ((this.ComplaintStatusIDField.Equals(value) != true)) {
                    this.ComplaintStatusIDField = value;
                    this.RaisePropertyChanged("ComplaintStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComplaintStatusName {
            get {
                return this.ComplaintStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplaintStatusNameField, value) != true)) {
                    this.ComplaintStatusNameField = value;
                    this.RaisePropertyChanged("ComplaintStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComplaintTypeID {
            get {
                return this.ComplaintTypeIDField;
            }
            set {
                if ((this.ComplaintTypeIDField.Equals(value) != true)) {
                    this.ComplaintTypeIDField = value;
                    this.RaisePropertyChanged("ComplaintTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComplaintTypeName {
            get {
                return this.ComplaintTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplaintTypeNameField, value) != true)) {
                    this.ComplaintTypeNameField = value;
                    this.RaisePropertyChanged("ComplaintTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierComplaintID {
            get {
                return this.SupplierComplaintIDField;
            }
            set {
                if ((this.SupplierComplaintIDField.Equals(value) != true)) {
                    this.SupplierComplaintIDField = value;
                    this.RaisePropertyChanged("SupplierComplaintID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierSupplierTreatmentsAndSupplierTreatmenPricing", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierSupplierTreatmentsAndSupplierTreatmenPricing : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEveningsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHomeVisitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsParkingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTriageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWeekendsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWheelChairAccessibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RankingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEvenings {
            get {
                return this.IsEveningsField;
            }
            set {
                if ((this.IsEveningsField.Equals(value) != true)) {
                    this.IsEveningsField = value;
                    this.RaisePropertyChanged("IsEvenings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHomeVisit {
            get {
                return this.IsHomeVisitField;
            }
            set {
                if ((this.IsHomeVisitField.Equals(value) != true)) {
                    this.IsHomeVisitField = value;
                    this.RaisePropertyChanged("IsHomeVisit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsParking {
            get {
                return this.IsParkingField;
            }
            set {
                if ((this.IsParkingField.Equals(value) != true)) {
                    this.IsParkingField = value;
                    this.RaisePropertyChanged("IsParking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTriage {
            get {
                return this.IsTriageField;
            }
            set {
                if ((this.IsTriageField.Equals(value) != true)) {
                    this.IsTriageField = value;
                    this.RaisePropertyChanged("IsTriage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWeekends {
            get {
                return this.IsWeekendsField;
            }
            set {
                if ((this.IsWeekendsField.Equals(value) != true)) {
                    this.IsWeekendsField = value;
                    this.RaisePropertyChanged("IsWeekends");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWheelChairAccessibility {
            get {
                return this.IsWheelChairAccessibilityField;
            }
            set {
                if ((this.IsWheelChairAccessibilityField.Equals(value) != true)) {
                    this.IsWheelChairAccessibilityField = value;
                    this.RaisePropertyChanged("IsWheelChairAccessibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Ranking {
            get {
                return this.RankingField;
            }
            set {
                if ((this.RankingField.Equals(value) != true)) {
                    this.RankingField = value;
                    this.RaisePropertyChanged("Ranking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentCategoriesPricingTypes", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentCategoriesPricingTypes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PricingTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricingTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryPricingTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PricingTypeID {
            get {
                return this.PricingTypeIDField;
            }
            set {
                if ((this.PricingTypeIDField.Equals(value) != true)) {
                    this.PricingTypeIDField = value;
                    this.RaisePropertyChanged("PricingTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricingTypeName {
            get {
                return this.PricingTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PricingTypeNameField, value) != true)) {
                    this.PricingTypeNameField = value;
                    this.RaisePropertyChanged("PricingTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentCategoryName {
            get {
                return this.TreatmentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentCategoryNameField, value) != true)) {
                    this.TreatmentCategoryNameField = value;
                    this.RaisePropertyChanged("TreatmentCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryPricingTypeID {
            get {
                return this.TreatmentCategoryPricingTypeIDField;
            }
            set {
                if ((this.TreatmentCategoryPricingTypeIDField.Equals(value) != true)) {
                    this.TreatmentCategoryPricingTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryPricingTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierPricingValue", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierPricingValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PricingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PricingTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricingTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SupplierTreatmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentCategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PricingID {
            get {
                return this.PricingIDField;
            }
            set {
                if ((this.PricingIDField.Equals(value) != true)) {
                    this.PricingIDField = value;
                    this.RaisePropertyChanged("PricingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PricingTypeID {
            get {
                return this.PricingTypeIDField;
            }
            set {
                if ((this.PricingTypeIDField.Equals(value) != true)) {
                    this.PricingTypeIDField = value;
                    this.RaisePropertyChanged("PricingTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricingTypeName {
            get {
                return this.PricingTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PricingTypeNameField, value) != true)) {
                    this.PricingTypeNameField = value;
                    this.RaisePropertyChanged("PricingTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SupplierTreatmentID {
            get {
                return this.SupplierTreatmentIDField;
            }
            set {
                if ((this.SupplierTreatmentIDField.Equals(value) != true)) {
                    this.SupplierTreatmentIDField = value;
                    this.RaisePropertyChanged("SupplierTreatmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentCategoryName {
            get {
                return this.TreatmentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentCategoryNameField, value) != true)) {
                    this.TreatmentCategoryNameField = value;
                    this.RaisePropertyChanged("TreatmentCategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierSupplierTreatmentsAndSupplierTreatmenPricingResult", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierSupplierTreatmentsAndSupplierTreatmenPricingResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEveningsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHomeVisitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsParkingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTriageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWeekendsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWheelChairAccessibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RankingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEvenings {
            get {
                return this.IsEveningsField;
            }
            set {
                if ((this.IsEveningsField.Equals(value) != true)) {
                    this.IsEveningsField = value;
                    this.RaisePropertyChanged("IsEvenings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHomeVisit {
            get {
                return this.IsHomeVisitField;
            }
            set {
                if ((this.IsHomeVisitField.Equals(value) != true)) {
                    this.IsHomeVisitField = value;
                    this.RaisePropertyChanged("IsHomeVisit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsParking {
            get {
                return this.IsParkingField;
            }
            set {
                if ((this.IsParkingField.Equals(value) != true)) {
                    this.IsParkingField = value;
                    this.RaisePropertyChanged("IsParking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTriage {
            get {
                return this.IsTriageField;
            }
            set {
                if ((this.IsTriageField.Equals(value) != true)) {
                    this.IsTriageField = value;
                    this.RaisePropertyChanged("IsTriage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWeekends {
            get {
                return this.IsWeekendsField;
            }
            set {
                if ((this.IsWeekendsField.Equals(value) != true)) {
                    this.IsWeekendsField = value;
                    this.RaisePropertyChanged("IsWeekends");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWheelChairAccessibility {
            get {
                return this.IsWheelChairAccessibilityField;
            }
            set {
                if ((this.IsWheelChairAccessibilityField.Equals(value) != true)) {
                    this.IsWheelChairAccessibilityField = value;
                    this.RaisePropertyChanged("IsWheelChairAccessibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Price {
            get {
                return this.PriceField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceField, value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Ranking {
            get {
                return this.RankingField;
            }
            set {
                if ((this.RankingField.Equals(value) != true)) {
                    this.RankingField = value;
                    this.RaisePropertyChanged("Ranking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ITSService.SupplierService.ISupplierService")]
    public interface ISupplierService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetAllSupplier", ReplyAction="http://tempuri.org/ISupplierService/GetAllSupplierResponse")]
        ITSWebApp.ITSService.SupplierService.SuppliersName[] GetAllSupplier();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierBySupplierID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierBySupplierIDResponse")]
        ITSWebApp.ITSService.SupplierService.Supplier GetSupplierBySupplierID(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSuppliersLikeSupplierName", ReplyAction="http://tempuri.org/ISupplierService/GetSuppliersLikeSupplierNameResponse")]
        ITSWebApp.ITSService.SupplierService.PagedSupplierSearch GetSuppliersLikeSupplierName(string supplierName, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplier", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierResponse")]
        int AddSupplier(ITSWebApp.ITSService.SupplierService.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplierBySupplierID", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierBySupplierIDResponse")]
        int UpdateSupplierBySupplierID(ITSWebApp.ITSService.SupplierService.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplierAndTreatmentTypes", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierAndTreatmentTypesResponse")]
        int AddSupplierAndTreatmentTypes(ITSWebApp.ITSService.SupplierService.Supplier supplier, ITSWebApp.ITSService.SupplierService.SupplierTreatment[] supplierTreatments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetAllComplaintstatus", ReplyAction="http://tempuri.org/ISupplierService/GetAllComplaintstatusResponse")]
        ITSWebApp.ITSService.SupplierService.ComplaintStatus[] GetAllComplaintstatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetAllComplaintType", ReplyAction="http://tempuri.org/ISupplierService/GetAllComplaintTypeResponse")]
        ITSWebApp.ITSService.SupplierService.ComplaintType[] GetAllComplaintType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplierDocument", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierDocumentResponse")]
        int AddSupplierDocument(ITSWebApp.ITSService.SupplierService.SupplierDocument supplierDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplierDocument", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierDocumentResponse")]
        int UpdateSupplierDocument(ITSWebApp.ITSService.SupplierService.SupplierDocument supplierDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierDocumentBySupplierIDAndDocumentTyp" +
            "eID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierDocumentBySupplierIDAndDocumentTyp" +
            "eIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierDocumentUser[] GetSupplierDocumentBySupplierIDAndDocumentTypeID(int supplierID, int documentTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplierDocumentBySupplierDocumentID", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierDocumentBySupplierDocumentIDRes" +
            "ponse")]
        int DeleteSupplierDocumentBySupplierDocumentID(int supplierDocumentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplierComplaint", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierComplaintResponse")]
        int AddSupplierComplaint(ITSWebApp.ITSService.SupplierService.SupplierComplaint supplierComplaint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplierComplaintBySupplierComplaintID", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierComplaintBySupplierComplaintIDR" +
            "esponse")]
        int UpdateSupplierComplaintBySupplierComplaintID(ITSWebApp.ITSService.SupplierService.SupplierComplaint supplierComplaint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierComplaintBySupplierID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierComplaintBySupplierIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierComplaint[] GetSupplierComplaintBySupplierID(int supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSuppliersLikePostCode", ReplyAction="http://tempuri.org/ISupplierService/GetSuppliersLikePostCodeResponse")]
        ITSWebApp.ITSService.SupplierService.PagedSupplierSearch GetSuppliersLikePostCode(string postCode, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplierComplaintBySupplierComplaintID", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierComplaintBySupplierComplaintIDR" +
            "esponse")]
        int DeleteSupplierComplaintBySupplierComplaintID(int supplierTreatmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplierTreatment", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierTreatmentResponse")]
        int AddSupplierTreatment(ITSWebApp.ITSService.SupplierService.SupplierTreatment supplierTreatment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplierTreatmentBySupplierTreatmentID", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierTreatmentBySupplierTreatmentIDR" +
            "esponse")]
        int UpdateSupplierTreatmentBySupplierTreatmentID(ITSWebApp.ITSService.SupplierService.SupplierTreatment supplierTreatment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierTreatmentBySupplierID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierTreatmentBySupplierIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierTreatment[] GetSupplierTreatmentBySupplierID(int supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplierTreatmentPricing", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierTreatmentPricingResponse")]
        int AddSupplierTreatmentPricing(ITSWebApp.ITSService.SupplierService.SupplierTreatmentPricing supplierTreatmentPricing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplierTreatmentPricingByPricingID", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierTreatmentPricingByPricingIDResp" +
            "onse")]
        int UpdateSupplierTreatmentPricingByPricingID(ITSWebApp.ITSService.SupplierService.SupplierTreatmentPricing supplierTreatmentPricing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierTreatmentPricingBySupplierTreatmen" +
            "tId", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierTreatmentPricingBySupplierTreatmen" +
            "tIdResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierTreatmentPricing[] GetSupplierTreatmentPricingBySupplierTreatmentId(int supplierTreatmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetAllRegistrationType", ReplyAction="http://tempuri.org/ISupplierService/GetAllRegistrationTypeResponse")]
        ITSWebApp.ITSService.SupplierService.RegistrationType[] GetAllRegistrationType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplierInsurance", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierInsuranceResponse")]
        int AddSupplierInsurance(ITSWebApp.ITSService.SupplierService.SupplierInsurance supplierInsurance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplierInsurance", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierInsuranceResponse")]
        int UpdateSupplierInsurance(ITSWebApp.ITSService.SupplierService.SupplierInsurance supplierInsurance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplierInsuranceBySupplierInsuredID", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierInsuranceBySupplierInsuredIDRes" +
            "ponse")]
        int DeleteSupplierInsuranceBySupplierInsuredID(int supplierInsuredID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierInsuranceBySupplierID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierInsuranceBySupplierIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierInsurance[] GetSupplierInsuranceBySupplierID(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierSiteAuditBySupplierDocumentID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierSiteAuditBySupplierDocumentIDRespo" +
            "nse")]
        ITSWebApp.ITSService.SupplierService.SupplierSiteAudit[] GetSupplierSiteAuditBySupplierDocumentID(int supplierDocumentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierSiteAuditBySupplierID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierSiteAuditBySupplierIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierSiteAudit[] GetSupplierSiteAuditBySupplierID(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierSiteAuditByUserID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierSiteAuditByUserIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierSiteAudit[] GetSupplierSiteAuditByUserID(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierSiteAuditBySupplierSiteAuditID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierSiteAuditBySupplierSiteAuditIDResp" +
            "onse")]
        ITSWebApp.ITSService.SupplierService.SupplierSiteAudit GetSupplierSiteAuditBySupplierSiteAuditID(int supplierSiteAuditID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplierSiteAuditBySupplierSiteAuditID", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierSiteAuditBySupplierSiteAuditIDR" +
            "esponse")]
        int UpdateSupplierSiteAuditBySupplierSiteAuditID(ITSWebApp.ITSService.SupplierService.SupplierSiteAudit supplierSiteAudit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplierSiteAudit", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierSiteAuditResponse")]
        int AddSupplierSiteAudit(ITSWebApp.ITSService.SupplierService.SupplierSiteAudit supplierSiteAudit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplierSiteAuditBySupplierSiteAuditID", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierSiteAuditBySupplierSiteAuditIDR" +
            "esponse")]
        int DeleteSupplierSiteAuditBySupplierSiteAuditID(int supplierSiteAuditID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierLikeTreatmentCategoryType", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierLikeTreatmentCategoryTypeResponse")]
        ITSWebApp.ITSService.SupplierService.PagedSupplierSearch GetSupplierLikeTreatmentCategoryType(string treatmentType, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplierClinicalAudit", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierClinicalAuditResponse")]
        int AddSupplierClinicalAudit(ITSWebApp.ITSService.SupplierService.SupplierClinicalAudit supplierClinicalAudit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplierClinicalAuditBySupplierClinical" +
            "AuditID", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierClinicalAuditBySupplierClinical" +
            "AuditIDResponse")]
        int UpdateSupplierClinicalAuditBySupplierClinicalAuditID(ITSWebApp.ITSService.SupplierService.SupplierClinicalAudit supplierClinicalAudit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierClinicalAuditByUserID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierClinicalAuditByUserIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierClinicalAudit[] GetSupplierClinicalAuditByUserID(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierClinicalAuditBySupplierID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierClinicalAuditBySupplierIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierClinicalAudit[] GetSupplierClinicalAuditBySupplierID(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplierClinicalAuditBySupplierClinical" +
            "AuditID", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierClinicalAuditBySupplierClinical" +
            "AuditIDResponse")]
        int DeleteSupplierClinicalAuditBySupplierClinicalAuditID(int supplierClinicalAuditID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplierPractitionerRegistration", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierPractitionerRegistrationResponse")]
        int AddSupplierPractitionerRegistration(ITSWebApp.ITSService.SupplierService.SupplierPractitioner supplierPractitioner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplierPractitioner", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierPractitionerResponse")]
        int UpdateSupplierPractitioner(ITSWebApp.ITSService.SupplierService.SupplierPractitioner supplierPractitioner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplierPractitionerBySupplierPractitio" +
            "nerID", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierPractitionerBySupplierPractitio" +
            "nerIDResponse")]
        int DeleteSupplierPractitionerBySupplierPractitionerID(int supplierPractitionerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierPractitionerByPractitionerRegistra" +
            "tionID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierPractitionerByPractitionerRegistra" +
            "tionIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierPractitioner[] GetSupplierPractitionerByPractitionerRegistrationID(int practitionerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierPractitionerTreatmentRegistrations" +
            "BySupplierID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierPractitionerTreatmentRegistrations" +
            "BySupplierIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierPractitionerTreatmentRegistration[] GetSupplierPractitionerTreatmentRegistrationsBySupplierID(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierPractitionerBySupplierPractitioner" +
            "ID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierPractitionerBySupplierPractitioner" +
            "IDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierPractitioner GetSupplierPractitionerBySupplierPractitionerID(int supplierPractitionerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetPractitionerLikePractitionerNameForSupplie" +
            "r", ReplyAction="http://tempuri.org/ISupplierService/GetPractitionerLikePractitionerNameForSupplie" +
            "rResponse")]
        ITSWebApp.ITSService.SupplierService.PractitionerTreatmentRegistration[] GetPractitionerLikePractitionerNameForSupplier(string searchKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetAllTreatmentType", ReplyAction="http://tempuri.org/ISupplierService/GetAllTreatmentTypeResponse")]
        ITSWebApp.ITSService.SupplierService.TreatmentType[] GetAllTreatmentType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetTreatmentCategoriesTreatmentTypeByTreatmen" +
            "tCategoryID", ReplyAction="http://tempuri.org/ISupplierService/GetTreatmentCategoriesTreatmentTypeByTreatmen" +
            "tCategoryIDResponse")]
        ITSWebApp.ITSService.SupplierService.TreatmentCategoriesTreatmentType[] GetTreatmentCategoriesTreatmentTypeByTreatmentCategoryID(int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetTreatmentCategoriesTreatmentTypeByTreatmen" +
            "tTypeID", ReplyAction="http://tempuri.org/ISupplierService/GetTreatmentCategoriesTreatmentTypeByTreatmen" +
            "tTypeIDResponse")]
        ITSWebApp.ITSService.SupplierService.TreatmentCategoriesTreatmentType[] GetTreatmentCategoriesTreatmentTypeByTreatmentTypeID(int treatmentTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetTreatmentCategoriesRegistrationTypeByTreat" +
            "mentCategoryID", ReplyAction="http://tempuri.org/ISupplierService/GetTreatmentCategoriesRegistrationTypeByTreat" +
            "mentCategoryIDResponse")]
        ITSWebApp.ITSService.SupplierService.TreatmentCategoriesRegistrationTypes[] GetTreatmentCategoriesRegistrationTypeByTreatmentCategoryID(int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetTreatmentCategoriesRegistrationTypeByRegis" +
            "trationTypeID", ReplyAction="http://tempuri.org/ISupplierService/GetTreatmentCategoriesRegistrationTypeByRegis" +
            "trationTypeIDResponse")]
        ITSWebApp.ITSService.SupplierService.TreatmentCategoriesRegistrationTypes[] GetTreatmentCategoriesRegistrationTypeByRegistrationTypeID(int registrationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetTreatmentCategoriesAreasofExpertiseByTreat" +
            "mentCategoryID", ReplyAction="http://tempuri.org/ISupplierService/GetTreatmentCategoriesAreasofExpertiseByTreat" +
            "mentCategoryIDResponse")]
        ITSWebApp.ITSService.SupplierService.TreatmentCategoriesAreasofExpertises[] GetTreatmentCategoriesAreasofExpertiseByTreatmentCategoryID(int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetTreatmentCategoriesAreasofExpertiseByAreas" +
            "ofExpertiseID", ReplyAction="http://tempuri.org/ISupplierService/GetTreatmentCategoriesAreasofExpertiseByAreas" +
            "ofExpertiseIDResponse")]
        ITSWebApp.ITSService.SupplierService.TreatmentCategoriesAreasofExpertises[] GetTreatmentCategoriesAreasofExpertiseByAreasofExpertiseID(int areasofExpertiseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierNewPatientCases", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierNewPatientCasesResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierCasePatient[] GetSupplierNewPatientCases(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierExistingPatientsInitialAssessments" +
            "", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierExistingPatientsInitialAssessments" +
            "Response")]
        ITSWebApp.ITSService.SupplierService.SupplierCasePatient[] GetSupplierExistingPatientsInitialAssessments(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierExistingPatientsNextAssessments", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierExistingPatientsNextAssessmentsRes" +
            "ponse")]
        ITSWebApp.ITSService.SupplierService.SupplierCasePatient[] GetSupplierExistingPatientsNextAssessments(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierAuthorisations", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierAuthorisationsResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierCasePatient[] GetSupplierAuthorisations(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierStoppedCases", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierStoppedCasesResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierCasePatient[] GetSupplierStoppedCases(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplierStatus", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierStatusResponse")]
        int UpdateSupplierStatus(int supplierID, bool isTriage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierWithinPostCode", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierWithinPostCodeResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierDistanceRankPrice[] GetSupplierWithinPostCode(string postCode, int distanceKM, int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierRankingBySupplierID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierRankingBySupplierIDResponse")]
        double GetSupplierRankingBySupplierID(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierExistsByName", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierExistsByNameResponse")]
        bool GetSupplierExistsByName(string supplierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierExistsByEmail", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierExistsByEmailResponse")]
        bool GetSupplierExistsByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSuppliersRecentlyAdded", ReplyAction="http://tempuri.org/ISupplierService/GetSuppliersRecentlyAddedResponse")]
        ITSWebApp.ITSService.SupplierService.Supplier[] GetSuppliersRecentlyAdded();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierClinicalAuditSupplierDocumentBySup" +
            "plierID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierClinicalAuditSupplierDocumentBySup" +
            "plierIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierClinicalAuditSupplierDocument[] GetSupplierClinicalAuditSupplierDocumentBySupplierID(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierInsuranceSupplierDocumentBySupplie" +
            "rID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierInsuranceSupplierDocumentBySupplie" +
            "rIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierInsuranceSupplierDocument[] GetSupplierInsuranceSupplierDocumentBySupplierID(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierRegistrationSupplierDocumentBySupp" +
            "lierID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierRegistrationSupplierDocumentBySupp" +
            "lierIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierRegistrationSupplierDocument[] GetSupplierRegistrationSupplierDocumentBySupplierID(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierSiteAuditSupplierDocumentBySupplie" +
            "rID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierSiteAuditSupplierDocumentBySupplie" +
            "rIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierSiteAuditSupplierDocument[] GetSupplierSiteAuditSupplierDocumentBySupplierID(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierComplaintAndStatusAndTypesBySuppli" +
            "erID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierComplaintAndStatusAndTypesBySuppli" +
            "erIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierComplaintAndStatusAndType[] GetSupplierComplaintAndStatusAndTypesBySupplierID(int supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplierClinicalAuditAndDocument", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierClinicalAuditAndDocumentResponse")]
        int AddSupplierClinicalAuditAndDocument(ITSWebApp.ITSService.SupplierService.SupplierClinicalAudit supplierClinicalAudit, ITSWebApp.ITSService.SupplierService.SupplierDocument supplierDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplierSiteAuditAndDocument", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierSiteAuditAndDocumentResponse")]
        int AddSupplierSiteAuditAndDocument(ITSWebApp.ITSService.SupplierService.SupplierSiteAudit supplierSiteAudit, ITSWebApp.ITSService.SupplierService.SupplierDocument supplierDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplierInsuranceAndDocument", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierInsuranceAndDocumentResponse")]
        int AddSupplierInsuranceAndDocument(ITSWebApp.ITSService.SupplierService.SupplierInsurance supplierInsurance, ITSWebApp.ITSService.SupplierService.SupplierDocument supplierDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierClinicalAuditBySupplierClinicalAud" +
            "itID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierClinicalAuditBySupplierClinicalAud" +
            "itIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierClinicalAudit GetSupplierClinicalAuditBySupplierClinicalAuditID(int supplierClinicalAudit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierTreatmentPricingByTreatmentCategor" +
            "yIDAndSupplierID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierTreatmentPricingByTreatmentCategor" +
            "yIDAndSupplierIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierTreatmentPricing[] GetSupplierTreatmentPricingByTreatmentCategoryIDAndSupplierID(int treatmentCategoryID, int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetTriageSuppliersTreamentPricingByTreatmentC" +
            "ategoryID", ReplyAction="http://tempuri.org/ISupplierService/GetTriageSuppliersTreamentPricingByTreatmentC" +
            "ategoryIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierSupplierTreatmentsAndSupplierTreatmenPricing[] GetTriageSuppliersTreamentPricingByTreatmentCategoryID(int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetPricingTypesByTreatmentCategoryID", ReplyAction="http://tempuri.org/ISupplierService/GetPricingTypesByTreatmentCategoryIDResponse")]
        ITSWebApp.ITSService.SupplierService.TreatmentCategoriesPricingTypes[] GetPricingTypesByTreatmentCategoryID(int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierTreatmentPricingBySupplierTreatmen" +
            "tIDAndTreatmentCategoryID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierTreatmentPricingBySupplierTreatmen" +
            "tIDAndTreatmentCategoryIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierPricingValue[] GetSupplierTreatmentPricingBySupplierTreatmentIDAndTreatmentCategoryID(int supplierTreatmentID, int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetTriageTopSuppliersTreamentPricingByTreatme" +
            "ntCategoryID", ReplyAction="http://tempuri.org/ISupplierService/GetTriageTopSuppliersTreamentPricingByTreatme" +
            "ntCategoryIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierSupplierTreatmentsAndSupplierTreatmenPricing[] GetTriageTopSuppliersTreamentPricingByTreatmentCategoryID(int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierTreatmentPricingByTreatmentCategor" +
            "yIDAndSupplierIDAndPricingTypeID", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierTreatmentPricingByTreatmentCategor" +
            "yIDAndSupplierIDAndPricingTypeIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierPricingValue[] GetSupplierTreatmentPricingByTreatmentCategoryIDAndSupplierIDAndPricingTypeID(int supplierID, int treatmentCategoryID, int pricingTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSuppliersTreamentPricingByTreatmentCategor" +
            "yID", ReplyAction="http://tempuri.org/ISupplierService/GetSuppliersTreamentPricingByTreatmentCategor" +
            "yIDResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierSupplierTreatmentsAndSupplierTreatmenPricingResult[] GetSuppliersTreamentPricingByTreatmentCategoryID(int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetAllSupplierWithinPostCode", ReplyAction="http://tempuri.org/ISupplierService/GetAllSupplierWithinPostCodeResponse")]
        ITSWebApp.ITSService.SupplierService.SuppliersName[] GetAllSupplierWithinPostCode(string postCode, int distanceKM, int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSelectedSupplierDistanceRankPrice", ReplyAction="http://tempuri.org/ISupplierService/GetSelectedSupplierDistanceRankPriceResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierDistanceRankPrice GetSelectedSupplierDistanceRankPrice(int supplierID, int treatmentCategoryID, string postCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplierDocumentCustom", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierDocumentCustomResponse")]
        int AddSupplierDocumentCustom(ITSWebApp.ITSService.SupplierService.SupplierDocument supplierDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierDocumentByCaseIdAndDocumentTypeId", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierDocumentByCaseIdAndDocumentTypeIdR" +
            "esponse")]
        ITSWebApp.ITSService.SupplierService.SupplierDocument[] GetSupplierDocumentByCaseIdAndDocumentTypeId(int CaseId, int DocumentTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierDocumentByCaseId", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierDocumentByCaseIdResponse")]
        ITSWebApp.ITSService.SupplierService.SupplierDocument[] GetSupplierDocumentByCaseId(int CaseId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISupplierServiceChannel : ITSWebApp.ITSService.SupplierService.ISupplierService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SupplierServiceClient : System.ServiceModel.ClientBase<ITSWebApp.ITSService.SupplierService.ISupplierService>, ITSWebApp.ITSService.SupplierService.ISupplierService {
        
        public SupplierServiceClient() {
        }
        
        public SupplierServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SupplierServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ITSWebApp.ITSService.SupplierService.SuppliersName[] GetAllSupplier() {
            return base.Channel.GetAllSupplier();
        }
        
        public ITSWebApp.ITSService.SupplierService.Supplier GetSupplierBySupplierID(int supplierID) {
            return base.Channel.GetSupplierBySupplierID(supplierID);
        }
        
        public ITSWebApp.ITSService.SupplierService.PagedSupplierSearch GetSuppliersLikeSupplierName(string supplierName, int skip, int take) {
            return base.Channel.GetSuppliersLikeSupplierName(supplierName, skip, take);
        }
        
        public int AddSupplier(ITSWebApp.ITSService.SupplierService.Supplier supplier) {
            return base.Channel.AddSupplier(supplier);
        }
        
        public int UpdateSupplierBySupplierID(ITSWebApp.ITSService.SupplierService.Supplier supplier) {
            return base.Channel.UpdateSupplierBySupplierID(supplier);
        }
        
        public int AddSupplierAndTreatmentTypes(ITSWebApp.ITSService.SupplierService.Supplier supplier, ITSWebApp.ITSService.SupplierService.SupplierTreatment[] supplierTreatments) {
            return base.Channel.AddSupplierAndTreatmentTypes(supplier, supplierTreatments);
        }
        
        public ITSWebApp.ITSService.SupplierService.ComplaintStatus[] GetAllComplaintstatus() {
            return base.Channel.GetAllComplaintstatus();
        }
        
        public ITSWebApp.ITSService.SupplierService.ComplaintType[] GetAllComplaintType() {
            return base.Channel.GetAllComplaintType();
        }
        
        public int AddSupplierDocument(ITSWebApp.ITSService.SupplierService.SupplierDocument supplierDocument) {
            return base.Channel.AddSupplierDocument(supplierDocument);
        }
        
        public int UpdateSupplierDocument(ITSWebApp.ITSService.SupplierService.SupplierDocument supplierDocument) {
            return base.Channel.UpdateSupplierDocument(supplierDocument);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierDocumentUser[] GetSupplierDocumentBySupplierIDAndDocumentTypeID(int supplierID, int documentTypeID) {
            return base.Channel.GetSupplierDocumentBySupplierIDAndDocumentTypeID(supplierID, documentTypeID);
        }
        
        public int DeleteSupplierDocumentBySupplierDocumentID(int supplierDocumentID) {
            return base.Channel.DeleteSupplierDocumentBySupplierDocumentID(supplierDocumentID);
        }
        
        public int AddSupplierComplaint(ITSWebApp.ITSService.SupplierService.SupplierComplaint supplierComplaint) {
            return base.Channel.AddSupplierComplaint(supplierComplaint);
        }
        
        public int UpdateSupplierComplaintBySupplierComplaintID(ITSWebApp.ITSService.SupplierService.SupplierComplaint supplierComplaint) {
            return base.Channel.UpdateSupplierComplaintBySupplierComplaintID(supplierComplaint);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierComplaint[] GetSupplierComplaintBySupplierID(int supplierId) {
            return base.Channel.GetSupplierComplaintBySupplierID(supplierId);
        }
        
        public ITSWebApp.ITSService.SupplierService.PagedSupplierSearch GetSuppliersLikePostCode(string postCode, int skip, int take) {
            return base.Channel.GetSuppliersLikePostCode(postCode, skip, take);
        }
        
        public int DeleteSupplierComplaintBySupplierComplaintID(int supplierTreatmentID) {
            return base.Channel.DeleteSupplierComplaintBySupplierComplaintID(supplierTreatmentID);
        }
        
        public int AddSupplierTreatment(ITSWebApp.ITSService.SupplierService.SupplierTreatment supplierTreatment) {
            return base.Channel.AddSupplierTreatment(supplierTreatment);
        }
        
        public int UpdateSupplierTreatmentBySupplierTreatmentID(ITSWebApp.ITSService.SupplierService.SupplierTreatment supplierTreatment) {
            return base.Channel.UpdateSupplierTreatmentBySupplierTreatmentID(supplierTreatment);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierTreatment[] GetSupplierTreatmentBySupplierID(int supplierId) {
            return base.Channel.GetSupplierTreatmentBySupplierID(supplierId);
        }
        
        public int AddSupplierTreatmentPricing(ITSWebApp.ITSService.SupplierService.SupplierTreatmentPricing supplierTreatmentPricing) {
            return base.Channel.AddSupplierTreatmentPricing(supplierTreatmentPricing);
        }
        
        public int UpdateSupplierTreatmentPricingByPricingID(ITSWebApp.ITSService.SupplierService.SupplierTreatmentPricing supplierTreatmentPricing) {
            return base.Channel.UpdateSupplierTreatmentPricingByPricingID(supplierTreatmentPricing);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierTreatmentPricing[] GetSupplierTreatmentPricingBySupplierTreatmentId(int supplierTreatmentId) {
            return base.Channel.GetSupplierTreatmentPricingBySupplierTreatmentId(supplierTreatmentId);
        }
        
        public ITSWebApp.ITSService.SupplierService.RegistrationType[] GetAllRegistrationType() {
            return base.Channel.GetAllRegistrationType();
        }
        
        public int AddSupplierInsurance(ITSWebApp.ITSService.SupplierService.SupplierInsurance supplierInsurance) {
            return base.Channel.AddSupplierInsurance(supplierInsurance);
        }
        
        public int UpdateSupplierInsurance(ITSWebApp.ITSService.SupplierService.SupplierInsurance supplierInsurance) {
            return base.Channel.UpdateSupplierInsurance(supplierInsurance);
        }
        
        public int DeleteSupplierInsuranceBySupplierInsuredID(int supplierInsuredID) {
            return base.Channel.DeleteSupplierInsuranceBySupplierInsuredID(supplierInsuredID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierInsurance[] GetSupplierInsuranceBySupplierID(int supplierID) {
            return base.Channel.GetSupplierInsuranceBySupplierID(supplierID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierSiteAudit[] GetSupplierSiteAuditBySupplierDocumentID(int supplierDocumentID) {
            return base.Channel.GetSupplierSiteAuditBySupplierDocumentID(supplierDocumentID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierSiteAudit[] GetSupplierSiteAuditBySupplierID(int supplierID) {
            return base.Channel.GetSupplierSiteAuditBySupplierID(supplierID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierSiteAudit[] GetSupplierSiteAuditByUserID(int userID) {
            return base.Channel.GetSupplierSiteAuditByUserID(userID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierSiteAudit GetSupplierSiteAuditBySupplierSiteAuditID(int supplierSiteAuditID) {
            return base.Channel.GetSupplierSiteAuditBySupplierSiteAuditID(supplierSiteAuditID);
        }
        
        public int UpdateSupplierSiteAuditBySupplierSiteAuditID(ITSWebApp.ITSService.SupplierService.SupplierSiteAudit supplierSiteAudit) {
            return base.Channel.UpdateSupplierSiteAuditBySupplierSiteAuditID(supplierSiteAudit);
        }
        
        public int AddSupplierSiteAudit(ITSWebApp.ITSService.SupplierService.SupplierSiteAudit supplierSiteAudit) {
            return base.Channel.AddSupplierSiteAudit(supplierSiteAudit);
        }
        
        public int DeleteSupplierSiteAuditBySupplierSiteAuditID(int supplierSiteAuditID) {
            return base.Channel.DeleteSupplierSiteAuditBySupplierSiteAuditID(supplierSiteAuditID);
        }
        
        public ITSWebApp.ITSService.SupplierService.PagedSupplierSearch GetSupplierLikeTreatmentCategoryType(string treatmentType, int skip, int take) {
            return base.Channel.GetSupplierLikeTreatmentCategoryType(treatmentType, skip, take);
        }
        
        public int AddSupplierClinicalAudit(ITSWebApp.ITSService.SupplierService.SupplierClinicalAudit supplierClinicalAudit) {
            return base.Channel.AddSupplierClinicalAudit(supplierClinicalAudit);
        }
        
        public int UpdateSupplierClinicalAuditBySupplierClinicalAuditID(ITSWebApp.ITSService.SupplierService.SupplierClinicalAudit supplierClinicalAudit) {
            return base.Channel.UpdateSupplierClinicalAuditBySupplierClinicalAuditID(supplierClinicalAudit);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierClinicalAudit[] GetSupplierClinicalAuditByUserID(int userID) {
            return base.Channel.GetSupplierClinicalAuditByUserID(userID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierClinicalAudit[] GetSupplierClinicalAuditBySupplierID(int supplierID) {
            return base.Channel.GetSupplierClinicalAuditBySupplierID(supplierID);
        }
        
        public int DeleteSupplierClinicalAuditBySupplierClinicalAuditID(int supplierClinicalAuditID) {
            return base.Channel.DeleteSupplierClinicalAuditBySupplierClinicalAuditID(supplierClinicalAuditID);
        }
        
        public int AddSupplierPractitionerRegistration(ITSWebApp.ITSService.SupplierService.SupplierPractitioner supplierPractitioner) {
            return base.Channel.AddSupplierPractitionerRegistration(supplierPractitioner);
        }
        
        public int UpdateSupplierPractitioner(ITSWebApp.ITSService.SupplierService.SupplierPractitioner supplierPractitioner) {
            return base.Channel.UpdateSupplierPractitioner(supplierPractitioner);
        }
        
        public int DeleteSupplierPractitionerBySupplierPractitionerID(int supplierPractitionerID) {
            return base.Channel.DeleteSupplierPractitionerBySupplierPractitionerID(supplierPractitionerID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierPractitioner[] GetSupplierPractitionerByPractitionerRegistrationID(int practitionerID) {
            return base.Channel.GetSupplierPractitionerByPractitionerRegistrationID(practitionerID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierPractitionerTreatmentRegistration[] GetSupplierPractitionerTreatmentRegistrationsBySupplierID(int supplierID) {
            return base.Channel.GetSupplierPractitionerTreatmentRegistrationsBySupplierID(supplierID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierPractitioner GetSupplierPractitionerBySupplierPractitionerID(int supplierPractitionerID) {
            return base.Channel.GetSupplierPractitionerBySupplierPractitionerID(supplierPractitionerID);
        }
        
        public ITSWebApp.ITSService.SupplierService.PractitionerTreatmentRegistration[] GetPractitionerLikePractitionerNameForSupplier(string searchKey) {
            return base.Channel.GetPractitionerLikePractitionerNameForSupplier(searchKey);
        }
        
        public ITSWebApp.ITSService.SupplierService.TreatmentType[] GetAllTreatmentType() {
            return base.Channel.GetAllTreatmentType();
        }
        
        public ITSWebApp.ITSService.SupplierService.TreatmentCategoriesTreatmentType[] GetTreatmentCategoriesTreatmentTypeByTreatmentCategoryID(int treatmentCategoryID) {
            return base.Channel.GetTreatmentCategoriesTreatmentTypeByTreatmentCategoryID(treatmentCategoryID);
        }
        
        public ITSWebApp.ITSService.SupplierService.TreatmentCategoriesTreatmentType[] GetTreatmentCategoriesTreatmentTypeByTreatmentTypeID(int treatmentTypeID) {
            return base.Channel.GetTreatmentCategoriesTreatmentTypeByTreatmentTypeID(treatmentTypeID);
        }
        
        public ITSWebApp.ITSService.SupplierService.TreatmentCategoriesRegistrationTypes[] GetTreatmentCategoriesRegistrationTypeByTreatmentCategoryID(int treatmentCategoryID) {
            return base.Channel.GetTreatmentCategoriesRegistrationTypeByTreatmentCategoryID(treatmentCategoryID);
        }
        
        public ITSWebApp.ITSService.SupplierService.TreatmentCategoriesRegistrationTypes[] GetTreatmentCategoriesRegistrationTypeByRegistrationTypeID(int registrationTypeID) {
            return base.Channel.GetTreatmentCategoriesRegistrationTypeByRegistrationTypeID(registrationTypeID);
        }
        
        public ITSWebApp.ITSService.SupplierService.TreatmentCategoriesAreasofExpertises[] GetTreatmentCategoriesAreasofExpertiseByTreatmentCategoryID(int treatmentCategoryID) {
            return base.Channel.GetTreatmentCategoriesAreasofExpertiseByTreatmentCategoryID(treatmentCategoryID);
        }
        
        public ITSWebApp.ITSService.SupplierService.TreatmentCategoriesAreasofExpertises[] GetTreatmentCategoriesAreasofExpertiseByAreasofExpertiseID(int areasofExpertiseID) {
            return base.Channel.GetTreatmentCategoriesAreasofExpertiseByAreasofExpertiseID(areasofExpertiseID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierCasePatient[] GetSupplierNewPatientCases(int supplierID) {
            return base.Channel.GetSupplierNewPatientCases(supplierID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierCasePatient[] GetSupplierExistingPatientsInitialAssessments(int supplierID) {
            return base.Channel.GetSupplierExistingPatientsInitialAssessments(supplierID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierCasePatient[] GetSupplierExistingPatientsNextAssessments(int supplierID) {
            return base.Channel.GetSupplierExistingPatientsNextAssessments(supplierID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierCasePatient[] GetSupplierAuthorisations(int supplierID) {
            return base.Channel.GetSupplierAuthorisations(supplierID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierCasePatient[] GetSupplierStoppedCases(int supplierID) {
            return base.Channel.GetSupplierStoppedCases(supplierID);
        }
        
        public int UpdateSupplierStatus(int supplierID, bool isTriage) {
            return base.Channel.UpdateSupplierStatus(supplierID, isTriage);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierDistanceRankPrice[] GetSupplierWithinPostCode(string postCode, int distanceKM, int treatmentCategoryID) {
            return base.Channel.GetSupplierWithinPostCode(postCode, distanceKM, treatmentCategoryID);
        }
        
        public double GetSupplierRankingBySupplierID(int supplierID) {
            return base.Channel.GetSupplierRankingBySupplierID(supplierID);
        }
        
        public bool GetSupplierExistsByName(string supplierName) {
            return base.Channel.GetSupplierExistsByName(supplierName);
        }
        
        public bool GetSupplierExistsByEmail(string email) {
            return base.Channel.GetSupplierExistsByEmail(email);
        }
        
        public ITSWebApp.ITSService.SupplierService.Supplier[] GetSuppliersRecentlyAdded() {
            return base.Channel.GetSuppliersRecentlyAdded();
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierClinicalAuditSupplierDocument[] GetSupplierClinicalAuditSupplierDocumentBySupplierID(int supplierID) {
            return base.Channel.GetSupplierClinicalAuditSupplierDocumentBySupplierID(supplierID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierInsuranceSupplierDocument[] GetSupplierInsuranceSupplierDocumentBySupplierID(int supplierID) {
            return base.Channel.GetSupplierInsuranceSupplierDocumentBySupplierID(supplierID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierRegistrationSupplierDocument[] GetSupplierRegistrationSupplierDocumentBySupplierID(int supplierID) {
            return base.Channel.GetSupplierRegistrationSupplierDocumentBySupplierID(supplierID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierSiteAuditSupplierDocument[] GetSupplierSiteAuditSupplierDocumentBySupplierID(int supplierID) {
            return base.Channel.GetSupplierSiteAuditSupplierDocumentBySupplierID(supplierID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierComplaintAndStatusAndType[] GetSupplierComplaintAndStatusAndTypesBySupplierID(int supplierId) {
            return base.Channel.GetSupplierComplaintAndStatusAndTypesBySupplierID(supplierId);
        }
        
        public int AddSupplierClinicalAuditAndDocument(ITSWebApp.ITSService.SupplierService.SupplierClinicalAudit supplierClinicalAudit, ITSWebApp.ITSService.SupplierService.SupplierDocument supplierDocument) {
            return base.Channel.AddSupplierClinicalAuditAndDocument(supplierClinicalAudit, supplierDocument);
        }
        
        public int AddSupplierSiteAuditAndDocument(ITSWebApp.ITSService.SupplierService.SupplierSiteAudit supplierSiteAudit, ITSWebApp.ITSService.SupplierService.SupplierDocument supplierDocument) {
            return base.Channel.AddSupplierSiteAuditAndDocument(supplierSiteAudit, supplierDocument);
        }
        
        public int AddSupplierInsuranceAndDocument(ITSWebApp.ITSService.SupplierService.SupplierInsurance supplierInsurance, ITSWebApp.ITSService.SupplierService.SupplierDocument supplierDocument) {
            return base.Channel.AddSupplierInsuranceAndDocument(supplierInsurance, supplierDocument);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierClinicalAudit GetSupplierClinicalAuditBySupplierClinicalAuditID(int supplierClinicalAudit) {
            return base.Channel.GetSupplierClinicalAuditBySupplierClinicalAuditID(supplierClinicalAudit);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierTreatmentPricing[] GetSupplierTreatmentPricingByTreatmentCategoryIDAndSupplierID(int treatmentCategoryID, int supplierID) {
            return base.Channel.GetSupplierTreatmentPricingByTreatmentCategoryIDAndSupplierID(treatmentCategoryID, supplierID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierSupplierTreatmentsAndSupplierTreatmenPricing[] GetTriageSuppliersTreamentPricingByTreatmentCategoryID(int treatmentCategoryID) {
            return base.Channel.GetTriageSuppliersTreamentPricingByTreatmentCategoryID(treatmentCategoryID);
        }
        
        public ITSWebApp.ITSService.SupplierService.TreatmentCategoriesPricingTypes[] GetPricingTypesByTreatmentCategoryID(int treatmentCategoryID) {
            return base.Channel.GetPricingTypesByTreatmentCategoryID(treatmentCategoryID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierPricingValue[] GetSupplierTreatmentPricingBySupplierTreatmentIDAndTreatmentCategoryID(int supplierTreatmentID, int treatmentCategoryID) {
            return base.Channel.GetSupplierTreatmentPricingBySupplierTreatmentIDAndTreatmentCategoryID(supplierTreatmentID, treatmentCategoryID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierSupplierTreatmentsAndSupplierTreatmenPricing[] GetTriageTopSuppliersTreamentPricingByTreatmentCategoryID(int treatmentCategoryID) {
            return base.Channel.GetTriageTopSuppliersTreamentPricingByTreatmentCategoryID(treatmentCategoryID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierPricingValue[] GetSupplierTreatmentPricingByTreatmentCategoryIDAndSupplierIDAndPricingTypeID(int supplierID, int treatmentCategoryID, int pricingTypeID) {
            return base.Channel.GetSupplierTreatmentPricingByTreatmentCategoryIDAndSupplierIDAndPricingTypeID(supplierID, treatmentCategoryID, pricingTypeID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierSupplierTreatmentsAndSupplierTreatmenPricingResult[] GetSuppliersTreamentPricingByTreatmentCategoryID(int treatmentCategoryID) {
            return base.Channel.GetSuppliersTreamentPricingByTreatmentCategoryID(treatmentCategoryID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SuppliersName[] GetAllSupplierWithinPostCode(string postCode, int distanceKM, int treatmentCategoryID) {
            return base.Channel.GetAllSupplierWithinPostCode(postCode, distanceKM, treatmentCategoryID);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierDistanceRankPrice GetSelectedSupplierDistanceRankPrice(int supplierID, int treatmentCategoryID, string postCode) {
            return base.Channel.GetSelectedSupplierDistanceRankPrice(supplierID, treatmentCategoryID, postCode);
        }
        
        public int AddSupplierDocumentCustom(ITSWebApp.ITSService.SupplierService.SupplierDocument supplierDocument) {
            return base.Channel.AddSupplierDocumentCustom(supplierDocument);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierDocument[] GetSupplierDocumentByCaseIdAndDocumentTypeId(int CaseId, int DocumentTypeId) {
            return base.Channel.GetSupplierDocumentByCaseIdAndDocumentTypeId(CaseId, DocumentTypeId);
        }
        
        public ITSWebApp.ITSService.SupplierService.SupplierDocument[] GetSupplierDocumentByCaseId(int CaseId) {
            return base.Channel.GetSupplierDocumentByCaseId(CaseId);
        }
    }
}
