//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ITSWebApp.ITSService.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FailedAttemptCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PasswordExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordOTPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReferrerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReferrerLocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferrerTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserSessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FailedAttemptCount {
            get {
                return this.FailedAttemptCountField;
            }
            set {
                if ((this.FailedAttemptCountField.Equals(value) != true)) {
                    this.FailedAttemptCountField = value;
                    this.RaisePropertyChanged("FailedAttemptCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLocked {
            get {
                return this.IsLockedField;
            }
            set {
                if ((this.IsLockedField.Equals(value) != true)) {
                    this.IsLockedField = value;
                    this.RaisePropertyChanged("IsLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PasswordExpirationDate {
            get {
                return this.PasswordExpirationDateField;
            }
            set {
                if ((this.PasswordExpirationDateField.Equals(value) != true)) {
                    this.PasswordExpirationDateField = value;
                    this.RaisePropertyChanged("PasswordExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordOTP {
            get {
                return this.PasswordOTPField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordOTPField, value) != true)) {
                    this.PasswordOTPField = value;
                    this.RaisePropertyChanged("PasswordOTP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReferrerID {
            get {
                return this.ReferrerIDField;
            }
            set {
                if ((this.ReferrerIDField.Equals(value) != true)) {
                    this.ReferrerIDField = value;
                    this.RaisePropertyChanged("ReferrerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReferrerLocationID {
            get {
                return this.ReferrerLocationIDField;
            }
            set {
                if ((this.ReferrerLocationIDField.Equals(value) != true)) {
                    this.ReferrerLocationIDField = value;
                    this.RaisePropertyChanged("ReferrerLocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferrerTypes {
            get {
                return this.ReferrerTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferrerTypesField, value) != true)) {
                    this.ReferrerTypesField = value;
                    this.RaisePropertyChanged("ReferrerTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierTypes {
            get {
                return this.SupplierTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierTypesField, value) != true)) {
                    this.SupplierTypesField = value;
                    this.RaisePropertyChanged("SupplierTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserSessionID {
            get {
                return this.UserSessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSessionIDField, value) != true)) {
                    this.UserSessionIDField = value;
                    this.RaisePropertyChanged("UserSessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserTypeID {
            get {
                return this.UserTypeIDField;
            }
            set {
                if ((this.UserTypeIDField.Equals(value) != true)) {
                    this.UserTypeIDField = value;
                    this.RaisePropertyChanged("UserTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedUserTypeUser", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PagedUserTypeUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSWebApp.ITSService.UserService.UserTypeUser[] userTypeUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSWebApp.ITSService.UserService.UserTypeUser[] userTypeUser {
            get {
                return this.userTypeUserField;
            }
            set {
                if ((object.ReferenceEquals(this.userTypeUserField, value) != true)) {
                    this.userTypeUserField = value;
                    this.RaisePropertyChanged("userTypeUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserTypeUser", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class UserTypeUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserTypeID {
            get {
                return this.UserTypeIDField;
            }
            set {
                if ((this.UserTypeIDField.Equals(value) != true)) {
                    this.UserTypeIDField = value;
                    this.RaisePropertyChanged("UserTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserTypeName {
            get {
                return this.UserTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeNameField, value) != true)) {
                    this.UserTypeNameField = value;
                    this.RaisePropertyChanged("UserTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProject", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class UserProject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ReferrerProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ReferrerProjectID {
            get {
                return this.ReferrerProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferrerProjectIDField, value) != true)) {
                    this.ReferrerProjectIDField = value;
                    this.RaisePropertyChanged("ReferrerProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordHistory", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PasswordHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PasswordHistoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PasswordHistoryID {
            get {
                return this.PasswordHistoryIDField;
            }
            set {
                if ((this.PasswordHistoryIDField.Equals(value) != true)) {
                    this.PasswordHistoryIDField = value;
                    this.RaisePropertyChanged("PasswordHistoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ITSService.UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserById", ReplyAction="http://tempuri.org/IUserService/GetUserByIdResponse")]
        ITSWebApp.ITSService.UserService.User GetUserById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByUserNameAutoComplete", ReplyAction="http://tempuri.org/IUserService/GetUserByUserNameAutoCompleteResponse")]
        ITSWebApp.ITSService.UserService.User[] GetUserByUserNameAutoComplete(string userNameLike);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByUserName", ReplyAction="http://tempuri.org/IUserService/GetUserByUserNameResponse")]
        ITSWebApp.ITSService.UserService.User GetUserByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserLock", ReplyAction="http://tempuri.org/IUserService/UpdateUserLockResponse")]
        int UpdateUserLock(int userID, bool locked);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetUserPassword", ReplyAction="http://tempuri.org/IUserService/ResetUserPasswordResponse")]
        void ResetUserPassword(int userId, string userPwassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserRecordByEmailID", ReplyAction="http://tempuri.org/IUserService/GetUserRecordByEmailIDResponse")]
        ITSWebApp.ITSService.UserService.User GetUserRecordByEmailID(string emailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserRecordByEmailAndUserName", ReplyAction="http://tempuri.org/IUserService/GetUserRecordByEmailAndUserNameResponse")]
        ITSWebApp.ITSService.UserService.User GetUserRecordByEmailAndUserName(string emailID, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        int AddUser(ITSWebApp.ITSService.UserService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        int UpdateUser(ITSWebApp.ITSService.UserService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePasswordOTPByID", ReplyAction="http://tempuri.org/IUserService/UpdatePasswordOTPByIDResponse")]
        int UpdatePasswordOTPByID(int _userID, string _passwordOTP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByUserTypeID", ReplyAction="http://tempuri.org/IUserService/GetUserByUserTypeIDResponse")]
        ITSWebApp.ITSService.UserService.User[] GetUserByUserTypeID(int userTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetReferrerUsersByCaseID", ReplyAction="http://tempuri.org/IUserService/GetReferrerUsersByCaseIDResponse")]
        ITSWebApp.ITSService.UserService.User[] GetReferrerUsersByCaseID(int CaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetReferrerUsersByID", ReplyAction="http://tempuri.org/IUserService/GetReferrerUsersByIDResponse")]
        ITSWebApp.ITSService.UserService.User[] GetReferrerUsersByID(int referrerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserFailedAttemptCount", ReplyAction="http://tempuri.org/IUserService/UpdateUserFailedAttemptCountResponse")]
        int UpdateUserFailedAttemptCount(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetUserFailedAttemptCount", ReplyAction="http://tempuri.org/IUserService/ResetUserFailedAttemptCountResponse")]
        int ResetUserFailedAttemptCount(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersRecentlyAdded", ReplyAction="http://tempuri.org/IUserService/GetUsersRecentlyAddedResponse")]
        ITSWebApp.ITSService.UserService.User[] GetUsersRecentlyAdded();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserTypeUsersLikeUsername", ReplyAction="http://tempuri.org/IUserService/GetUserTypeUsersLikeUsernameResponse")]
        ITSWebApp.ITSService.UserService.PagedUserTypeUser GetUserTypeUsersLikeUsername(string userName, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserTypeUsersLikeUserType", ReplyAction="http://tempuri.org/IUserService/GetUserTypeUsersLikeUserTypeResponse")]
        ITSWebApp.ITSService.UserService.PagedUserTypeUser GetUserTypeUsersLikeUserType(string userType, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserTypeUsersLikeName", ReplyAction="http://tempuri.org/IUserService/GetUserTypeUsersLikeNameResponse")]
        ITSWebApp.ITSService.UserService.PagedUserTypeUser GetUserTypeUsersLikeName(string name, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserExistsByName", ReplyAction="http://tempuri.org/IUserService/GetUserExistsByNameResponse")]
        bool GetUserExistsByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserTypeUsersLikeReferrerName", ReplyAction="http://tempuri.org/IUserService/GetUserTypeUsersLikeReferrerNameResponse")]
        ITSWebApp.ITSService.UserService.PagedUserTypeUser GetUserTypeUsersLikeReferrerName(string name, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserTypeUsersLikeSupplierName", ReplyAction="http://tempuri.org/IUserService/GetUserTypeUsersLikeSupplierNameResponse")]
        ITSWebApp.ITSService.UserService.PagedUserTypeUser GetUserTypeUsersLikeSupplierName(string name, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllSupplierUserBySupplierID", ReplyAction="http://tempuri.org/IUserService/GetAllSupplierUserBySupplierIDResponse")]
        ITSWebApp.ITSService.UserService.User[] GetAllSupplierUserBySupplierID(int _supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUserProject", ReplyAction="http://tempuri.org/IUserService/AddUserProjectResponse")]
        void AddUserProject(ITSWebApp.ITSService.UserService.UserProject _userProject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUserProject", ReplyAction="http://tempuri.org/IUserService/DeleteUserProjectResponse")]
        int DeleteUserProject(int referrerProjectID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUserEmailsByCaseContactByCaseID", ReplyAction="http://tempuri.org/IUserService/GetAllUserEmailsByCaseContactByCaseIDResponse")]
        string[] GetAllUserEmailsByCaseContactByCaseID(int CaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserSessionIDByUserID", ReplyAction="http://tempuri.org/IUserService/UpdateUserSessionIDByUserIDResponse")]
        void UpdateUserSessionIDByUserID(int userId, string userSessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetUserSessionID", ReplyAction="http://tempuri.org/IUserService/ResetUserSessionIDResponse")]
        void ResetUserSessionID(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddPasswordHistory", ReplyAction="http://tempuri.org/IUserService/AddPasswordHistoryResponse")]
        int AddPasswordHistory(ITSWebApp.ITSService.UserService.PasswordHistory objpassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPasswordHistoryByUserID", ReplyAction="http://tempuri.org/IUserService/GetPasswordHistoryByUserIDResponse")]
        ITSWebApp.ITSService.UserService.PasswordHistory[] GetPasswordHistoryByUserID(int userID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : ITSWebApp.ITSService.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<ITSWebApp.ITSService.UserService.IUserService>, ITSWebApp.ITSService.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ITSWebApp.ITSService.UserService.User GetUserById(int Id) {
            return base.Channel.GetUserById(Id);
        }
        
        public ITSWebApp.ITSService.UserService.User[] GetUserByUserNameAutoComplete(string userNameLike) {
            return base.Channel.GetUserByUserNameAutoComplete(userNameLike);
        }
        
        public ITSWebApp.ITSService.UserService.User GetUserByUserName(string userName) {
            return base.Channel.GetUserByUserName(userName);
        }
        
        public int UpdateUserLock(int userID, bool locked) {
            return base.Channel.UpdateUserLock(userID, locked);
        }
        
        public void ResetUserPassword(int userId, string userPwassword) {
            base.Channel.ResetUserPassword(userId, userPwassword);
        }
        
        public ITSWebApp.ITSService.UserService.User GetUserRecordByEmailID(string emailID) {
            return base.Channel.GetUserRecordByEmailID(emailID);
        }
        
        public ITSWebApp.ITSService.UserService.User GetUserRecordByEmailAndUserName(string emailID, string username) {
            return base.Channel.GetUserRecordByEmailAndUserName(emailID, username);
        }
        
        public int AddUser(ITSWebApp.ITSService.UserService.User user) {
            return base.Channel.AddUser(user);
        }
        
        public int UpdateUser(ITSWebApp.ITSService.UserService.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public int UpdatePasswordOTPByID(int _userID, string _passwordOTP) {
            return base.Channel.UpdatePasswordOTPByID(_userID, _passwordOTP);
        }
        
        public ITSWebApp.ITSService.UserService.User[] GetUserByUserTypeID(int userTypeId) {
            return base.Channel.GetUserByUserTypeID(userTypeId);
        }
        
        public ITSWebApp.ITSService.UserService.User[] GetReferrerUsersByCaseID(int CaseID) {
            return base.Channel.GetReferrerUsersByCaseID(CaseID);
        }
        
        public ITSWebApp.ITSService.UserService.User[] GetReferrerUsersByID(int referrerID) {
            return base.Channel.GetReferrerUsersByID(referrerID);
        }
        
        public int UpdateUserFailedAttemptCount(int userID) {
            return base.Channel.UpdateUserFailedAttemptCount(userID);
        }
        
        public int ResetUserFailedAttemptCount(int userid) {
            return base.Channel.ResetUserFailedAttemptCount(userid);
        }
        
        public ITSWebApp.ITSService.UserService.User[] GetUsersRecentlyAdded() {
            return base.Channel.GetUsersRecentlyAdded();
        }
        
        public ITSWebApp.ITSService.UserService.PagedUserTypeUser GetUserTypeUsersLikeUsername(string userName, int skip, int take) {
            return base.Channel.GetUserTypeUsersLikeUsername(userName, skip, take);
        }
        
        public ITSWebApp.ITSService.UserService.PagedUserTypeUser GetUserTypeUsersLikeUserType(string userType, int skip, int take) {
            return base.Channel.GetUserTypeUsersLikeUserType(userType, skip, take);
        }
        
        public ITSWebApp.ITSService.UserService.PagedUserTypeUser GetUserTypeUsersLikeName(string name, int skip, int take) {
            return base.Channel.GetUserTypeUsersLikeName(name, skip, take);
        }
        
        public bool GetUserExistsByName(string name) {
            return base.Channel.GetUserExistsByName(name);
        }
        
        public ITSWebApp.ITSService.UserService.PagedUserTypeUser GetUserTypeUsersLikeReferrerName(string name, int skip, int take) {
            return base.Channel.GetUserTypeUsersLikeReferrerName(name, skip, take);
        }
        
        public ITSWebApp.ITSService.UserService.PagedUserTypeUser GetUserTypeUsersLikeSupplierName(string name, int skip, int take) {
            return base.Channel.GetUserTypeUsersLikeSupplierName(name, skip, take);
        }
        
        public ITSWebApp.ITSService.UserService.User[] GetAllSupplierUserBySupplierID(int _supplierID) {
            return base.Channel.GetAllSupplierUserBySupplierID(_supplierID);
        }
        
        public void AddUserProject(ITSWebApp.ITSService.UserService.UserProject _userProject) {
            base.Channel.AddUserProject(_userProject);
        }
        
        public int DeleteUserProject(int referrerProjectID, int userID) {
            return base.Channel.DeleteUserProject(referrerProjectID, userID);
        }
        
        public string[] GetAllUserEmailsByCaseContactByCaseID(int CaseID) {
            return base.Channel.GetAllUserEmailsByCaseContactByCaseID(CaseID);
        }
        
        public void UpdateUserSessionIDByUserID(int userId, string userSessionID) {
            base.Channel.UpdateUserSessionIDByUserID(userId, userSessionID);
        }
        
        public void ResetUserSessionID(int UserID) {
            base.Channel.ResetUserSessionID(UserID);
        }
        
        public int AddPasswordHistory(ITSWebApp.ITSService.UserService.PasswordHistory objpassword) {
            return base.Channel.AddPasswordHistory(objpassword);
        }
        
        public ITSWebApp.ITSService.UserService.PasswordHistory[] GetPasswordHistoryByUserID(int userID) {
            return base.Channel.GetPasswordHistoryByUserID(userID);
        }
    }
}
