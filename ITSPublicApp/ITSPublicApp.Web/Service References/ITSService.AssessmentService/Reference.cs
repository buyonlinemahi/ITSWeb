//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ITSPublicApp.Web.ITSService.AssessmentService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseAssessmentRating", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseAssessmentRating : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssessmentServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseAssessmentRatingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RatingDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssessmentServiceID {
            get {
                return this.AssessmentServiceIDField;
            }
            set {
                if ((this.AssessmentServiceIDField.Equals(value) != true)) {
                    this.AssessmentServiceIDField = value;
                    this.RaisePropertyChanged("AssessmentServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseAssessmentRatingID {
            get {
                return this.CaseAssessmentRatingIDField;
            }
            set {
                if ((this.CaseAssessmentRatingIDField.Equals(value) != true)) {
                    this.CaseAssessmentRatingIDField = value;
                    this.RaisePropertyChanged("CaseAssessmentRatingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RatingDate {
            get {
                return this.RatingDateField;
            }
            set {
                if ((this.RatingDateField.Equals(value) != true)) {
                    this.RatingDateField = value;
                    this.RaisePropertyChanged("RatingDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientImpactValue", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientImpactValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientImpactValueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientImpactValueNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientImpactValueID {
            get {
                return this.PatientImpactValueIDField;
            }
            set {
                if ((this.PatientImpactValueIDField.Equals(value) != true)) {
                    this.PatientImpactValueIDField = value;
                    this.RaisePropertyChanged("PatientImpactValueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientImpactValueName {
            get {
                return this.PatientImpactValueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientImpactValueNameField, value) != true)) {
                    this.PatientImpactValueNameField = value;
                    this.RaisePropertyChanged("PatientImpactValueName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientImpact", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientImpact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientImpactIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientImpactNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientImpactID {
            get {
                return this.PatientImpactIDField;
            }
            set {
                if ((this.PatientImpactIDField.Equals(value) != true)) {
                    this.PatientImpactIDField = value;
                    this.RaisePropertyChanged("PatientImpactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientImpactName {
            get {
                return this.PatientImpactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientImpactNameField, value) != true)) {
                    this.PatientImpactNameField = value;
                    this.RaisePropertyChanged("PatientImpactName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PsychologicalFactor", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PsychologicalFactor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PsychologicalFactorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PsychologicalFactorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PsychologicalFactorID {
            get {
                return this.PsychologicalFactorIDField;
            }
            set {
                if ((this.PsychologicalFactorIDField.Equals(value) != true)) {
                    this.PsychologicalFactorIDField = value;
                    this.RaisePropertyChanged("PsychologicalFactorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PsychologicalFactorName {
            get {
                return this.PsychologicalFactorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PsychologicalFactorNameField, value) != true)) {
                    this.PsychologicalFactorNameField = value;
                    this.RaisePropertyChanged("PsychologicalFactorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientWorkstatus", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientWorkstatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientWorkstatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientWorkstatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientWorkstatusID {
            get {
                return this.PatientWorkstatusIDField;
            }
            set {
                if ((this.PatientWorkstatusIDField.Equals(value) != true)) {
                    this.PatientWorkstatusIDField = value;
                    this.RaisePropertyChanged("PatientWorkstatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientWorkstatusName {
            get {
                return this.PatientWorkstatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientWorkstatusNameField, value) != true)) {
                    this.PatientWorkstatusNameField = value;
                    this.RaisePropertyChanged("PatientWorkstatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientImpactOnWork", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientImpactOnWork : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientImpactOnWorkIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientImpactOnWorkNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientImpactOnWorkID {
            get {
                return this.PatientImpactOnWorkIDField;
            }
            set {
                if ((this.PatientImpactOnWorkIDField.Equals(value) != true)) {
                    this.PatientImpactOnWorkIDField = value;
                    this.RaisePropertyChanged("PatientImpactOnWorkID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientImpactOnWorkName {
            get {
                return this.PatientImpactOnWorkNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientImpactOnWorkNameField, value) != true)) {
                    this.PatientImpactOnWorkNameField = value;
                    this.RaisePropertyChanged("PatientImpactOnWorkName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientLevelOfRecovery", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientLevelOfRecovery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientLevelOfRecoveryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientLevelOfRecoveryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientLevelOfRecoveryID {
            get {
                return this.PatientLevelOfRecoveryIDField;
            }
            set {
                if ((this.PatientLevelOfRecoveryIDField.Equals(value) != true)) {
                    this.PatientLevelOfRecoveryIDField = value;
                    this.RaisePropertyChanged("PatientLevelOfRecoveryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientLevelOfRecoveryName {
            get {
                return this.PatientLevelOfRecoveryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientLevelOfRecoveryNameField, value) != true)) {
                    this.PatientLevelOfRecoveryNameField = value;
                    this.RaisePropertyChanged("PatientLevelOfRecoveryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProposedTreatmentMethod", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ProposedTreatmentMethod : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProposedTreatmentMethodIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposedTreatmentMethodNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProposedTreatmentMethodID {
            get {
                return this.ProposedTreatmentMethodIDField;
            }
            set {
                if ((this.ProposedTreatmentMethodIDField.Equals(value) != true)) {
                    this.ProposedTreatmentMethodIDField = value;
                    this.RaisePropertyChanged("ProposedTreatmentMethodID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposedTreatmentMethodName {
            get {
                return this.ProposedTreatmentMethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposedTreatmentMethodNameField, value) != true)) {
                    this.ProposedTreatmentMethodNameField = value;
                    this.RaisePropertyChanged("ProposedTreatmentMethodName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentCategoryBespokeService", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentCategoryBespokeService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BespokeServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryBespokeServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BespokeServiceID {
            get {
                return this.BespokeServiceIDField;
            }
            set {
                if ((this.BespokeServiceIDField.Equals(value) != true)) {
                    this.BespokeServiceIDField = value;
                    this.RaisePropertyChanged("BespokeServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryBespokeServiceID {
            get {
                return this.TreatmentCategoryBespokeServiceIDField;
            }
            set {
                if ((this.TreatmentCategoryBespokeServiceIDField.Equals(value) != true)) {
                    this.TreatmentCategoryBespokeServiceIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryBespokeServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentCategoriesBespokeService", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentCategoriesBespokeService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BespokeServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BespokeServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryBespokeServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentCategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BespokeServiceID {
            get {
                return this.BespokeServiceIDField;
            }
            set {
                if ((this.BespokeServiceIDField.Equals(value) != true)) {
                    this.BespokeServiceIDField = value;
                    this.RaisePropertyChanged("BespokeServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BespokeServiceName {
            get {
                return this.BespokeServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BespokeServiceNameField, value) != true)) {
                    this.BespokeServiceNameField = value;
                    this.RaisePropertyChanged("BespokeServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryBespokeServiceID {
            get {
                return this.TreatmentCategoryBespokeServiceIDField;
            }
            set {
                if ((this.TreatmentCategoryBespokeServiceIDField.Equals(value) != true)) {
                    this.TreatmentCategoryBespokeServiceIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryBespokeServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentCategoryName {
            get {
                return this.TreatmentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentCategoryNameField, value) != true)) {
                    this.TreatmentCategoryNameField = value;
                    this.RaisePropertyChanged("TreatmentCategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseAssessment", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseAssessment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AnticipatedDateOfDischargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssessmentAuthorisationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssessmentServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorisationDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentDetail CaseAssessmentDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientImpact[] CaseAssessmentPatientImpactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientInjury[] CaseAssessmentPatientInjuriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientInjuryBL[] CaseAssessmentPatientInjuriesBLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentProposedTreatmentMethod[] CaseAssessmentProposedTreatmentMethodsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentRating CaseAssessmentRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeniedMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FactorsAffectingTreatmentDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasPatientConsentFormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasPatientHomeExerciseProgrammeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPatientPastSymptomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasRedFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasYellowFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentAndDiagnosisDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAcceptedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPatientDischargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPatientSufferingFinancialLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPatientTakingMedicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPatientUndergoingTreatmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsSavedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NeuralSymptomDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientOccupationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PatientRequiresFurtherInvestigationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreExistingConditionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelevantTestUndertakenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> WasPatientWorkingAtTheTimeOfTheAccidentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AnticipatedDateOfDischarge {
            get {
                return this.AnticipatedDateOfDischargeField;
            }
            set {
                if ((this.AnticipatedDateOfDischargeField.Equals(value) != true)) {
                    this.AnticipatedDateOfDischargeField = value;
                    this.RaisePropertyChanged("AnticipatedDateOfDischarge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssessmentAuthorisationID {
            get {
                return this.AssessmentAuthorisationIDField;
            }
            set {
                if ((this.AssessmentAuthorisationIDField.Equals(value) != true)) {
                    this.AssessmentAuthorisationIDField = value;
                    this.RaisePropertyChanged("AssessmentAuthorisationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssessmentServiceID {
            get {
                return this.AssessmentServiceIDField;
            }
            set {
                if ((this.AssessmentServiceIDField.Equals(value) != true)) {
                    this.AssessmentServiceIDField = value;
                    this.RaisePropertyChanged("AssessmentServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorisationDetail {
            get {
                return this.AuthorisationDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorisationDetailField, value) != true)) {
                    this.AuthorisationDetailField = value;
                    this.RaisePropertyChanged("AuthorisationDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentDetail CaseAssessmentDetail {
            get {
                return this.CaseAssessmentDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseAssessmentDetailField, value) != true)) {
                    this.CaseAssessmentDetailField = value;
                    this.RaisePropertyChanged("CaseAssessmentDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientImpact[] CaseAssessmentPatientImpacts {
            get {
                return this.CaseAssessmentPatientImpactsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseAssessmentPatientImpactsField, value) != true)) {
                    this.CaseAssessmentPatientImpactsField = value;
                    this.RaisePropertyChanged("CaseAssessmentPatientImpacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientInjury[] CaseAssessmentPatientInjuries {
            get {
                return this.CaseAssessmentPatientInjuriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseAssessmentPatientInjuriesField, value) != true)) {
                    this.CaseAssessmentPatientInjuriesField = value;
                    this.RaisePropertyChanged("CaseAssessmentPatientInjuries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientInjuryBL[] CaseAssessmentPatientInjuriesBL {
            get {
                return this.CaseAssessmentPatientInjuriesBLField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseAssessmentPatientInjuriesBLField, value) != true)) {
                    this.CaseAssessmentPatientInjuriesBLField = value;
                    this.RaisePropertyChanged("CaseAssessmentPatientInjuriesBL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentProposedTreatmentMethod[] CaseAssessmentProposedTreatmentMethods {
            get {
                return this.CaseAssessmentProposedTreatmentMethodsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseAssessmentProposedTreatmentMethodsField, value) != true)) {
                    this.CaseAssessmentProposedTreatmentMethodsField = value;
                    this.RaisePropertyChanged("CaseAssessmentProposedTreatmentMethods");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentRating CaseAssessmentRating {
            get {
                return this.CaseAssessmentRatingField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseAssessmentRatingField, value) != true)) {
                    this.CaseAssessmentRatingField = value;
                    this.RaisePropertyChanged("CaseAssessmentRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeniedMessage {
            get {
                return this.DeniedMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.DeniedMessageField, value) != true)) {
                    this.DeniedMessageField = value;
                    this.RaisePropertyChanged("DeniedMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FactorsAffectingTreatmentDescription {
            get {
                return this.FactorsAffectingTreatmentDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FactorsAffectingTreatmentDescriptionField, value) != true)) {
                    this.FactorsAffectingTreatmentDescriptionField = value;
                    this.RaisePropertyChanged("FactorsAffectingTreatmentDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasPatientConsentForm {
            get {
                return this.HasPatientConsentFormField;
            }
            set {
                if ((this.HasPatientConsentFormField.Equals(value) != true)) {
                    this.HasPatientConsentFormField = value;
                    this.RaisePropertyChanged("HasPatientConsentForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasPatientHomeExerciseProgramme {
            get {
                return this.HasPatientHomeExerciseProgrammeField;
            }
            set {
                if ((this.HasPatientHomeExerciseProgrammeField.Equals(value) != true)) {
                    this.HasPatientHomeExerciseProgrammeField = value;
                    this.RaisePropertyChanged("HasPatientHomeExerciseProgramme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPatientPastSymptoms {
            get {
                return this.HasPatientPastSymptomsField;
            }
            set {
                if ((this.HasPatientPastSymptomsField.Equals(value) != true)) {
                    this.HasPatientPastSymptomsField = value;
                    this.RaisePropertyChanged("HasPatientPastSymptoms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasRedFlags {
            get {
                return this.HasRedFlagsField;
            }
            set {
                if ((this.HasRedFlagsField.Equals(value) != true)) {
                    this.HasRedFlagsField = value;
                    this.RaisePropertyChanged("HasRedFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasYellowFlags {
            get {
                return this.HasYellowFlagsField;
            }
            set {
                if ((this.HasYellowFlagsField.Equals(value) != true)) {
                    this.HasYellowFlagsField = value;
                    this.RaisePropertyChanged("HasYellowFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentAndDiagnosisDescription {
            get {
                return this.IncidentAndDiagnosisDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentAndDiagnosisDescriptionField, value) != true)) {
                    this.IncidentAndDiagnosisDescriptionField = value;
                    this.RaisePropertyChanged("IncidentAndDiagnosisDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccepted {
            get {
                return this.IsAcceptedField;
            }
            set {
                if ((this.IsAcceptedField.Equals(value) != true)) {
                    this.IsAcceptedField = value;
                    this.RaisePropertyChanged("IsAccepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPatientDischarge {
            get {
                return this.IsPatientDischargeField;
            }
            set {
                if ((this.IsPatientDischargeField.Equals(value) != true)) {
                    this.IsPatientDischargeField = value;
                    this.RaisePropertyChanged("IsPatientDischarge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPatientSufferingFinancialLoss {
            get {
                return this.IsPatientSufferingFinancialLossField;
            }
            set {
                if ((this.IsPatientSufferingFinancialLossField.Equals(value) != true)) {
                    this.IsPatientSufferingFinancialLossField = value;
                    this.RaisePropertyChanged("IsPatientSufferingFinancialLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPatientTakingMedication {
            get {
                return this.IsPatientTakingMedicationField;
            }
            set {
                if ((this.IsPatientTakingMedicationField.Equals(value) != true)) {
                    this.IsPatientTakingMedicationField = value;
                    this.RaisePropertyChanged("IsPatientTakingMedication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPatientUndergoingTreatment {
            get {
                return this.IsPatientUndergoingTreatmentField;
            }
            set {
                if ((this.IsPatientUndergoingTreatmentField.Equals(value) != true)) {
                    this.IsPatientUndergoingTreatmentField = value;
                    this.RaisePropertyChanged("IsPatientUndergoingTreatment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsSaved {
            get {
                return this.IsSavedField;
            }
            set {
                if ((this.IsSavedField.Equals(value) != true)) {
                    this.IsSavedField = value;
                    this.RaisePropertyChanged("IsSaved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NeuralSymptomDescription {
            get {
                return this.NeuralSymptomDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NeuralSymptomDescriptionField, value) != true)) {
                    this.NeuralSymptomDescriptionField = value;
                    this.RaisePropertyChanged("NeuralSymptomDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientOccupation {
            get {
                return this.PatientOccupationField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientOccupationField, value) != true)) {
                    this.PatientOccupationField = value;
                    this.RaisePropertyChanged("PatientOccupation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PatientRequiresFurtherInvestigation {
            get {
                return this.PatientRequiresFurtherInvestigationField;
            }
            set {
                if ((this.PatientRequiresFurtherInvestigationField.Equals(value) != true)) {
                    this.PatientRequiresFurtherInvestigationField = value;
                    this.RaisePropertyChanged("PatientRequiresFurtherInvestigation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientRoleID {
            get {
                return this.PatientRoleIDField;
            }
            set {
                if ((this.PatientRoleIDField.Equals(value) != true)) {
                    this.PatientRoleIDField = value;
                    this.RaisePropertyChanged("PatientRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreExistingConditionDescription {
            get {
                return this.PreExistingConditionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PreExistingConditionDescriptionField, value) != true)) {
                    this.PreExistingConditionDescriptionField = value;
                    this.RaisePropertyChanged("PreExistingConditionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelevantTestUndertaken {
            get {
                return this.RelevantTestUndertakenField;
            }
            set {
                if ((object.ReferenceEquals(this.RelevantTestUndertakenField, value) != true)) {
                    this.RelevantTestUndertakenField = value;
                    this.RaisePropertyChanged("RelevantTestUndertaken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> WasPatientWorkingAtTheTimeOfTheAccident {
            get {
                return this.WasPatientWorkingAtTheTimeOfTheAccidentField;
            }
            set {
                if ((this.WasPatientWorkingAtTheTimeOfTheAccidentField.Equals(value) != true)) {
                    this.WasPatientWorkingAtTheTimeOfTheAccidentField = value;
                    this.RaisePropertyChanged("WasPatientWorkingAtTheTimeOfTheAccident");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseAssessmentDetail", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseAssessmentDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbsentDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AbsentPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AbsentPeriodDurationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AssessmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssessmentServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseAssessmentDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatesOfSessionAttendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EvidenceOfClinicalReasoningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EvidenceOfTreatmentRecommendationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FollowingTreatmentPatientLevelOfRecoveryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FurtherInvestigationOrOnwardReferralField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasCompliedHomeExerciseProgrammeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasThePatientHadTimeOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasThePatientReturnedToWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsFurtherInvestigationOrOnwardReferralRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsFurtherTreatmentRecommendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPatientReturnToPreInjuryDutiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainFactorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PatientDateOfReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientImpactOnWorkIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PatientLevelOfRecoveryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PatientPreInjuryDutiesDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientRecommendationReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientRecommendedTreatmentSessionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientRecommendedTreatmentSessionsDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientTreatmentPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientTreatmentPeriodDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PatientTreatmentPeriodDurationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientWorkstatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PractitionerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionsPatientAttendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionsPatientFailedToAttendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentPeriodTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbsentDetail {
            get {
                return this.AbsentDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.AbsentDetailField, value) != true)) {
                    this.AbsentDetailField = value;
                    this.RaisePropertyChanged("AbsentDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AbsentPeriod {
            get {
                return this.AbsentPeriodField;
            }
            set {
                if ((this.AbsentPeriodField.Equals(value) != true)) {
                    this.AbsentPeriodField = value;
                    this.RaisePropertyChanged("AbsentPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AbsentPeriodDurationID {
            get {
                return this.AbsentPeriodDurationIDField;
            }
            set {
                if ((this.AbsentPeriodDurationIDField.Equals(value) != true)) {
                    this.AbsentPeriodDurationIDField = value;
                    this.RaisePropertyChanged("AbsentPeriodDurationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInformation {
            get {
                return this.AdditionalInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInformationField, value) != true)) {
                    this.AdditionalInformationField = value;
                    this.RaisePropertyChanged("AdditionalInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AssessmentDate {
            get {
                return this.AssessmentDateField;
            }
            set {
                if ((this.AssessmentDateField.Equals(value) != true)) {
                    this.AssessmentDateField = value;
                    this.RaisePropertyChanged("AssessmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssessmentServiceID {
            get {
                return this.AssessmentServiceIDField;
            }
            set {
                if ((this.AssessmentServiceIDField.Equals(value) != true)) {
                    this.AssessmentServiceIDField = value;
                    this.RaisePropertyChanged("AssessmentServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseAssessmentDetailID {
            get {
                return this.CaseAssessmentDetailIDField;
            }
            set {
                if ((this.CaseAssessmentDetailIDField.Equals(value) != true)) {
                    this.CaseAssessmentDetailIDField = value;
                    this.RaisePropertyChanged("CaseAssessmentDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatesOfSessionAttended {
            get {
                return this.DatesOfSessionAttendedField;
            }
            set {
                if ((object.ReferenceEquals(this.DatesOfSessionAttendedField, value) != true)) {
                    this.DatesOfSessionAttendedField = value;
                    this.RaisePropertyChanged("DatesOfSessionAttended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EvidenceOfClinicalReasoning {
            get {
                return this.EvidenceOfClinicalReasoningField;
            }
            set {
                if ((object.ReferenceEquals(this.EvidenceOfClinicalReasoningField, value) != true)) {
                    this.EvidenceOfClinicalReasoningField = value;
                    this.RaisePropertyChanged("EvidenceOfClinicalReasoning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EvidenceOfTreatmentRecommendations {
            get {
                return this.EvidenceOfTreatmentRecommendationsField;
            }
            set {
                if ((object.ReferenceEquals(this.EvidenceOfTreatmentRecommendationsField, value) != true)) {
                    this.EvidenceOfTreatmentRecommendationsField = value;
                    this.RaisePropertyChanged("EvidenceOfTreatmentRecommendations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FollowingTreatmentPatientLevelOfRecoveryID {
            get {
                return this.FollowingTreatmentPatientLevelOfRecoveryIDField;
            }
            set {
                if ((this.FollowingTreatmentPatientLevelOfRecoveryIDField.Equals(value) != true)) {
                    this.FollowingTreatmentPatientLevelOfRecoveryIDField = value;
                    this.RaisePropertyChanged("FollowingTreatmentPatientLevelOfRecoveryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FurtherInvestigationOrOnwardReferral {
            get {
                return this.FurtherInvestigationOrOnwardReferralField;
            }
            set {
                if ((object.ReferenceEquals(this.FurtherInvestigationOrOnwardReferralField, value) != true)) {
                    this.FurtherInvestigationOrOnwardReferralField = value;
                    this.RaisePropertyChanged("FurtherInvestigationOrOnwardReferral");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasCompliedHomeExerciseProgramme {
            get {
                return this.HasCompliedHomeExerciseProgrammeField;
            }
            set {
                if ((this.HasCompliedHomeExerciseProgrammeField.Equals(value) != true)) {
                    this.HasCompliedHomeExerciseProgrammeField = value;
                    this.RaisePropertyChanged("HasCompliedHomeExerciseProgramme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasThePatientHadTimeOff {
            get {
                return this.HasThePatientHadTimeOffField;
            }
            set {
                if ((this.HasThePatientHadTimeOffField.Equals(value) != true)) {
                    this.HasThePatientHadTimeOffField = value;
                    this.RaisePropertyChanged("HasThePatientHadTimeOff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasThePatientReturnedToWork {
            get {
                return this.HasThePatientReturnedToWorkField;
            }
            set {
                if ((this.HasThePatientReturnedToWorkField.Equals(value) != true)) {
                    this.HasThePatientReturnedToWorkField = value;
                    this.RaisePropertyChanged("HasThePatientReturnedToWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsFurtherInvestigationOrOnwardReferralRequired {
            get {
                return this.IsFurtherInvestigationOrOnwardReferralRequiredField;
            }
            set {
                if ((this.IsFurtherInvestigationOrOnwardReferralRequiredField.Equals(value) != true)) {
                    this.IsFurtherInvestigationOrOnwardReferralRequiredField = value;
                    this.RaisePropertyChanged("IsFurtherInvestigationOrOnwardReferralRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsFurtherTreatmentRecommended {
            get {
                return this.IsFurtherTreatmentRecommendedField;
            }
            set {
                if ((this.IsFurtherTreatmentRecommendedField.Equals(value) != true)) {
                    this.IsFurtherTreatmentRecommendedField = value;
                    this.RaisePropertyChanged("IsFurtherTreatmentRecommended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPatientReturnToPreInjuryDuties {
            get {
                return this.IsPatientReturnToPreInjuryDutiesField;
            }
            set {
                if ((this.IsPatientReturnToPreInjuryDutiesField.Equals(value) != true)) {
                    this.IsPatientReturnToPreInjuryDutiesField = value;
                    this.RaisePropertyChanged("IsPatientReturnToPreInjuryDuties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainFactors {
            get {
                return this.MainFactorsField;
            }
            set {
                if ((object.ReferenceEquals(this.MainFactorsField, value) != true)) {
                    this.MainFactorsField = value;
                    this.RaisePropertyChanged("MainFactors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PatientDateOfReturn {
            get {
                return this.PatientDateOfReturnField;
            }
            set {
                if ((this.PatientDateOfReturnField.Equals(value) != true)) {
                    this.PatientDateOfReturnField = value;
                    this.RaisePropertyChanged("PatientDateOfReturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientImpactOnWorkID {
            get {
                return this.PatientImpactOnWorkIDField;
            }
            set {
                if ((this.PatientImpactOnWorkIDField.Equals(value) != true)) {
                    this.PatientImpactOnWorkIDField = value;
                    this.RaisePropertyChanged("PatientImpactOnWorkID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PatientLevelOfRecoveryID {
            get {
                return this.PatientLevelOfRecoveryIDField;
            }
            set {
                if ((this.PatientLevelOfRecoveryIDField.Equals(value) != true)) {
                    this.PatientLevelOfRecoveryIDField = value;
                    this.RaisePropertyChanged("PatientLevelOfRecoveryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PatientPreInjuryDutiesDate {
            get {
                return this.PatientPreInjuryDutiesDateField;
            }
            set {
                if ((this.PatientPreInjuryDutiesDateField.Equals(value) != true)) {
                    this.PatientPreInjuryDutiesDateField = value;
                    this.RaisePropertyChanged("PatientPreInjuryDutiesDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientRecommendationReturn {
            get {
                return this.PatientRecommendationReturnField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientRecommendationReturnField, value) != true)) {
                    this.PatientRecommendationReturnField = value;
                    this.RaisePropertyChanged("PatientRecommendationReturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientRecommendedTreatmentSessions {
            get {
                return this.PatientRecommendedTreatmentSessionsField;
            }
            set {
                if ((this.PatientRecommendedTreatmentSessionsField.Equals(value) != true)) {
                    this.PatientRecommendedTreatmentSessionsField = value;
                    this.RaisePropertyChanged("PatientRecommendedTreatmentSessions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientRecommendedTreatmentSessionsDetail {
            get {
                return this.PatientRecommendedTreatmentSessionsDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientRecommendedTreatmentSessionsDetailField, value) != true)) {
                    this.PatientRecommendedTreatmentSessionsDetailField = value;
                    this.RaisePropertyChanged("PatientRecommendedTreatmentSessionsDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientTreatmentPeriod {
            get {
                return this.PatientTreatmentPeriodField;
            }
            set {
                if ((this.PatientTreatmentPeriodField.Equals(value) != true)) {
                    this.PatientTreatmentPeriodField = value;
                    this.RaisePropertyChanged("PatientTreatmentPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientTreatmentPeriodDetail {
            get {
                return this.PatientTreatmentPeriodDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientTreatmentPeriodDetailField, value) != true)) {
                    this.PatientTreatmentPeriodDetailField = value;
                    this.RaisePropertyChanged("PatientTreatmentPeriodDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PatientTreatmentPeriodDurationID {
            get {
                return this.PatientTreatmentPeriodDurationIDField;
            }
            set {
                if ((this.PatientTreatmentPeriodDurationIDField.Equals(value) != true)) {
                    this.PatientTreatmentPeriodDurationIDField = value;
                    this.RaisePropertyChanged("PatientTreatmentPeriodDurationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientWorkstatusID {
            get {
                return this.PatientWorkstatusIDField;
            }
            set {
                if ((this.PatientWorkstatusIDField.Equals(value) != true)) {
                    this.PatientWorkstatusIDField = value;
                    this.RaisePropertyChanged("PatientWorkstatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PractitionerID {
            get {
                return this.PractitionerIDField;
            }
            set {
                if ((this.PractitionerIDField.Equals(value) != true)) {
                    this.PractitionerIDField = value;
                    this.RaisePropertyChanged("PractitionerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionsPatientAttended {
            get {
                return this.SessionsPatientAttendedField;
            }
            set {
                if ((this.SessionsPatientAttendedField.Equals(value) != true)) {
                    this.SessionsPatientAttendedField = value;
                    this.RaisePropertyChanged("SessionsPatientAttended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionsPatientFailedToAttend {
            get {
                return this.SessionsPatientFailedToAttendField;
            }
            set {
                if ((this.SessionsPatientFailedToAttendField.Equals(value) != true)) {
                    this.SessionsPatientFailedToAttendField = value;
                    this.RaisePropertyChanged("SessionsPatientFailedToAttend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentPeriodTypeID {
            get {
                return this.TreatmentPeriodTypeIDField;
            }
            set {
                if ((this.TreatmentPeriodTypeIDField.Equals(value) != true)) {
                    this.TreatmentPeriodTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentPeriodTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseAssessmentPatientImpact", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseAssessmentPatientImpact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseAssessmentDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseAssessmentPatientImpactIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientImpactIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientImpactValueIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseAssessmentDetailID {
            get {
                return this.CaseAssessmentDetailIDField;
            }
            set {
                if ((this.CaseAssessmentDetailIDField.Equals(value) != true)) {
                    this.CaseAssessmentDetailIDField = value;
                    this.RaisePropertyChanged("CaseAssessmentDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseAssessmentPatientImpactID {
            get {
                return this.CaseAssessmentPatientImpactIDField;
            }
            set {
                if ((this.CaseAssessmentPatientImpactIDField.Equals(value) != true)) {
                    this.CaseAssessmentPatientImpactIDField = value;
                    this.RaisePropertyChanged("CaseAssessmentPatientImpactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientImpactID {
            get {
                return this.PatientImpactIDField;
            }
            set {
                if ((this.PatientImpactIDField.Equals(value) != true)) {
                    this.PatientImpactIDField = value;
                    this.RaisePropertyChanged("PatientImpactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientImpactValueID {
            get {
                return this.PatientImpactValueIDField;
            }
            set {
                if ((this.PatientImpactValueIDField.Equals(value) != true)) {
                    this.PatientImpactValueIDField = value;
                    this.RaisePropertyChanged("PatientImpactValueID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseAssessmentPatientInjury", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseAssessmentPatientInjury : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AffectedAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AffectedAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseAssessmentDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseAssessmentPatientInjuryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherSymptomDesciptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RestrictionRangeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StrengthTestingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SymptomDescriptionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AffectedArea {
            get {
                return this.AffectedAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AffectedAreaField, value) != true)) {
                    this.AffectedAreaField = value;
                    this.RaisePropertyChanged("AffectedArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AffectedAreaID {
            get {
                return this.AffectedAreaIDField;
            }
            set {
                if ((this.AffectedAreaIDField.Equals(value) != true)) {
                    this.AffectedAreaIDField = value;
                    this.RaisePropertyChanged("AffectedAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseAssessmentDetailID {
            get {
                return this.CaseAssessmentDetailIDField;
            }
            set {
                if ((this.CaseAssessmentDetailIDField.Equals(value) != true)) {
                    this.CaseAssessmentDetailIDField = value;
                    this.RaisePropertyChanged("CaseAssessmentDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseAssessmentPatientInjuryID {
            get {
                return this.CaseAssessmentPatientInjuryIDField;
            }
            set {
                if ((this.CaseAssessmentPatientInjuryIDField.Equals(value) != true)) {
                    this.CaseAssessmentPatientInjuryIDField = value;
                    this.RaisePropertyChanged("CaseAssessmentPatientInjuryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherSymptomDesciption {
            get {
                return this.OtherSymptomDesciptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherSymptomDesciptionField, value) != true)) {
                    this.OtherSymptomDesciptionField = value;
                    this.RaisePropertyChanged("OtherSymptomDesciption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Restriction {
            get {
                return this.RestrictionField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionField, value) != true)) {
                    this.RestrictionField = value;
                    this.RaisePropertyChanged("Restriction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RestrictionRangeID {
            get {
                return this.RestrictionRangeIDField;
            }
            set {
                if ((this.RestrictionRangeIDField.Equals(value) != true)) {
                    this.RestrictionRangeIDField = value;
                    this.RaisePropertyChanged("RestrictionRangeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((object.ReferenceEquals(this.ScoreField, value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StrengthTestingID {
            get {
                return this.StrengthTestingIDField;
            }
            set {
                if ((this.StrengthTestingIDField.Equals(value) != true)) {
                    this.StrengthTestingIDField = value;
                    this.RaisePropertyChanged("StrengthTestingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SymptomDescriptionID {
            get {
                return this.SymptomDescriptionIDField;
            }
            set {
                if ((this.SymptomDescriptionIDField.Equals(value) != true)) {
                    this.SymptomDescriptionIDField = value;
                    this.RaisePropertyChanged("SymptomDescriptionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseAssessmentPatientInjuryBL", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseAssessmentPatientInjuryBL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AffectedAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AffectedAreaDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AffectedAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseAssessmentDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseAssessmentPatientInjuryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherSymptomDesciptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionRangeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RestrictionRangeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrengthTestingDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StrengthTestingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SymptomDescriptionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymptomDescriptionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AffectedArea {
            get {
                return this.AffectedAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AffectedAreaField, value) != true)) {
                    this.AffectedAreaField = value;
                    this.RaisePropertyChanged("AffectedArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AffectedAreaDescription {
            get {
                return this.AffectedAreaDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AffectedAreaDescriptionField, value) != true)) {
                    this.AffectedAreaDescriptionField = value;
                    this.RaisePropertyChanged("AffectedAreaDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AffectedAreaID {
            get {
                return this.AffectedAreaIDField;
            }
            set {
                if ((this.AffectedAreaIDField.Equals(value) != true)) {
                    this.AffectedAreaIDField = value;
                    this.RaisePropertyChanged("AffectedAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseAssessmentDetailID {
            get {
                return this.CaseAssessmentDetailIDField;
            }
            set {
                if ((this.CaseAssessmentDetailIDField.Equals(value) != true)) {
                    this.CaseAssessmentDetailIDField = value;
                    this.RaisePropertyChanged("CaseAssessmentDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseAssessmentPatientInjuryID {
            get {
                return this.CaseAssessmentPatientInjuryIDField;
            }
            set {
                if ((this.CaseAssessmentPatientInjuryIDField.Equals(value) != true)) {
                    this.CaseAssessmentPatientInjuryIDField = value;
                    this.RaisePropertyChanged("CaseAssessmentPatientInjuryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherSymptomDesciption {
            get {
                return this.OtherSymptomDesciptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherSymptomDesciptionField, value) != true)) {
                    this.OtherSymptomDesciptionField = value;
                    this.RaisePropertyChanged("OtherSymptomDesciption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Restriction {
            get {
                return this.RestrictionField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionField, value) != true)) {
                    this.RestrictionField = value;
                    this.RaisePropertyChanged("Restriction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionRangeDescription {
            get {
                return this.RestrictionRangeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionRangeDescriptionField, value) != true)) {
                    this.RestrictionRangeDescriptionField = value;
                    this.RaisePropertyChanged("RestrictionRangeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RestrictionRangeID {
            get {
                return this.RestrictionRangeIDField;
            }
            set {
                if ((this.RestrictionRangeIDField.Equals(value) != true)) {
                    this.RestrictionRangeIDField = value;
                    this.RaisePropertyChanged("RestrictionRangeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((object.ReferenceEquals(this.ScoreField, value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrengthTestingDescription {
            get {
                return this.StrengthTestingDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StrengthTestingDescriptionField, value) != true)) {
                    this.StrengthTestingDescriptionField = value;
                    this.RaisePropertyChanged("StrengthTestingDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StrengthTestingID {
            get {
                return this.StrengthTestingIDField;
            }
            set {
                if ((this.StrengthTestingIDField.Equals(value) != true)) {
                    this.StrengthTestingIDField = value;
                    this.RaisePropertyChanged("StrengthTestingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SymptomDescriptionID {
            get {
                return this.SymptomDescriptionIDField;
            }
            set {
                if ((this.SymptomDescriptionIDField.Equals(value) != true)) {
                    this.SymptomDescriptionIDField = value;
                    this.RaisePropertyChanged("SymptomDescriptionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SymptomDescriptionName {
            get {
                return this.SymptomDescriptionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SymptomDescriptionNameField, value) != true)) {
                    this.SymptomDescriptionNameField = value;
                    this.RaisePropertyChanged("SymptomDescriptionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseAssessmentProposedTreatmentMethod", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseAssessmentProposedTreatmentMethod : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProposedTreatmentMethodIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProposedTreatmentMethodID {
            get {
                return this.ProposedTreatmentMethodIDField;
            }
            set {
                if ((this.ProposedTreatmentMethodIDField.Equals(value) != true)) {
                    this.ProposedTreatmentMethodIDField = value;
                    this.RaisePropertyChanged("ProposedTreatmentMethodID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseAssessmentCustom", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseAssessmentCustom : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseAssessmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalAssessmentMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFurtherTreatmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReviewAssessmentMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isAcceptedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseAssessmentID {
            get {
                return this.CaseAssessmentIDField;
            }
            set {
                if ((this.CaseAssessmentIDField.Equals(value) != true)) {
                    this.CaseAssessmentIDField = value;
                    this.RaisePropertyChanged("CaseAssessmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalAssessmentMessage {
            get {
                return this.FinalAssessmentMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalAssessmentMessageField, value) != true)) {
                    this.FinalAssessmentMessageField = value;
                    this.RaisePropertyChanged("FinalAssessmentMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFurtherTreatment {
            get {
                return this.IsFurtherTreatmentField;
            }
            set {
                if ((this.IsFurtherTreatmentField.Equals(value) != true)) {
                    this.IsFurtherTreatmentField = value;
                    this.RaisePropertyChanged("IsFurtherTreatment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReviewAssessmentMessage {
            get {
                return this.ReviewAssessmentMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewAssessmentMessageField, value) != true)) {
                    this.ReviewAssessmentMessageField = value;
                    this.RaisePropertyChanged("ReviewAssessmentMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isAccepted {
            get {
                return this.isAcceptedField;
            }
            set {
                if ((this.isAcceptedField.Equals(value) != true)) {
                    this.isAcceptedField = value;
                    this.RaisePropertyChanged("isAccepted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReferrerCaseAssessmentModification", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ReferrerCaseAssessmentModification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssessmentServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssessmentServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerCaseAssessmentModificationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentSessionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssessmentServiceID {
            get {
                return this.AssessmentServiceIDField;
            }
            set {
                if ((this.AssessmentServiceIDField.Equals(value) != true)) {
                    this.AssessmentServiceIDField = value;
                    this.RaisePropertyChanged("AssessmentServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssessmentServiceName {
            get {
                return this.AssessmentServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssessmentServiceNameField, value) != true)) {
                    this.AssessmentServiceNameField = value;
                    this.RaisePropertyChanged("AssessmentServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerCaseAssessmentModificationID {
            get {
                return this.ReferrerCaseAssessmentModificationIDField;
            }
            set {
                if ((this.ReferrerCaseAssessmentModificationIDField.Equals(value) != true)) {
                    this.ReferrerCaseAssessmentModificationIDField = value;
                    this.RaisePropertyChanged("ReferrerCaseAssessmentModificationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentSession {
            get {
                return this.TreatmentSessionField;
            }
            set {
                if ((this.TreatmentSessionField.Equals(value) != true)) {
                    this.TreatmentSessionField = value;
                    this.RaisePropertyChanged("TreatmentSession");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReferrerCaseAssessmentModificationAuthority", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ReferrerCaseAssessmentModificationAuthority : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfService {
            get {
                return this.DateOfServiceField;
            }
            set {
                if ((this.DateOfServiceField.Equals(value) != true)) {
                    this.DateOfServiceField = value;
                    this.RaisePropertyChanged("DateOfService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QTY {
            get {
                return this.QTYField;
            }
            set {
                if ((this.QTYField.Equals(value) != true)) {
                    this.QTYField = value;
                    this.RaisePropertyChanged("QTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ITSService.AssessmentService.IAssessmentService")]
    public interface IAssessmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/AddCaseAssessmentRating", ReplyAction="http://tempuri.org/IAssessmentService/AddCaseAssessmentRatingResponse")]
        int AddCaseAssessmentRating(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentRating caseAssessmentRating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentRatingByCaseIDAndAssess" +
            "mentServiceID", ReplyAction="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentRatingByCaseIDAndAssess" +
            "mentServiceIDResponse")]
        int UpdateCaseAssessmentRatingByCaseIDAndAssessmentServiceID(int caseID, int assessmentServiceID, decimal rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetCaseAssessmentRatingByCaseIDAndAssessmen" +
            "tServiceID", ReplyAction="http://tempuri.org/IAssessmentService/GetCaseAssessmentRatingByCaseIDAndAssessmen" +
            "tServiceIDResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentRating GetCaseAssessmentRatingByCaseIDAndAssessmentServiceID(int caseID, int assessmentServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetAllPatientImpactValues", ReplyAction="http://tempuri.org/IAssessmentService/GetAllPatientImpactValuesResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.PatientImpactValue[] GetAllPatientImpactValues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetAllPatientImpacts", ReplyAction="http://tempuri.org/IAssessmentService/GetAllPatientImpactsResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.PatientImpact[] GetAllPatientImpacts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetAllPsychologicalFactors", ReplyAction="http://tempuri.org/IAssessmentService/GetAllPsychologicalFactorsResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.PsychologicalFactor[] GetAllPsychologicalFactors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetAllPatientWorkstatus", ReplyAction="http://tempuri.org/IAssessmentService/GetAllPatientWorkstatusResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.PatientWorkstatus[] GetAllPatientWorkstatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetAllPatientImpactOnWork", ReplyAction="http://tempuri.org/IAssessmentService/GetAllPatientImpactOnWorkResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.PatientImpactOnWork[] GetAllPatientImpactOnWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetAllPatientLevelOfRecovery", ReplyAction="http://tempuri.org/IAssessmentService/GetAllPatientLevelOfRecoveryResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.PatientLevelOfRecovery[] GetAllPatientLevelOfRecovery();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetAllProposedTreatmentMethod", ReplyAction="http://tempuri.org/IAssessmentService/GetAllProposedTreatmentMethodResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.ProposedTreatmentMethod[] GetAllProposedTreatmentMethod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetTreatmentCategoryBespokeServicesByTreatm" +
            "entCategoryID", ReplyAction="http://tempuri.org/IAssessmentService/GetTreatmentCategoryBespokeServicesByTreatm" +
            "entCategoryIDResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.TreatmentCategoryBespokeService[] GetTreatmentCategoryBespokeServicesByTreatmentCategoryID(int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetTreatmentCategoriesBespokeServicesByTrea" +
            "tmentCategoryID", ReplyAction="http://tempuri.org/IAssessmentService/GetTreatmentCategoriesBespokeServicesByTrea" +
            "tmentCategoryIDResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.TreatmentCategoriesBespokeService[] GetTreatmentCategoriesBespokeServicesByTreatmentCategoryID(int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/AddCaseAssessment", ReplyAction="http://tempuri.org/IAssessmentService/AddCaseAssessmentResponse")]
        int AddCaseAssessment(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessment caseAssessment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentAuthorisationToModified" +
            "ByCaseID", ReplyAction="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentAuthorisationToModified" +
            "ByCaseIDResponse")]
        int UpdateCaseAssessmentAuthorisationToModifiedByCaseID(int caseID, string authorisationDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentAuthorisationToApproved" +
            "ByCaseID", ReplyAction="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentAuthorisationToApproved" +
            "ByCaseIDResponse")]
        int UpdateCaseAssessmentAuthorisationToApprovedByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentAuthorisationToDeniedBy" +
            "CaseID", ReplyAction="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentAuthorisationToDeniedBy" +
            "CaseIDResponse")]
        int UpdateCaseAssessmentAuthorisationToDeniedByCaseID(int caseID, string deniedMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetCaseAssessmentByCaseID", ReplyAction="http://tempuri.org/IAssessmentService/GetCaseAssessmentByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessment GetCaseAssessmentByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentByCaseID", ReplyAction="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentByCaseIDResponse")]
        int UpdateCaseAssessmentByCaseID(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessment caseAssessment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetCaseAssessmentQA", ReplyAction="http://tempuri.org/IAssessmentService/GetCaseAssessmentQAResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessment GetCaseAssessmentQA(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetCaseAssessmentByCaseIDAndCaseAssessmentD" +
            "etailID", ReplyAction="http://tempuri.org/IAssessmentService/GetCaseAssessmentByCaseIDAndCaseAssessmentD" +
            "etailIDResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessment GetCaseAssessmentByCaseIDAndCaseAssessmentDetailID(int caseID, int caseAssessmentDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentIsSavedByCaseID", ReplyAction="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentIsSavedByCaseIDResponse" +
            "")]
        int UpdateCaseAssessmentIsSavedByCaseID(int _caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentPatientImpactByCaseAsse" +
            "ssmentPatientImpactID", ReplyAction="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentPatientImpactByCaseAsse" +
            "ssmentPatientImpactIDResponse")]
        int UpdateCaseAssessmentPatientImpactByCaseAssessmentPatientImpactID(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientImpact caseAssessmentPatientImpact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetCaseAssessmentPatientImpactsByPatientImp" +
            "actID", ReplyAction="http://tempuri.org/IAssessmentService/GetCaseAssessmentPatientImpactsByPatientImp" +
            "actIDResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientImpact[] GetCaseAssessmentPatientImpactsByPatientImpactID(int patientImpactID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetCaseAssessmentPatientImpactsByPatientImp" +
            "actValueID", ReplyAction="http://tempuri.org/IAssessmentService/GetCaseAssessmentPatientImpactsByPatientImp" +
            "actValueIDResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientImpact[] GetCaseAssessmentPatientImpactsByPatientImpactValueID(int patientImpactValueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetAllCaseAssessmentPatientImpacts", ReplyAction="http://tempuri.org/IAssessmentService/GetAllCaseAssessmentPatientImpactsResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientImpact[] GetAllCaseAssessmentPatientImpacts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetCaseAssessmentPatientImpactsByCaseAssess" +
            "mentDetailID", ReplyAction="http://tempuri.org/IAssessmentService/GetCaseAssessmentPatientImpactsByCaseAssess" +
            "mentDetailIDResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientImpact[] GetCaseAssessmentPatientImpactsByCaseAssessmentDetailID(int caseAssessmentDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentPatientInjuryByCaseAsse" +
            "ssmentPatientInjuryID", ReplyAction="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentPatientInjuryByCaseAsse" +
            "ssmentPatientInjuryIDResponse")]
        int UpdateCaseAssessmentPatientInjuryByCaseAssessmentPatientInjuryID(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientInjury caseAssessmentPatientInjury);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetCaseAssessmentPatientInjuriesByCaseAsses" +
            "smentDetailID", ReplyAction="http://tempuri.org/IAssessmentService/GetCaseAssessmentPatientInjuriesByCaseAsses" +
            "smentDetailIDResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientInjuryBL[] GetCaseAssessmentPatientInjuriesByCaseAssessmentDetailID(int caseAssessmentDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetAllCaseAssessmentDetailByCaseID", ReplyAction="http://tempuri.org/IAssessmentService/GetAllCaseAssessmentDetailByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentDetail[] GetAllCaseAssessmentDetailByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetQASubmitedCaseAssessmentDetailsByCaseID", ReplyAction="http://tempuri.org/IAssessmentService/GetQASubmitedCaseAssessmentDetailsByCaseIDR" +
            "esponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentDetail[] GetQASubmitedCaseAssessmentDetailsByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/AddCaseAssessmentCustom", ReplyAction="http://tempuri.org/IAssessmentService/AddCaseAssessmentCustomResponse")]
        int AddCaseAssessmentCustom(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentCustom caseAssessmentCustom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentCustom", ReplyAction="http://tempuri.org/IAssessmentService/UpdateCaseAssessmentCustomResponse")]
        int UpdateCaseAssessmentCustom(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentCustom caseAssessmentCustom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/UpdateCaseRiewAssessmentMessageCustom", ReplyAction="http://tempuri.org/IAssessmentService/UpdateCaseRiewAssessmentMessageCustomRespon" +
            "se")]
        int UpdateCaseRiewAssessmentMessageCustom(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentCustom caseAssessmentCustom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/UpdateCaseInitialAssessmentMessageCustom", ReplyAction="http://tempuri.org/IAssessmentService/UpdateCaseInitialAssessmentMessageCustomRes" +
            "ponse")]
        int UpdateCaseInitialAssessmentMessageCustom(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentCustom caseAssessmentCustom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/UpdateCaseFinalAssessmentMessageCustom", ReplyAction="http://tempuri.org/IAssessmentService/UpdateCaseFinalAssessmentMessageCustomRespo" +
            "nse")]
        int UpdateCaseFinalAssessmentMessageCustom(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentCustom caseAssessmentCustom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetCaseAssessmentCustomByCaseID", ReplyAction="http://tempuri.org/IAssessmentService/GetCaseAssessmentCustomByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentCustom GetCaseAssessmentCustomByCaseID(int CaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/AddReferrerCaseAssessmentModification", ReplyAction="http://tempuri.org/IAssessmentService/AddReferrerCaseAssessmentModificationRespon" +
            "se")]
        int AddReferrerCaseAssessmentModification(ITSPublicApp.Web.ITSService.AssessmentService.ReferrerCaseAssessmentModification referrerCaseAssessmentModification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetCaseTreatmentPricingByCaseID", ReplyAction="http://tempuri.org/IAssessmentService/GetCaseTreatmentPricingByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.ReferrerCaseAssessmentModificationAuthority[] GetCaseTreatmentPricingByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssessmentService/GetReferrerCaseAssessmentModificationsbyCas" +
            "eID", ReplyAction="http://tempuri.org/IAssessmentService/GetReferrerCaseAssessmentModificationsbyCas" +
            "eIDResponse")]
        ITSPublicApp.Web.ITSService.AssessmentService.ReferrerCaseAssessmentModification[] GetReferrerCaseAssessmentModificationsbyCaseID(int caseID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAssessmentServiceChannel : ITSPublicApp.Web.ITSService.AssessmentService.IAssessmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AssessmentServiceClient : System.ServiceModel.ClientBase<ITSPublicApp.Web.ITSService.AssessmentService.IAssessmentService>, ITSPublicApp.Web.ITSService.AssessmentService.IAssessmentService {
        
        public AssessmentServiceClient() {
        }
        
        public AssessmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AssessmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssessmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssessmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddCaseAssessmentRating(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentRating caseAssessmentRating) {
            return base.Channel.AddCaseAssessmentRating(caseAssessmentRating);
        }
        
        public int UpdateCaseAssessmentRatingByCaseIDAndAssessmentServiceID(int caseID, int assessmentServiceID, decimal rating) {
            return base.Channel.UpdateCaseAssessmentRatingByCaseIDAndAssessmentServiceID(caseID, assessmentServiceID, rating);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentRating GetCaseAssessmentRatingByCaseIDAndAssessmentServiceID(int caseID, int assessmentServiceID) {
            return base.Channel.GetCaseAssessmentRatingByCaseIDAndAssessmentServiceID(caseID, assessmentServiceID);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.PatientImpactValue[] GetAllPatientImpactValues() {
            return base.Channel.GetAllPatientImpactValues();
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.PatientImpact[] GetAllPatientImpacts() {
            return base.Channel.GetAllPatientImpacts();
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.PsychologicalFactor[] GetAllPsychologicalFactors() {
            return base.Channel.GetAllPsychologicalFactors();
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.PatientWorkstatus[] GetAllPatientWorkstatus() {
            return base.Channel.GetAllPatientWorkstatus();
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.PatientImpactOnWork[] GetAllPatientImpactOnWork() {
            return base.Channel.GetAllPatientImpactOnWork();
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.PatientLevelOfRecovery[] GetAllPatientLevelOfRecovery() {
            return base.Channel.GetAllPatientLevelOfRecovery();
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.ProposedTreatmentMethod[] GetAllProposedTreatmentMethod() {
            return base.Channel.GetAllProposedTreatmentMethod();
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.TreatmentCategoryBespokeService[] GetTreatmentCategoryBespokeServicesByTreatmentCategoryID(int treatmentCategoryID) {
            return base.Channel.GetTreatmentCategoryBespokeServicesByTreatmentCategoryID(treatmentCategoryID);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.TreatmentCategoriesBespokeService[] GetTreatmentCategoriesBespokeServicesByTreatmentCategoryID(int treatmentCategoryID) {
            return base.Channel.GetTreatmentCategoriesBespokeServicesByTreatmentCategoryID(treatmentCategoryID);
        }
        
        public int AddCaseAssessment(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessment caseAssessment) {
            return base.Channel.AddCaseAssessment(caseAssessment);
        }
        
        public int UpdateCaseAssessmentAuthorisationToModifiedByCaseID(int caseID, string authorisationDetail) {
            return base.Channel.UpdateCaseAssessmentAuthorisationToModifiedByCaseID(caseID, authorisationDetail);
        }
        
        public int UpdateCaseAssessmentAuthorisationToApprovedByCaseID(int caseID) {
            return base.Channel.UpdateCaseAssessmentAuthorisationToApprovedByCaseID(caseID);
        }
        
        public int UpdateCaseAssessmentAuthorisationToDeniedByCaseID(int caseID, string deniedMessage) {
            return base.Channel.UpdateCaseAssessmentAuthorisationToDeniedByCaseID(caseID, deniedMessage);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessment GetCaseAssessmentByCaseID(int caseID) {
            return base.Channel.GetCaseAssessmentByCaseID(caseID);
        }
        
        public int UpdateCaseAssessmentByCaseID(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessment caseAssessment) {
            return base.Channel.UpdateCaseAssessmentByCaseID(caseAssessment);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessment GetCaseAssessmentQA(int caseID) {
            return base.Channel.GetCaseAssessmentQA(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessment GetCaseAssessmentByCaseIDAndCaseAssessmentDetailID(int caseID, int caseAssessmentDetailID) {
            return base.Channel.GetCaseAssessmentByCaseIDAndCaseAssessmentDetailID(caseID, caseAssessmentDetailID);
        }
        
        public int UpdateCaseAssessmentIsSavedByCaseID(int _caseID) {
            return base.Channel.UpdateCaseAssessmentIsSavedByCaseID(_caseID);
        }
        
        public int UpdateCaseAssessmentPatientImpactByCaseAssessmentPatientImpactID(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientImpact caseAssessmentPatientImpact) {
            return base.Channel.UpdateCaseAssessmentPatientImpactByCaseAssessmentPatientImpactID(caseAssessmentPatientImpact);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientImpact[] GetCaseAssessmentPatientImpactsByPatientImpactID(int patientImpactID) {
            return base.Channel.GetCaseAssessmentPatientImpactsByPatientImpactID(patientImpactID);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientImpact[] GetCaseAssessmentPatientImpactsByPatientImpactValueID(int patientImpactValueID) {
            return base.Channel.GetCaseAssessmentPatientImpactsByPatientImpactValueID(patientImpactValueID);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientImpact[] GetAllCaseAssessmentPatientImpacts() {
            return base.Channel.GetAllCaseAssessmentPatientImpacts();
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientImpact[] GetCaseAssessmentPatientImpactsByCaseAssessmentDetailID(int caseAssessmentDetailID) {
            return base.Channel.GetCaseAssessmentPatientImpactsByCaseAssessmentDetailID(caseAssessmentDetailID);
        }
        
        public int UpdateCaseAssessmentPatientInjuryByCaseAssessmentPatientInjuryID(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientInjury caseAssessmentPatientInjury) {
            return base.Channel.UpdateCaseAssessmentPatientInjuryByCaseAssessmentPatientInjuryID(caseAssessmentPatientInjury);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentPatientInjuryBL[] GetCaseAssessmentPatientInjuriesByCaseAssessmentDetailID(int caseAssessmentDetailID) {
            return base.Channel.GetCaseAssessmentPatientInjuriesByCaseAssessmentDetailID(caseAssessmentDetailID);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentDetail[] GetAllCaseAssessmentDetailByCaseID(int caseID) {
            return base.Channel.GetAllCaseAssessmentDetailByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentDetail[] GetQASubmitedCaseAssessmentDetailsByCaseID(int caseID) {
            return base.Channel.GetQASubmitedCaseAssessmentDetailsByCaseID(caseID);
        }
        
        public int AddCaseAssessmentCustom(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentCustom caseAssessmentCustom) {
            return base.Channel.AddCaseAssessmentCustom(caseAssessmentCustom);
        }
        
        public int UpdateCaseAssessmentCustom(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentCustom caseAssessmentCustom) {
            return base.Channel.UpdateCaseAssessmentCustom(caseAssessmentCustom);
        }
        
        public int UpdateCaseRiewAssessmentMessageCustom(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentCustom caseAssessmentCustom) {
            return base.Channel.UpdateCaseRiewAssessmentMessageCustom(caseAssessmentCustom);
        }
        
        public int UpdateCaseInitialAssessmentMessageCustom(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentCustom caseAssessmentCustom) {
            return base.Channel.UpdateCaseInitialAssessmentMessageCustom(caseAssessmentCustom);
        }
        
        public int UpdateCaseFinalAssessmentMessageCustom(ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentCustom caseAssessmentCustom) {
            return base.Channel.UpdateCaseFinalAssessmentMessageCustom(caseAssessmentCustom);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.CaseAssessmentCustom GetCaseAssessmentCustomByCaseID(int CaseID) {
            return base.Channel.GetCaseAssessmentCustomByCaseID(CaseID);
        }
        
        public int AddReferrerCaseAssessmentModification(ITSPublicApp.Web.ITSService.AssessmentService.ReferrerCaseAssessmentModification referrerCaseAssessmentModification) {
            return base.Channel.AddReferrerCaseAssessmentModification(referrerCaseAssessmentModification);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.ReferrerCaseAssessmentModificationAuthority[] GetCaseTreatmentPricingByCaseID(int caseID) {
            return base.Channel.GetCaseTreatmentPricingByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.AssessmentService.ReferrerCaseAssessmentModification[] GetReferrerCaseAssessmentModificationsbyCaseID(int caseID) {
            return base.Channel.GetReferrerCaseAssessmentModificationsbyCaseID(caseID);
        }
    }
}
