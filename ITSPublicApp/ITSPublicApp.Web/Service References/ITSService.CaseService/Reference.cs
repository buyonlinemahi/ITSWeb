//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ITSPublicApp.Web.ITSService.CaseService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gip", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class Gip : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GipIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GipNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GipID {
            get {
                return this.GipIDField;
            }
            set {
                if ((this.GipIDField.Equals(value) != true)) {
                    this.GipIDField = value;
                    this.RaisePropertyChanged("GipID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GipName {
            get {
                return this.GipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GipNameField, value) != true)) {
                    this.GipNameField = value;
                    this.RaisePropertyChanged("GipName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tpd", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class Tpd : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TpdIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TpdNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TpdID {
            get {
                return this.TpdIDField;
            }
            set {
                if ((this.TpdIDField.Equals(value) != true)) {
                    this.TpdIDField = value;
                    this.RaisePropertyChanged("TpdID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TpdName {
            get {
                return this.TpdNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TpdNameField, value) != true)) {
                    this.TpdNameField = value;
                    this.RaisePropertyChanged("TpdName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Iip", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class Iip : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IipIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IipNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IipID {
            get {
                return this.IipIDField;
            }
            set {
                if ((this.IipIDField.Equals(value) != true)) {
                    this.IipIDField = value;
                    this.RaisePropertyChanged("IipID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IipName {
            get {
                return this.IipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IipNameField, value) != true)) {
                    this.IipNameField = value;
                    this.RaisePropertyChanged("IipName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElRehab", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ElRehab : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ElRehabIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ElRehabNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ElRehabID {
            get {
                return this.ElRehabIDField;
            }
            set {
                if ((this.ElRehabIDField.Equals(value) != true)) {
                    this.ElRehabIDField = value;
                    this.RaisePropertyChanged("ElRehabID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElRehabName {
            get {
                return this.ElRehabNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ElRehabNameField, value) != true)) {
                    this.ElRehabNameField = value;
                    this.RaisePropertyChanged("ElRehabName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobDemand", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class JobDemand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreeTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDrivingForkliftTrucksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDrivingLGVOrPCVsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExtendedOrProlongedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHandlingFoodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHealthCareWorkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsJobDemandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLiftOrCarryHeavyItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNightWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNoisedHarzardAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOccasionalOverseasTravelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOutsideWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsShiftWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsStandingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVocationalDrivingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWalkingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWorkATHeightOrClimbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWorkBiologicalOrChemicalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWorkInConfinedSpacesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWorkTowardsTagetOrPressuredsituationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWorkWithAdultOrChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWorkWithChemialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWorkWithComputerOrScreensField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWorkWithDengerousMachineryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWorkWithDustOrFumesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWorkWithSkinIrritantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobDemandIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreeText {
            get {
                return this.FreeTextField;
            }
            set {
                if ((object.ReferenceEquals(this.FreeTextField, value) != true)) {
                    this.FreeTextField = value;
                    this.RaisePropertyChanged("FreeText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDrivingForkliftTrucks {
            get {
                return this.IsDrivingForkliftTrucksField;
            }
            set {
                if ((this.IsDrivingForkliftTrucksField.Equals(value) != true)) {
                    this.IsDrivingForkliftTrucksField = value;
                    this.RaisePropertyChanged("IsDrivingForkliftTrucks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDrivingLGVOrPCVs {
            get {
                return this.IsDrivingLGVOrPCVsField;
            }
            set {
                if ((this.IsDrivingLGVOrPCVsField.Equals(value) != true)) {
                    this.IsDrivingLGVOrPCVsField = value;
                    this.RaisePropertyChanged("IsDrivingLGVOrPCVs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExtendedOrProlonged {
            get {
                return this.IsExtendedOrProlongedField;
            }
            set {
                if ((this.IsExtendedOrProlongedField.Equals(value) != true)) {
                    this.IsExtendedOrProlongedField = value;
                    this.RaisePropertyChanged("IsExtendedOrProlonged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHandlingFood {
            get {
                return this.IsHandlingFoodField;
            }
            set {
                if ((this.IsHandlingFoodField.Equals(value) != true)) {
                    this.IsHandlingFoodField = value;
                    this.RaisePropertyChanged("IsHandlingFood");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHealthCareWorker {
            get {
                return this.IsHealthCareWorkerField;
            }
            set {
                if ((this.IsHealthCareWorkerField.Equals(value) != true)) {
                    this.IsHealthCareWorkerField = value;
                    this.RaisePropertyChanged("IsHealthCareWorker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsJobDemand {
            get {
                return this.IsJobDemandField;
            }
            set {
                if ((this.IsJobDemandField.Equals(value) != true)) {
                    this.IsJobDemandField = value;
                    this.RaisePropertyChanged("IsJobDemand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLiftOrCarryHeavyItems {
            get {
                return this.IsLiftOrCarryHeavyItemsField;
            }
            set {
                if ((this.IsLiftOrCarryHeavyItemsField.Equals(value) != true)) {
                    this.IsLiftOrCarryHeavyItemsField = value;
                    this.RaisePropertyChanged("IsLiftOrCarryHeavyItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNightWork {
            get {
                return this.IsNightWorkField;
            }
            set {
                if ((this.IsNightWorkField.Equals(value) != true)) {
                    this.IsNightWorkField = value;
                    this.RaisePropertyChanged("IsNightWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNoisedHarzardArea {
            get {
                return this.IsNoisedHarzardAreaField;
            }
            set {
                if ((this.IsNoisedHarzardAreaField.Equals(value) != true)) {
                    this.IsNoisedHarzardAreaField = value;
                    this.RaisePropertyChanged("IsNoisedHarzardArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOccasionalOverseasTravel {
            get {
                return this.IsOccasionalOverseasTravelField;
            }
            set {
                if ((this.IsOccasionalOverseasTravelField.Equals(value) != true)) {
                    this.IsOccasionalOverseasTravelField = value;
                    this.RaisePropertyChanged("IsOccasionalOverseasTravel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOutsideWork {
            get {
                return this.IsOutsideWorkField;
            }
            set {
                if ((this.IsOutsideWorkField.Equals(value) != true)) {
                    this.IsOutsideWorkField = value;
                    this.RaisePropertyChanged("IsOutsideWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsShiftWork {
            get {
                return this.IsShiftWorkField;
            }
            set {
                if ((this.IsShiftWorkField.Equals(value) != true)) {
                    this.IsShiftWorkField = value;
                    this.RaisePropertyChanged("IsShiftWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsStanding {
            get {
                return this.IsStandingField;
            }
            set {
                if ((this.IsStandingField.Equals(value) != true)) {
                    this.IsStandingField = value;
                    this.RaisePropertyChanged("IsStanding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVocationalDriving {
            get {
                return this.IsVocationalDrivingField;
            }
            set {
                if ((this.IsVocationalDrivingField.Equals(value) != true)) {
                    this.IsVocationalDrivingField = value;
                    this.RaisePropertyChanged("IsVocationalDriving");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWalking {
            get {
                return this.IsWalkingField;
            }
            set {
                if ((this.IsWalkingField.Equals(value) != true)) {
                    this.IsWalkingField = value;
                    this.RaisePropertyChanged("IsWalking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWorkATHeightOrClimb {
            get {
                return this.IsWorkATHeightOrClimbField;
            }
            set {
                if ((this.IsWorkATHeightOrClimbField.Equals(value) != true)) {
                    this.IsWorkATHeightOrClimbField = value;
                    this.RaisePropertyChanged("IsWorkATHeightOrClimb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWorkBiologicalOrChemical {
            get {
                return this.IsWorkBiologicalOrChemicalField;
            }
            set {
                if ((this.IsWorkBiologicalOrChemicalField.Equals(value) != true)) {
                    this.IsWorkBiologicalOrChemicalField = value;
                    this.RaisePropertyChanged("IsWorkBiologicalOrChemical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWorkInConfinedSpaces {
            get {
                return this.IsWorkInConfinedSpacesField;
            }
            set {
                if ((this.IsWorkInConfinedSpacesField.Equals(value) != true)) {
                    this.IsWorkInConfinedSpacesField = value;
                    this.RaisePropertyChanged("IsWorkInConfinedSpaces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWorkTowardsTagetOrPressuredsituation {
            get {
                return this.IsWorkTowardsTagetOrPressuredsituationField;
            }
            set {
                if ((this.IsWorkTowardsTagetOrPressuredsituationField.Equals(value) != true)) {
                    this.IsWorkTowardsTagetOrPressuredsituationField = value;
                    this.RaisePropertyChanged("IsWorkTowardsTagetOrPressuredsituation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWorkWithAdultOrChildren {
            get {
                return this.IsWorkWithAdultOrChildrenField;
            }
            set {
                if ((this.IsWorkWithAdultOrChildrenField.Equals(value) != true)) {
                    this.IsWorkWithAdultOrChildrenField = value;
                    this.RaisePropertyChanged("IsWorkWithAdultOrChildren");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWorkWithChemials {
            get {
                return this.IsWorkWithChemialsField;
            }
            set {
                if ((this.IsWorkWithChemialsField.Equals(value) != true)) {
                    this.IsWorkWithChemialsField = value;
                    this.RaisePropertyChanged("IsWorkWithChemials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWorkWithComputerOrScreens {
            get {
                return this.IsWorkWithComputerOrScreensField;
            }
            set {
                if ((this.IsWorkWithComputerOrScreensField.Equals(value) != true)) {
                    this.IsWorkWithComputerOrScreensField = value;
                    this.RaisePropertyChanged("IsWorkWithComputerOrScreens");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWorkWithDengerousMachinery {
            get {
                return this.IsWorkWithDengerousMachineryField;
            }
            set {
                if ((this.IsWorkWithDengerousMachineryField.Equals(value) != true)) {
                    this.IsWorkWithDengerousMachineryField = value;
                    this.RaisePropertyChanged("IsWorkWithDengerousMachinery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWorkWithDustOrFumes {
            get {
                return this.IsWorkWithDustOrFumesField;
            }
            set {
                if ((this.IsWorkWithDustOrFumesField.Equals(value) != true)) {
                    this.IsWorkWithDustOrFumesField = value;
                    this.RaisePropertyChanged("IsWorkWithDustOrFumes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWorkWithSkinIrritants {
            get {
                return this.IsWorkWithSkinIrritantsField;
            }
            set {
                if ((this.IsWorkWithSkinIrritantsField.Equals(value) != true)) {
                    this.IsWorkWithSkinIrritantsField = value;
                    this.RaisePropertyChanged("IsWorkWithSkinIrritants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobDemandID {
            get {
                return this.JobDemandIDField;
            }
            set {
                if ((this.JobDemandIDField.Equals(value) != true)) {
                    this.JobDemandIDField = value;
                    this.RaisePropertyChanged("JobDemandID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DrugTest", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class DrugTest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdditionalTestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalTestOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrugTestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDrugAndAlcohalTestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSentinalUpdatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NetworkRailStandardApplicableIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReasonForReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SentinalNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdditionalTestID {
            get {
                return this.AdditionalTestIDField;
            }
            set {
                if ((this.AdditionalTestIDField.Equals(value) != true)) {
                    this.AdditionalTestIDField = value;
                    this.RaisePropertyChanged("AdditionalTestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalTestOther {
            get {
                return this.AdditionalTestOtherField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalTestOtherField, value) != true)) {
                    this.AdditionalTestOtherField = value;
                    this.RaisePropertyChanged("AdditionalTestOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrugTestID {
            get {
                return this.DrugTestIDField;
            }
            set {
                if ((this.DrugTestIDField.Equals(value) != true)) {
                    this.DrugTestIDField = value;
                    this.RaisePropertyChanged("DrugTestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDrugAndAlcohalTest {
            get {
                return this.IsDrugAndAlcohalTestField;
            }
            set {
                if ((this.IsDrugAndAlcohalTestField.Equals(value) != true)) {
                    this.IsDrugAndAlcohalTestField = value;
                    this.RaisePropertyChanged("IsDrugAndAlcohalTest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSentinalUpdating {
            get {
                return this.IsSentinalUpdatingField;
            }
            set {
                if ((this.IsSentinalUpdatingField.Equals(value) != true)) {
                    this.IsSentinalUpdatingField = value;
                    this.RaisePropertyChanged("IsSentinalUpdating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NetworkRailStandardApplicableID {
            get {
                return this.NetworkRailStandardApplicableIDField;
            }
            set {
                if ((this.NetworkRailStandardApplicableIDField.Equals(value) != true)) {
                    this.NetworkRailStandardApplicableIDField = value;
                    this.RaisePropertyChanged("NetworkRailStandardApplicableID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReasonForReferralID {
            get {
                return this.ReasonForReferralIDField;
            }
            set {
                if ((this.ReasonForReferralIDField.Equals(value) != true)) {
                    this.ReasonForReferralIDField = value;
                    this.RaisePropertyChanged("ReasonForReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SentinalNumber {
            get {
                return this.SentinalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SentinalNumberField, value) != true)) {
                    this.SentinalNumberField = value;
                    this.RaisePropertyChanged("SentinalNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Case", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class Case : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CaseReferrerDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseReferrerReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseSpecialInstructionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CaseSubmittedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DrugTestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EmployeeDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InjuryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnovateNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCustomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IsNewPolicyTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTreatmentRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTriageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPolicyReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OfficeLocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PatientContactDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReferrerAssignedUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerProjectTreatmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendInvoiceEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendInvoiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendInvoiceToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SupplierAssignedUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkflowIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CaseReferrerDueDate {
            get {
                return this.CaseReferrerDueDateField;
            }
            set {
                if ((this.CaseReferrerDueDateField.Equals(value) != true)) {
                    this.CaseReferrerDueDateField = value;
                    this.RaisePropertyChanged("CaseReferrerDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseReferrerReferenceNumber {
            get {
                return this.CaseReferrerReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseReferrerReferenceNumberField, value) != true)) {
                    this.CaseReferrerReferenceNumberField = value;
                    this.RaisePropertyChanged("CaseReferrerReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseSpecialInstruction {
            get {
                return this.CaseSpecialInstructionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseSpecialInstructionField, value) != true)) {
                    this.CaseSpecialInstructionField = value;
                    this.RaisePropertyChanged("CaseSpecialInstruction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CaseSubmittedDate {
            get {
                return this.CaseSubmittedDateField;
            }
            set {
                if ((this.CaseSubmittedDateField.Equals(value) != true)) {
                    this.CaseSubmittedDateField = value;
                    this.RaisePropertyChanged("CaseSubmittedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DrugTestID {
            get {
                return this.DrugTestIDField;
            }
            set {
                if ((this.DrugTestIDField.Equals(value) != true)) {
                    this.DrugTestIDField = value;
                    this.RaisePropertyChanged("DrugTestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EmployeeDetailID {
            get {
                return this.EmployeeDetailIDField;
            }
            set {
                if ((this.EmployeeDetailIDField.Equals(value) != true)) {
                    this.EmployeeDetailIDField = value;
                    this.RaisePropertyChanged("EmployeeDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InjuryType {
            get {
                return this.InjuryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InjuryTypeField, value) != true)) {
                    this.InjuryTypeField = value;
                    this.RaisePropertyChanged("InjuryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InnovateNote {
            get {
                return this.InnovateNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.InnovateNoteField, value) != true)) {
                    this.InnovateNoteField = value;
                    this.RaisePropertyChanged("InnovateNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCustom {
            get {
                return this.IsCustomField;
            }
            set {
                if ((this.IsCustomField.Equals(value) != true)) {
                    this.IsCustomField = value;
                    this.RaisePropertyChanged("IsCustom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IsNewPolicyTypeID {
            get {
                return this.IsNewPolicyTypeIDField;
            }
            set {
                if ((this.IsNewPolicyTypeIDField.Equals(value) != true)) {
                    this.IsNewPolicyTypeIDField = value;
                    this.RaisePropertyChanged("IsNewPolicyTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTreatmentRequired {
            get {
                return this.IsTreatmentRequiredField;
            }
            set {
                if ((this.IsTreatmentRequiredField.Equals(value) != true)) {
                    this.IsTreatmentRequiredField = value;
                    this.RaisePropertyChanged("IsTreatmentRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTriage {
            get {
                return this.IsTriageField;
            }
            set {
                if ((this.IsTriageField.Equals(value) != true)) {
                    this.IsTriageField = value;
                    this.RaisePropertyChanged("IsTriage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPolicyReferenceNumber {
            get {
                return this.NewPolicyReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPolicyReferenceNumberField, value) != true)) {
                    this.NewPolicyReferenceNumberField = value;
                    this.RaisePropertyChanged("NewPolicyReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OfficeLocationID {
            get {
                return this.OfficeLocationIDField;
            }
            set {
                if ((this.OfficeLocationIDField.Equals(value) != true)) {
                    this.OfficeLocationIDField = value;
                    this.RaisePropertyChanged("OfficeLocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PatientContactDate {
            get {
                return this.PatientContactDateField;
            }
            set {
                if ((this.PatientContactDateField.Equals(value) != true)) {
                    this.PatientContactDateField = value;
                    this.RaisePropertyChanged("PatientContactDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReferrerAssignedUser {
            get {
                return this.ReferrerAssignedUserField;
            }
            set {
                if ((this.ReferrerAssignedUserField.Equals(value) != true)) {
                    this.ReferrerAssignedUserField = value;
                    this.RaisePropertyChanged("ReferrerAssignedUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerID {
            get {
                return this.ReferrerIDField;
            }
            set {
                if ((this.ReferrerIDField.Equals(value) != true)) {
                    this.ReferrerIDField = value;
                    this.RaisePropertyChanged("ReferrerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerProjectID {
            get {
                return this.ReferrerProjectIDField;
            }
            set {
                if ((this.ReferrerProjectIDField.Equals(value) != true)) {
                    this.ReferrerProjectIDField = value;
                    this.RaisePropertyChanged("ReferrerProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerProjectTreatmentID {
            get {
                return this.ReferrerProjectTreatmentIDField;
            }
            set {
                if ((this.ReferrerProjectTreatmentIDField.Equals(value) != true)) {
                    this.ReferrerProjectTreatmentIDField = value;
                    this.RaisePropertyChanged("ReferrerProjectTreatmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendInvoiceEmail {
            get {
                return this.SendInvoiceEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SendInvoiceEmailField, value) != true)) {
                    this.SendInvoiceEmailField = value;
                    this.RaisePropertyChanged("SendInvoiceEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendInvoiceName {
            get {
                return this.SendInvoiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SendInvoiceNameField, value) != true)) {
                    this.SendInvoiceNameField = value;
                    this.RaisePropertyChanged("SendInvoiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendInvoiceTo {
            get {
                return this.SendInvoiceToField;
            }
            set {
                if ((object.ReferenceEquals(this.SendInvoiceToField, value) != true)) {
                    this.SendInvoiceToField = value;
                    this.RaisePropertyChanged("SendInvoiceTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SupplierAssignedUser {
            get {
                return this.SupplierAssignedUserField;
            }
            set {
                if ((this.SupplierAssignedUserField.Equals(value) != true)) {
                    this.SupplierAssignedUserField = value;
                    this.RaisePropertyChanged("SupplierAssignedUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentTypeID {
            get {
                return this.TreatmentTypeIDField;
            }
            set {
                if ((this.TreatmentTypeIDField.Equals(value) != true)) {
                    this.TreatmentTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowID {
            get {
                return this.WorkflowIDField;
            }
            set {
                if ((this.WorkflowIDField.Equals(value) != true)) {
                    this.WorkflowIDField = value;
                    this.RaisePropertyChanged("WorkflowID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employment", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class Employment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmploymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EmploymentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmploymentId {
            get {
                return this.EmploymentIdField;
            }
            set {
                if ((this.EmploymentIdField.Equals(value) != true)) {
                    this.EmploymentIdField = value;
                    this.RaisePropertyChanged("EmploymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EmploymentTypeId {
            get {
                return this.EmploymentTypeIdField;
            }
            set {
                if ((this.EmploymentTypeIdField.Equals(value) != true)) {
                    this.EmploymentTypeIdField = value;
                    this.RaisePropertyChanged("EmploymentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobRole {
            get {
                return this.JobRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobRoleField, value) != true)) {
                    this.JobRoleField = value;
                    this.RaisePropertyChanged("JobRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPhone {
            get {
                return this.PrimaryPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPhoneField, value) != true)) {
                    this.PrimaryPhoneField = value;
                    this.RaisePropertyChanged("PrimaryPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeDetail", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class EmployeeDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalQuestion1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalQuestion2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgileWorkerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostCentreDivisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CurrentRoleTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CurrentlyAbsentFromWorkIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateofFirstAbsenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FurtherQueriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FurtherQuestion1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FurtherQuestion2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IllnessEmpAbilityToPerformField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicationOrTreatmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalINSNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OfficeBasedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreRelatedAbsenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeofIllnessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsualHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UsualJobRoleTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string jobTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalQuestion1 {
            get {
                return this.AdditionalQuestion1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalQuestion1Field, value) != true)) {
                    this.AdditionalQuestion1Field = value;
                    this.RaisePropertyChanged("AdditionalQuestion1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalQuestion2 {
            get {
                return this.AdditionalQuestion2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalQuestion2Field, value) != true)) {
                    this.AdditionalQuestion2Field = value;
                    this.RaisePropertyChanged("AdditionalQuestion2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AgileWorkerID {
            get {
                return this.AgileWorkerIDField;
            }
            set {
                if ((this.AgileWorkerIDField.Equals(value) != true)) {
                    this.AgileWorkerIDField = value;
                    this.RaisePropertyChanged("AgileWorkerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostCentreDivision {
            get {
                return this.CostCentreDivisionField;
            }
            set {
                if ((object.ReferenceEquals(this.CostCentreDivisionField, value) != true)) {
                    this.CostCentreDivisionField = value;
                    this.RaisePropertyChanged("CostCentreDivision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentHours {
            get {
                return this.CurrentHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentHoursField, value) != true)) {
                    this.CurrentHoursField = value;
                    this.RaisePropertyChanged("CurrentHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CurrentRoleTypeID {
            get {
                return this.CurrentRoleTypeIDField;
            }
            set {
                if ((this.CurrentRoleTypeIDField.Equals(value) != true)) {
                    this.CurrentRoleTypeIDField = value;
                    this.RaisePropertyChanged("CurrentRoleTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CurrentlyAbsentFromWorkID {
            get {
                return this.CurrentlyAbsentFromWorkIDField;
            }
            set {
                if ((this.CurrentlyAbsentFromWorkIDField.Equals(value) != true)) {
                    this.CurrentlyAbsentFromWorkIDField = value;
                    this.RaisePropertyChanged("CurrentlyAbsentFromWorkID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateofFirstAbsence {
            get {
                return this.DateofFirstAbsenceField;
            }
            set {
                if ((this.DateofFirstAbsenceField.Equals(value) != true)) {
                    this.DateofFirstAbsenceField = value;
                    this.RaisePropertyChanged("DateofFirstAbsence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EAP {
            get {
                return this.EAPField;
            }
            set {
                if ((object.ReferenceEquals(this.EAPField, value) != true)) {
                    this.EAPField = value;
                    this.RaisePropertyChanged("EAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeDetailID {
            get {
                return this.EmployeeDetailIDField;
            }
            set {
                if ((this.EmployeeDetailIDField.Equals(value) != true)) {
                    this.EmployeeDetailIDField = value;
                    this.RaisePropertyChanged("EmployeeDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeNumber {
            get {
                return this.EmployeeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNumberField, value) != true)) {
                    this.EmployeeNumberField = value;
                    this.RaisePropertyChanged("EmployeeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FurtherQueries {
            get {
                return this.FurtherQueriesField;
            }
            set {
                if ((object.ReferenceEquals(this.FurtherQueriesField, value) != true)) {
                    this.FurtherQueriesField = value;
                    this.RaisePropertyChanged("FurtherQueries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FurtherQuestion1 {
            get {
                return this.FurtherQuestion1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FurtherQuestion1Field, value) != true)) {
                    this.FurtherQuestion1Field = value;
                    this.RaisePropertyChanged("FurtherQuestion1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FurtherQuestion2 {
            get {
                return this.FurtherQuestion2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FurtherQuestion2Field, value) != true)) {
                    this.FurtherQuestion2Field = value;
                    this.RaisePropertyChanged("FurtherQuestion2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IllnessEmpAbilityToPerform {
            get {
                return this.IllnessEmpAbilityToPerformField;
            }
            set {
                if ((object.ReferenceEquals(this.IllnessEmpAbilityToPerformField, value) != true)) {
                    this.IllnessEmpAbilityToPerformField = value;
                    this.RaisePropertyChanged("IllnessEmpAbilityToPerform");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineManager {
            get {
                return this.LineManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.LineManagerField, value) != true)) {
                    this.LineManagerField = value;
                    this.RaisePropertyChanged("LineManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicationOrTreatment {
            get {
                return this.MedicationOrTreatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicationOrTreatmentField, value) != true)) {
                    this.MedicationOrTreatmentField = value;
                    this.RaisePropertyChanged("MedicationOrTreatment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalINSNumber {
            get {
                return this.NationalINSNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalINSNumberField, value) != true)) {
                    this.NationalINSNumberField = value;
                    this.RaisePropertyChanged("NationalINSNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OfficeBasedID {
            get {
                return this.OfficeBasedIDField;
            }
            set {
                if ((this.OfficeBasedIDField.Equals(value) != true)) {
                    this.OfficeBasedIDField = value;
                    this.RaisePropertyChanged("OfficeBasedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeLocation {
            get {
                return this.OfficeLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeLocationField, value) != true)) {
                    this.OfficeLocationField = value;
                    this.RaisePropertyChanged("OfficeLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreRelatedAbsence {
            get {
                return this.PreRelatedAbsenceField;
            }
            set {
                if ((object.ReferenceEquals(this.PreRelatedAbsenceField, value) != true)) {
                    this.PreRelatedAbsenceField = value;
                    this.RaisePropertyChanged("PreRelatedAbsence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeofIllness {
            get {
                return this.TypeofIllnessField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeofIllnessField, value) != true)) {
                    this.TypeofIllnessField = value;
                    this.RaisePropertyChanged("TypeofIllness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UsualHours {
            get {
                return this.UsualHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.UsualHoursField, value) != true)) {
                    this.UsualHoursField = value;
                    this.RaisePropertyChanged("UsualHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UsualJobRoleTypeID {
            get {
                return this.UsualJobRoleTypeIDField;
            }
            set {
                if ((this.UsualJobRoleTypeIDField.Equals(value) != true)) {
                    this.UsualJobRoleTypeIDField = value;
                    this.RaisePropertyChanged("UsualJobRoleTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string jobTitle {
            get {
                return this.jobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.jobTitleField, value) != true)) {
                    this.jobTitleField = value;
                    this.RaisePropertyChanged("jobTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Policie", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class Policie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdmittedIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BenefitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndBenefitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FitForWorkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MonthlyValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NameOfReinsurerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PolicyCriteriaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PolicyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PolicyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyWordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ReInsuredIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RehabProportionateBenefitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TypeCoverIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeeklyValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdmittedId {
            get {
                return this.AdmittedIdField;
            }
            set {
                if ((this.AdmittedIdField.Equals(value) != true)) {
                    this.AdmittedIdField = value;
                    this.RaisePropertyChanged("AdmittedId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BenefitDate {
            get {
                return this.BenefitDateField;
            }
            set {
                if ((this.BenefitDateField.Equals(value) != true)) {
                    this.BenefitDateField = value;
                    this.RaisePropertyChanged("BenefitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndBenefitDate {
            get {
                return this.EndBenefitDateField;
            }
            set {
                if ((this.EndBenefitDateField.Equals(value) != true)) {
                    this.EndBenefitDateField = value;
                    this.RaisePropertyChanged("EndBenefitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FitForWorkId {
            get {
                return this.FitForWorkIdField;
            }
            set {
                if ((this.FitForWorkIdField.Equals(value) != true)) {
                    this.FitForWorkIdField = value;
                    this.RaisePropertyChanged("FitForWorkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonthlyValue {
            get {
                return this.MonthlyValueField;
            }
            set {
                if ((this.MonthlyValueField.Equals(value) != true)) {
                    this.MonthlyValueField = value;
                    this.RaisePropertyChanged("MonthlyValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NameOfReinsurerID {
            get {
                return this.NameOfReinsurerIDField;
            }
            set {
                if ((this.NameOfReinsurerIDField.Equals(value) != true)) {
                    this.NameOfReinsurerIDField = value;
                    this.RaisePropertyChanged("NameOfReinsurerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PolicyCriteriaId {
            get {
                return this.PolicyCriteriaIdField;
            }
            set {
                if ((this.PolicyCriteriaIdField.Equals(value) != true)) {
                    this.PolicyCriteriaIdField = value;
                    this.RaisePropertyChanged("PolicyCriteriaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PolicyID {
            get {
                return this.PolicyIDField;
            }
            set {
                if ((this.PolicyIDField.Equals(value) != true)) {
                    this.PolicyIDField = value;
                    this.RaisePropertyChanged("PolicyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PolicyTypeId {
            get {
                return this.PolicyTypeIdField;
            }
            set {
                if ((this.PolicyTypeIdField.Equals(value) != true)) {
                    this.PolicyTypeIdField = value;
                    this.RaisePropertyChanged("PolicyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyWording {
            get {
                return this.PolicyWordingField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyWordingField, value) != true)) {
                    this.PolicyWordingField = value;
                    this.RaisePropertyChanged("PolicyWording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ReInsuredId {
            get {
                return this.ReInsuredIdField;
            }
            set {
                if ((this.ReInsuredIdField.Equals(value) != true)) {
                    this.ReInsuredIdField = value;
                    this.RaisePropertyChanged("ReInsuredId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNo {
            get {
                return this.ReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNoField, value) != true)) {
                    this.ReferenceNoField = value;
                    this.RaisePropertyChanged("ReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RehabProportionateBenefit {
            get {
                return this.RehabProportionateBenefitField;
            }
            set {
                if ((this.RehabProportionateBenefitField.Equals(value) != true)) {
                    this.RehabProportionateBenefitField = value;
                    this.RaisePropertyChanged("RehabProportionateBenefit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TypeCoverId {
            get {
                return this.TypeCoverIdField;
            }
            set {
                if ((this.TypeCoverIdField.Equals(value) != true)) {
                    this.TypeCoverIdField = value;
                    this.RaisePropertyChanged("TypeCoverId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal WeeklyValue {
            get {
                return this.WeeklyValueField;
            }
            set {
                if ((this.WeeklyValueField.Equals(value) != true)) {
                    this.WeeklyValueField = value;
                    this.RaisePropertyChanged("WeeklyValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyOpenDetail", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PolicyOpenDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdmittedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FitforWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameofReinsurerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpenBenefitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpenEndBenefitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OpenMonthlyValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpenPolicyWordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyCriteriaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PolicyOpenDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReInsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RehabORProportionateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCoverField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Admitted {
            get {
                return this.AdmittedField;
            }
            set {
                if ((object.ReferenceEquals(this.AdmittedField, value) != true)) {
                    this.AdmittedField = value;
                    this.RaisePropertyChanged("Admitted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FitforWork {
            get {
                return this.FitforWorkField;
            }
            set {
                if ((object.ReferenceEquals(this.FitforWorkField, value) != true)) {
                    this.FitforWorkField = value;
                    this.RaisePropertyChanged("FitforWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameofReinsurer {
            get {
                return this.NameofReinsurerField;
            }
            set {
                if ((object.ReferenceEquals(this.NameofReinsurerField, value) != true)) {
                    this.NameofReinsurerField = value;
                    this.RaisePropertyChanged("NameofReinsurer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OpenBenefitDate {
            get {
                return this.OpenBenefitDateField;
            }
            set {
                if ((this.OpenBenefitDateField.Equals(value) != true)) {
                    this.OpenBenefitDateField = value;
                    this.RaisePropertyChanged("OpenBenefitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OpenEndBenefitDate {
            get {
                return this.OpenEndBenefitDateField;
            }
            set {
                if ((this.OpenEndBenefitDateField.Equals(value) != true)) {
                    this.OpenEndBenefitDateField = value;
                    this.RaisePropertyChanged("OpenEndBenefitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OpenMonthlyValue {
            get {
                return this.OpenMonthlyValueField;
            }
            set {
                if ((this.OpenMonthlyValueField.Equals(value) != true)) {
                    this.OpenMonthlyValueField = value;
                    this.RaisePropertyChanged("OpenMonthlyValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpenPolicyWording {
            get {
                return this.OpenPolicyWordingField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenPolicyWordingField, value) != true)) {
                    this.OpenPolicyWordingField = value;
                    this.RaisePropertyChanged("OpenPolicyWording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyCriteria {
            get {
                return this.PolicyCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyCriteriaField, value) != true)) {
                    this.PolicyCriteriaField = value;
                    this.RaisePropertyChanged("PolicyCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PolicyOpenDetailID {
            get {
                return this.PolicyOpenDetailIDField;
            }
            set {
                if ((this.PolicyOpenDetailIDField.Equals(value) != true)) {
                    this.PolicyOpenDetailIDField = value;
                    this.RaisePropertyChanged("PolicyOpenDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyType {
            get {
                return this.PolicyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyTypeField, value) != true)) {
                    this.PolicyTypeField = value;
                    this.RaisePropertyChanged("PolicyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReInsured {
            get {
                return this.ReInsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.ReInsuredField, value) != true)) {
                    this.ReInsuredField = value;
                    this.RaisePropertyChanged("ReInsured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNo {
            get {
                return this.ReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNoField, value) != true)) {
                    this.ReferenceNoField = value;
                    this.RaisePropertyChanged("ReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RehabORProportionate {
            get {
                return this.RehabORProportionateField;
            }
            set {
                if ((object.ReferenceEquals(this.RehabORProportionateField, value) != true)) {
                    this.RehabORProportionateField = value;
                    this.RaisePropertyChanged("RehabORProportionate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCover {
            get {
                return this.TypeCoverField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCoverField, value) != true)) {
                    this.TypeCoverField = value;
                    this.RaisePropertyChanged("TypeCover");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EmploymentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HasInjuredPartyRepresentativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasLegalRepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InjuredIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InjuryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PolicyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PolicyOpenDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PrimaryConditionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SolicitorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialInstructionNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EmploymentID {
            get {
                return this.EmploymentIDField;
            }
            set {
                if ((this.EmploymentIDField.Equals(value) != true)) {
                    this.EmploymentIDField = value;
                    this.RaisePropertyChanged("EmploymentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenderID {
            get {
                return this.GenderIDField;
            }
            set {
                if ((this.GenderIDField.Equals(value) != true)) {
                    this.GenderIDField = value;
                    this.RaisePropertyChanged("GenderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HasInjuredPartyRepresentative {
            get {
                return this.HasInjuredPartyRepresentativeField;
            }
            set {
                if ((this.HasInjuredPartyRepresentativeField.Equals(value) != true)) {
                    this.HasInjuredPartyRepresentativeField = value;
                    this.RaisePropertyChanged("HasInjuredPartyRepresentative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLegalRep {
            get {
                return this.HasLegalRepField;
            }
            set {
                if ((this.HasLegalRepField.Equals(value) != true)) {
                    this.HasLegalRepField = value;
                    this.RaisePropertyChanged("HasLegalRep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InjuredID {
            get {
                return this.InjuredIDField;
            }
            set {
                if ((this.InjuredIDField.Equals(value) != true)) {
                    this.InjuredIDField = value;
                    this.RaisePropertyChanged("InjuredID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InjuryDate {
            get {
                return this.InjuryDateField;
            }
            set {
                if ((this.InjuryDateField.Equals(value) != true)) {
                    this.InjuryDateField = value;
                    this.RaisePropertyChanged("InjuryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PolicyID {
            get {
                return this.PolicyIDField;
            }
            set {
                if ((this.PolicyIDField.Equals(value) != true)) {
                    this.PolicyIDField = value;
                    this.RaisePropertyChanged("PolicyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PolicyOpenDetailID {
            get {
                return this.PolicyOpenDetailIDField;
            }
            set {
                if ((this.PolicyOpenDetailIDField.Equals(value) != true)) {
                    this.PolicyOpenDetailIDField = value;
                    this.RaisePropertyChanged("PolicyOpenDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PrimaryConditionID {
            get {
                return this.PrimaryConditionIDField;
            }
            set {
                if ((this.PrimaryConditionIDField.Equals(value) != true)) {
                    this.PrimaryConditionIDField = value;
                    this.RaisePropertyChanged("PrimaryConditionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SolicitorID {
            get {
                return this.SolicitorIDField;
            }
            set {
                if ((this.SolicitorIDField.Equals(value) != true)) {
                    this.SolicitorIDField = value;
                    this.RaisePropertyChanged("SolicitorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialInstructionNotes {
            get {
                return this.SpecialInstructionNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialInstructionNotesField, value) != true)) {
                    this.SpecialInstructionNotesField = value;
                    this.RaisePropertyChanged("SpecialInstructionNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkPhone {
            get {
                return this.WorkPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPhoneField, value) != true)) {
                    this.WorkPhoneField = value;
                    this.RaisePropertyChanged("WorkPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Solicitor", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class Solicitor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReferralUnderJointInstructionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SolicitorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReferralUnderJointInstruction {
            get {
                return this.IsReferralUnderJointInstructionField;
            }
            set {
                if ((this.IsReferralUnderJointInstructionField.Equals(value) != true)) {
                    this.IsReferralUnderJointInstructionField = value;
                    this.RaisePropertyChanged("IsReferralUnderJointInstruction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber {
            get {
                return this.ReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNumberField, value) != true)) {
                    this.ReferenceNumberField = value;
                    this.RaisePropertyChanged("ReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SolicitorID {
            get {
                return this.SolicitorIDField;
            }
            set {
                if ((this.SolicitorIDField.Equals(value) != true)) {
                    this.SolicitorIDField = value;
                    this.RaisePropertyChanged("SolicitorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InjuredPartyRepresentative", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class InjuredPartyRepresentative : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InjuredIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelationshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tel1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tel2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InjuredID {
            get {
                return this.InjuredIDField;
            }
            set {
                if ((this.InjuredIDField.Equals(value) != true)) {
                    this.InjuredIDField = value;
                    this.RaisePropertyChanged("InjuredID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferralID {
            get {
                return this.ReferralIDField;
            }
            set {
                if ((this.ReferralIDField.Equals(value) != true)) {
                    this.ReferralIDField = value;
                    this.RaisePropertyChanged("ReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Relationship {
            get {
                return this.RelationshipField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationshipField, value) != true)) {
                    this.RelationshipField = value;
                    this.RaisePropertyChanged("Relationship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel1 {
            get {
                return this.Tel1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tel1Field, value) != true)) {
                    this.Tel1Field = value;
                    this.RaisePropertyChanged("Tel1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel2 {
            get {
                return this.Tel2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tel2Field, value) != true)) {
                    this.Tel2Field = value;
                    this.RaisePropertyChanged("Tel2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseContact", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseContact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseContactIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseContactID {
            get {
                return this.CaseContactIDField;
            }
            set {
                if ((this.CaseContactIDField.Equals(value) != true)) {
                    this.CaseContactIDField = value;
                    this.RaisePropertyChanged("CaseContactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedReferrerAuthorisations", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PagedReferrerAuthorisations : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerAuthorisationTotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSPublicApp.Web.ITSService.CaseService.ReferrerAuthorisations[] ReferrerAuthorisationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerAuthorisationTotalCount {
            get {
                return this.ReferrerAuthorisationTotalCountField;
            }
            set {
                if ((this.ReferrerAuthorisationTotalCountField.Equals(value) != true)) {
                    this.ReferrerAuthorisationTotalCountField = value;
                    this.RaisePropertyChanged("ReferrerAuthorisationTotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSPublicApp.Web.ITSService.CaseService.ReferrerAuthorisations[] ReferrerAuthorisations {
            get {
                return this.ReferrerAuthorisationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferrerAuthorisationsField, value) != true)) {
                    this.ReferrerAuthorisationsField = value;
                    this.RaisePropertyChanged("ReferrerAuthorisations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReferrerAuthorisations", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ReferrerAuthorisations : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssessmentServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaseReferrerDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseReferrerReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCustomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerProjectTreatmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkflowIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssessmentServiceID {
            get {
                return this.AssessmentServiceIDField;
            }
            set {
                if ((this.AssessmentServiceIDField.Equals(value) != true)) {
                    this.AssessmentServiceIDField = value;
                    this.RaisePropertyChanged("AssessmentServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaseReferrerDueDate {
            get {
                return this.CaseReferrerDueDateField;
            }
            set {
                if ((this.CaseReferrerDueDateField.Equals(value) != true)) {
                    this.CaseReferrerDueDateField = value;
                    this.RaisePropertyChanged("CaseReferrerDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseReferrerReferenceNumber {
            get {
                return this.CaseReferrerReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseReferrerReferenceNumberField, value) != true)) {
                    this.CaseReferrerReferenceNumberField = value;
                    this.RaisePropertyChanged("CaseReferrerReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCustom {
            get {
                return this.IsCustomField;
            }
            set {
                if ((this.IsCustomField.Equals(value) != true)) {
                    this.IsCustomField = value;
                    this.RaisePropertyChanged("IsCustom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerID {
            get {
                return this.ReferrerIDField;
            }
            set {
                if ((this.ReferrerIDField.Equals(value) != true)) {
                    this.ReferrerIDField = value;
                    this.RaisePropertyChanged("ReferrerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerProjectTreatmentID {
            get {
                return this.ReferrerProjectTreatmentIDField;
            }
            set {
                if ((this.ReferrerProjectTreatmentIDField.Equals(value) != true)) {
                    this.ReferrerProjectTreatmentIDField = value;
                    this.RaisePropertyChanged("ReferrerProjectTreatmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentTypeName {
            get {
                return this.TreatmentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentTypeNameField, value) != true)) {
                    this.TreatmentTypeNameField = value;
                    this.RaisePropertyChanged("TreatmentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowID {
            get {
                return this.WorkflowIDField;
            }
            set {
                if ((this.WorkflowIDField.Equals(value) != true)) {
                    this.WorkflowIDField = value;
                    this.RaisePropertyChanged("WorkflowID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseWorkflowCount", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseWorkflowCount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrdinalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseCount {
            get {
                return this.CaseCountField;
            }
            set {
                if ((this.CaseCountField.Equals(value) != true)) {
                    this.CaseCountField = value;
                    this.RaisePropertyChanged("CaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ordinal {
            get {
                return this.OrdinalField;
            }
            set {
                if ((this.OrdinalField.Equals(value) != true)) {
                    this.OrdinalField = value;
                    this.RaisePropertyChanged("Ordinal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseAppointmentDate", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseAppointmentDate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AppointmentDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaseBookIADateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FirstAppointmentOfferedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCaseBookIADateUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strAppointmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strAppointmentDate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strAppointmentTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AppointmentDateTime {
            get {
                return this.AppointmentDateTimeField;
            }
            set {
                if ((this.AppointmentDateTimeField.Equals(value) != true)) {
                    this.AppointmentDateTimeField = value;
                    this.RaisePropertyChanged("AppointmentDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaseBookIADate {
            get {
                return this.CaseBookIADateField;
            }
            set {
                if ((this.CaseBookIADateField.Equals(value) != true)) {
                    this.CaseBookIADateField = value;
                    this.RaisePropertyChanged("CaseBookIADate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FirstAppointmentOfferedDate {
            get {
                return this.FirstAppointmentOfferedDateField;
            }
            set {
                if ((this.FirstAppointmentOfferedDateField.Equals(value) != true)) {
                    this.FirstAppointmentOfferedDateField = value;
                    this.RaisePropertyChanged("FirstAppointmentOfferedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCaseBookIADateUsed {
            get {
                return this.IsCaseBookIADateUsedField;
            }
            set {
                if ((this.IsCaseBookIADateUsedField.Equals(value) != true)) {
                    this.IsCaseBookIADateUsedField = value;
                    this.RaisePropertyChanged("IsCaseBookIADateUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strAppointmentDate {
            get {
                return this.strAppointmentDateField;
            }
            set {
                if ((object.ReferenceEquals(this.strAppointmentDateField, value) != true)) {
                    this.strAppointmentDateField = value;
                    this.RaisePropertyChanged("strAppointmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strAppointmentDate1 {
            get {
                return this.strAppointmentDate1Field;
            }
            set {
                if ((object.ReferenceEquals(this.strAppointmentDate1Field, value) != true)) {
                    this.strAppointmentDate1Field = value;
                    this.RaisePropertyChanged("strAppointmentDate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strAppointmentTime {
            get {
                return this.strAppointmentTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.strAppointmentTimeField, value) != true)) {
                    this.strAppointmentTimeField = value;
                    this.RaisePropertyChanged("strAppointmentTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasePatientContactAttempt", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CasePatientContactAttempt : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CasePatientContactAttemptIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ContactAttemptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PatientContactDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CasePatientContactAttemptID {
            get {
                return this.CasePatientContactAttemptIDField;
            }
            set {
                if ((this.CasePatientContactAttemptIDField.Equals(value) != true)) {
                    this.CasePatientContactAttemptIDField = value;
                    this.RaisePropertyChanged("CasePatientContactAttemptID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ContactAttemptDate {
            get {
                return this.ContactAttemptDateField;
            }
            set {
                if ((this.ContactAttemptDateField.Equals(value) != true)) {
                    this.ContactAttemptDateField = value;
                    this.RaisePropertyChanged("ContactAttemptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PatientContactDate {
            get {
                return this.PatientContactDateField;
            }
            set {
                if ((this.PatientContactDateField.Equals(value) != true)) {
                    this.PatientContactDateField = value;
                    this.RaisePropertyChanged("PatientContactDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedCaseWorkflowPatientReferrerProject", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PagedCaseWorkflowPatientReferrerProject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseWorkflowPatientReferrerProjectTotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSPublicApp.Web.ITSService.CaseService.CaseWorkflowPatientReferrerProject[] CaseWorkflowPatientReferrerProjectsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseWorkflowPatientReferrerProjectTotalCount {
            get {
                return this.CaseWorkflowPatientReferrerProjectTotalCountField;
            }
            set {
                if ((this.CaseWorkflowPatientReferrerProjectTotalCountField.Equals(value) != true)) {
                    this.CaseWorkflowPatientReferrerProjectTotalCountField = value;
                    this.RaisePropertyChanged("CaseWorkflowPatientReferrerProjectTotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSPublicApp.Web.ITSService.CaseService.CaseWorkflowPatientReferrerProject[] CaseWorkflowPatientReferrerProjects {
            get {
                return this.CaseWorkflowPatientReferrerProjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseWorkflowPatientReferrerProjectsField, value) != true)) {
                    this.CaseWorkflowPatientReferrerProjectsField = value;
                    this.RaisePropertyChanged("CaseWorkflowPatientReferrerProjects");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseWorkflowPatientReferrerProject", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseWorkflowPatientReferrerProject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssessmentAuthorisationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaseDateOfInquiryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaseReferrerDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseReferrerReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseSpecialInstructionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaseSubmittedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTreatmentRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTriageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferrerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerProjectTreatmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkflowIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssessmentAuthorisationName {
            get {
                return this.AssessmentAuthorisationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssessmentAuthorisationNameField, value) != true)) {
                    this.AssessmentAuthorisationNameField = value;
                    this.RaisePropertyChanged("AssessmentAuthorisationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaseDateOfInquiry {
            get {
                return this.CaseDateOfInquiryField;
            }
            set {
                if ((this.CaseDateOfInquiryField.Equals(value) != true)) {
                    this.CaseDateOfInquiryField = value;
                    this.RaisePropertyChanged("CaseDateOfInquiry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaseReferrerDueDate {
            get {
                return this.CaseReferrerDueDateField;
            }
            set {
                if ((this.CaseReferrerDueDateField.Equals(value) != true)) {
                    this.CaseReferrerDueDateField = value;
                    this.RaisePropertyChanged("CaseReferrerDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseReferrerReferenceNumber {
            get {
                return this.CaseReferrerReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseReferrerReferenceNumberField, value) != true)) {
                    this.CaseReferrerReferenceNumberField = value;
                    this.RaisePropertyChanged("CaseReferrerReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseSpecialInstruction {
            get {
                return this.CaseSpecialInstructionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseSpecialInstructionField, value) != true)) {
                    this.CaseSpecialInstructionField = value;
                    this.RaisePropertyChanged("CaseSpecialInstruction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaseSubmittedDate {
            get {
                return this.CaseSubmittedDateField;
            }
            set {
                if ((this.CaseSubmittedDateField.Equals(value) != true)) {
                    this.CaseSubmittedDateField = value;
                    this.RaisePropertyChanged("CaseSubmittedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTreatmentRequired {
            get {
                return this.IsTreatmentRequiredField;
            }
            set {
                if ((this.IsTreatmentRequiredField.Equals(value) != true)) {
                    this.IsTreatmentRequiredField = value;
                    this.RaisePropertyChanged("IsTreatmentRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTriage {
            get {
                return this.IsTriageField;
            }
            set {
                if ((this.IsTriageField.Equals(value) != true)) {
                    this.IsTriageField = value;
                    this.RaisePropertyChanged("IsTriage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerID {
            get {
                return this.ReferrerIDField;
            }
            set {
                if ((this.ReferrerIDField.Equals(value) != true)) {
                    this.ReferrerIDField = value;
                    this.RaisePropertyChanged("ReferrerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferrerName {
            get {
                return this.ReferrerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferrerNameField, value) != true)) {
                    this.ReferrerNameField = value;
                    this.RaisePropertyChanged("ReferrerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerProjectID {
            get {
                return this.ReferrerProjectIDField;
            }
            set {
                if ((this.ReferrerProjectIDField.Equals(value) != true)) {
                    this.ReferrerProjectIDField = value;
                    this.RaisePropertyChanged("ReferrerProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerProjectTreatmentID {
            get {
                return this.ReferrerProjectTreatmentIDField;
            }
            set {
                if ((this.ReferrerProjectTreatmentIDField.Equals(value) != true)) {
                    this.ReferrerProjectTreatmentIDField = value;
                    this.RaisePropertyChanged("ReferrerProjectTreatmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentTypeID {
            get {
                return this.TreatmentTypeIDField;
            }
            set {
                if ((this.TreatmentTypeIDField.Equals(value) != true)) {
                    this.TreatmentTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentTypeName {
            get {
                return this.TreatmentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentTypeNameField, value) != true)) {
                    this.TreatmentTypeNameField = value;
                    this.RaisePropertyChanged("TreatmentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowID {
            get {
                return this.WorkflowIDField;
            }
            set {
                if ((this.WorkflowIDField.Equals(value) != true)) {
                    this.WorkflowIDField = value;
                    this.RaisePropertyChanged("WorkflowID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasePatientSupplierPractitioner", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CasePatientSupplierPractitioner : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseReferrerReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PractitionerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PractitionerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseReferrerReferenceNumber {
            get {
                return this.CaseReferrerReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseReferrerReferenceNumberField, value) != true)) {
                    this.CaseReferrerReferenceNumberField = value;
                    this.RaisePropertyChanged("CaseReferrerReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PractitionerFirstName {
            get {
                return this.PractitionerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PractitionerFirstNameField, value) != true)) {
                    this.PractitionerFirstNameField = value;
                    this.RaisePropertyChanged("PractitionerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PractitionerLastName {
            get {
                return this.PractitionerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PractitionerLastNameField, value) != true)) {
                    this.PractitionerLastNameField = value;
                    this.RaisePropertyChanged("PractitionerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasePatient", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CasePatient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaseSubmittedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InjuryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaseSubmittedDate {
            get {
                return this.CaseSubmittedDateField;
            }
            set {
                if ((this.CaseSubmittedDateField.Equals(value) != true)) {
                    this.CaseSubmittedDateField = value;
                    this.RaisePropertyChanged("CaseSubmittedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InjuryDate {
            get {
                return this.InjuryDateField;
            }
            set {
                if ((this.InjuryDateField.Equals(value) != true)) {
                    this.InjuryDateField = value;
                    this.RaisePropertyChanged("InjuryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkPhone {
            get {
                return this.WorkPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPhoneField, value) != true)) {
                    this.WorkPhoneField = value;
                    this.RaisePropertyChanged("WorkPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasePatientReferrerSupplier", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CasePatientReferrerSupplier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferrerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuppliersAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuppliersCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuppliersPostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuppliersRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferrerName {
            get {
                return this.ReferrerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferrerNameField, value) != true)) {
                    this.ReferrerNameField = value;
                    this.RaisePropertyChanged("ReferrerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuppliersAddress {
            get {
                return this.SuppliersAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SuppliersAddressField, value) != true)) {
                    this.SuppliersAddressField = value;
                    this.RaisePropertyChanged("SuppliersAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuppliersCity {
            get {
                return this.SuppliersCityField;
            }
            set {
                if ((object.ReferenceEquals(this.SuppliersCityField, value) != true)) {
                    this.SuppliersCityField = value;
                    this.RaisePropertyChanged("SuppliersCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuppliersPostCode {
            get {
                return this.SuppliersPostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SuppliersPostCodeField, value) != true)) {
                    this.SuppliersPostCodeField = value;
                    this.RaisePropertyChanged("SuppliersPostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuppliersRegion {
            get {
                return this.SuppliersRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.SuppliersRegionField, value) != true)) {
                    this.SuppliersRegionField = value;
                    this.RaisePropertyChanged("SuppliersRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentTypeName {
            get {
                return this.TreatmentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentTypeNameField, value) != true)) {
                    this.TreatmentTypeNameField = value;
                    this.RaisePropertyChanged("TreatmentTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReferrerSupplierCases", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ReferrerSupplierCases : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseReferrerReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaseSubmittedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinalAssessmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FinalAssessmentServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FinalCaseAssessmentDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InitialAssessmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InitialAssessmentServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InitialCaseAssessmentDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkflowIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseReferrerReferenceNumber {
            get {
                return this.CaseReferrerReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseReferrerReferenceNumberField, value) != true)) {
                    this.CaseReferrerReferenceNumberField = value;
                    this.RaisePropertyChanged("CaseReferrerReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaseSubmittedDate {
            get {
                return this.CaseSubmittedDateField;
            }
            set {
                if ((this.CaseSubmittedDateField.Equals(value) != true)) {
                    this.CaseSubmittedDateField = value;
                    this.RaisePropertyChanged("CaseSubmittedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FinalAssessmentDate {
            get {
                return this.FinalAssessmentDateField;
            }
            set {
                if ((this.FinalAssessmentDateField.Equals(value) != true)) {
                    this.FinalAssessmentDateField = value;
                    this.RaisePropertyChanged("FinalAssessmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FinalAssessmentServiceID {
            get {
                return this.FinalAssessmentServiceIDField;
            }
            set {
                if ((this.FinalAssessmentServiceIDField.Equals(value) != true)) {
                    this.FinalAssessmentServiceIDField = value;
                    this.RaisePropertyChanged("FinalAssessmentServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FinalCaseAssessmentDetailID {
            get {
                return this.FinalCaseAssessmentDetailIDField;
            }
            set {
                if ((this.FinalCaseAssessmentDetailIDField.Equals(value) != true)) {
                    this.FinalCaseAssessmentDetailIDField = value;
                    this.RaisePropertyChanged("FinalCaseAssessmentDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InitialAssessmentDate {
            get {
                return this.InitialAssessmentDateField;
            }
            set {
                if ((this.InitialAssessmentDateField.Equals(value) != true)) {
                    this.InitialAssessmentDateField = value;
                    this.RaisePropertyChanged("InitialAssessmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InitialAssessmentServiceID {
            get {
                return this.InitialAssessmentServiceIDField;
            }
            set {
                if ((this.InitialAssessmentServiceIDField.Equals(value) != true)) {
                    this.InitialAssessmentServiceIDField = value;
                    this.RaisePropertyChanged("InitialAssessmentServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InitialCaseAssessmentDetailID {
            get {
                return this.InitialCaseAssessmentDetailIDField;
            }
            set {
                if ((this.InitialCaseAssessmentDetailIDField.Equals(value) != true)) {
                    this.InitialCaseAssessmentDetailIDField = value;
                    this.RaisePropertyChanged("InitialCaseAssessmentDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkPhone {
            get {
                return this.WorkPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPhoneField, value) != true)) {
                    this.WorkPhoneField = value;
                    this.RaisePropertyChanged("WorkPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowID {
            get {
                return this.WorkflowIDField;
            }
            set {
                if ((this.WorkflowIDField.Equals(value) != true)) {
                    this.WorkflowIDField = value;
                    this.RaisePropertyChanged("WorkflowID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseDocument", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ReferrerCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SupplierCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseDocumentID {
            get {
                return this.CaseDocumentIDField;
            }
            set {
                if ((this.CaseDocumentIDField.Equals(value) != true)) {
                    this.CaseDocumentIDField = value;
                    this.RaisePropertyChanged("CaseDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ReferrerCheck {
            get {
                return this.ReferrerCheckField;
            }
            set {
                if ((this.ReferrerCheckField.Equals(value) != true)) {
                    this.ReferrerCheckField = value;
                    this.RaisePropertyChanged("ReferrerCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SupplierCheck {
            get {
                return this.SupplierCheckField;
            }
            set {
                if ((this.SupplierCheckField.Equals(value) != true)) {
                    this.SupplierCheckField = value;
                    this.RaisePropertyChanged("SupplierCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadPath {
            get {
                return this.UploadPathField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadPathField, value) != true)) {
                    this.UploadPathField = value;
                    this.RaisePropertyChanged("UploadPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasePatientSearch", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CasePatientSearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientLastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientFirstName {
            get {
                return this.PatientFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientFirstNameField, value) != true)) {
                    this.PatientFirstNameField = value;
                    this.RaisePropertyChanged("PatientFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientLastName {
            get {
                return this.PatientLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientLastNameField, value) != true)) {
                    this.PatientLastNameField = value;
                    this.RaisePropertyChanged("PatientLastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseStopReason", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseStopReason : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseStopReasonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseStopReasonNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseStopReasonID {
            get {
                return this.CaseStopReasonIDField;
            }
            set {
                if ((this.CaseStopReasonIDField.Equals(value) != true)) {
                    this.CaseStopReasonIDField = value;
                    this.RaisePropertyChanged("CaseStopReasonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseStopReasonName {
            get {
                return this.CaseStopReasonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseStopReasonNameField, value) != true)) {
                    this.CaseStopReasonNameField = value;
                    this.RaisePropertyChanged("CaseStopReasonName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseNote", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseNoteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkflowIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseNoteID {
            get {
                return this.CaseNoteIDField;
            }
            set {
                if ((this.CaseNoteIDField.Equals(value) != true)) {
                    this.CaseNoteIDField = value;
                    this.RaisePropertyChanged("CaseNoteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowID {
            get {
                return this.WorkflowIDField;
            }
            set {
                if ((this.WorkflowIDField.Equals(value) != true)) {
                    this.WorkflowIDField = value;
                    this.RaisePropertyChanged("WorkflowID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseNoteUser", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseNoteUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseNoteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkflowDefinationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseNoteID {
            get {
                return this.CaseNoteIDField;
            }
            set {
                if ((this.CaseNoteIDField.Equals(value) != true)) {
                    this.CaseNoteIDField = value;
                    this.RaisePropertyChanged("CaseNoteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowDefination {
            get {
                return this.WorkflowDefinationField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowDefinationField, value) != true)) {
                    this.WorkflowDefinationField = value;
                    this.RaisePropertyChanged("WorkflowDefination");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedCasePatientTreatmentWorkflow", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PagedCasePatientTreatmentWorkflow : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSPublicApp.Web.ITSService.CaseService.CasePatientTreatmentWorkflow[] CasePatientTreatmentWorkflowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSPublicApp.Web.ITSService.CaseService.CasePatientTreatmentWorkflow[] CasePatientTreatmentWorkflows {
            get {
                return this.CasePatientTreatmentWorkflowsField;
            }
            set {
                if ((object.ReferenceEquals(this.CasePatientTreatmentWorkflowsField, value) != true)) {
                    this.CasePatientTreatmentWorkflowsField = value;
                    this.RaisePropertyChanged("CasePatientTreatmentWorkflows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasePatientTreatmentWorkflow", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CasePatientTreatmentWorkflow : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseReferrerReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefinitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferrerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TreatmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkflowIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseReferrerReferenceNumber {
            get {
                return this.CaseReferrerReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseReferrerReferenceNumberField, value) != true)) {
                    this.CaseReferrerReferenceNumberField = value;
                    this.RaisePropertyChanged("CaseReferrerReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Definition {
            get {
                return this.DefinitionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionField, value) != true)) {
                    this.DefinitionField = value;
                    this.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferrerName {
            get {
                return this.ReferrerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferrerNameField, value) != true)) {
                    this.ReferrerNameField = value;
                    this.RaisePropertyChanged("ReferrerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentCategoryName {
            get {
                return this.TreatmentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentCategoryNameField, value) != true)) {
                    this.TreatmentCategoryNameField = value;
                    this.RaisePropertyChanged("TreatmentCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TreatmentTypeID {
            get {
                return this.TreatmentTypeIDField;
            }
            set {
                if ((this.TreatmentTypeIDField.Equals(value) != true)) {
                    this.TreatmentTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentTypeName {
            get {
                return this.TreatmentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentTypeNameField, value) != true)) {
                    this.TreatmentTypeNameField = value;
                    this.RaisePropertyChanged("TreatmentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowID {
            get {
                return this.WorkflowIDField;
            }
            set {
                if ((this.WorkflowIDField.Equals(value) != true)) {
                    this.WorkflowIDField = value;
                    this.RaisePropertyChanged("WorkflowID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseHistoryUser", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseHistoryUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseHistoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseHistoryID {
            get {
                return this.CaseHistoryIDField;
            }
            set {
                if ((this.CaseHistoryIDField.Equals(value) != true)) {
                    this.CaseHistoryIDField = value;
                    this.RaisePropertyChanged("CaseHistoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDescription {
            get {
                return this.EventDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDescriptionField, value) != true)) {
                    this.EventDescriptionField = value;
                    this.RaisePropertyChanged("EventDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventTypeID {
            get {
                return this.EventTypeIDField;
            }
            set {
                if ((this.EventTypeIDField.Equals(value) != true)) {
                    this.EventTypeIDField = value;
                    this.RaisePropertyChanged("EventTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseBespokeServicePricingType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseBespokeServicePricingType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BespokeServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseBespokeServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PatientDidNotAttendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReferrerPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SupplierPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryBespokeServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> WasAbandonedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BespokeServiceName {
            get {
                return this.BespokeServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BespokeServiceNameField, value) != true)) {
                    this.BespokeServiceNameField = value;
                    this.RaisePropertyChanged("BespokeServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseBespokeServiceID {
            get {
                return this.CaseBespokeServiceIDField;
            }
            set {
                if ((this.CaseBespokeServiceIDField.Equals(value) != true)) {
                    this.CaseBespokeServiceIDField = value;
                    this.RaisePropertyChanged("CaseBespokeServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfService {
            get {
                return this.DateOfServiceField;
            }
            set {
                if ((this.DateOfServiceField.Equals(value) != true)) {
                    this.DateOfServiceField = value;
                    this.RaisePropertyChanged("DateOfService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsComplete {
            get {
                return this.IsCompleteField;
            }
            set {
                if ((this.IsCompleteField.Equals(value) != true)) {
                    this.IsCompleteField = value;
                    this.RaisePropertyChanged("IsComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PatientDidNotAttend {
            get {
                return this.PatientDidNotAttendField;
            }
            set {
                if ((this.PatientDidNotAttendField.Equals(value) != true)) {
                    this.PatientDidNotAttendField = value;
                    this.RaisePropertyChanged("PatientDidNotAttend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReferrerPrice {
            get {
                return this.ReferrerPriceField;
            }
            set {
                if ((this.ReferrerPriceField.Equals(value) != true)) {
                    this.ReferrerPriceField = value;
                    this.RaisePropertyChanged("ReferrerPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SupplierPrice {
            get {
                return this.SupplierPriceField;
            }
            set {
                if ((this.SupplierPriceField.Equals(value) != true)) {
                    this.SupplierPriceField = value;
                    this.RaisePropertyChanged("SupplierPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryBespokeServiceID {
            get {
                return this.TreatmentCategoryBespokeServiceIDField;
            }
            set {
                if ((this.TreatmentCategoryBespokeServiceIDField.Equals(value) != true)) {
                    this.TreatmentCategoryBespokeServiceIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryBespokeServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> WasAbandoned {
            get {
                return this.WasAbandonedField;
            }
            set {
                if ((this.WasAbandonedField.Equals(value) != true)) {
                    this.WasAbandonedField = value;
                    this.RaisePropertyChanged("WasAbandoned");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasePatientReferrerSupplierWorkflow", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CasePatientReferrerSupplierWorkflow : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseReferrerReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasLegalRepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InjuryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferrerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SolicitorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialInstructionNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseReferrerReferenceNumber {
            get {
                return this.CaseReferrerReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseReferrerReferenceNumberField, value) != true)) {
                    this.CaseReferrerReferenceNumberField = value;
                    this.RaisePropertyChanged("CaseReferrerReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentStatus {
            get {
                return this.CurrentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentStatusField, value) != true)) {
                    this.CurrentStatusField = value;
                    this.RaisePropertyChanged("CurrentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenderID {
            get {
                return this.GenderIDField;
            }
            set {
                if ((this.GenderIDField.Equals(value) != true)) {
                    this.GenderIDField = value;
                    this.RaisePropertyChanged("GenderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLegalRep {
            get {
                return this.HasLegalRepField;
            }
            set {
                if ((this.HasLegalRepField.Equals(value) != true)) {
                    this.HasLegalRepField = value;
                    this.RaisePropertyChanged("HasLegalRep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InjuryDate {
            get {
                return this.InjuryDateField;
            }
            set {
                if ((this.InjuryDateField.Equals(value) != true)) {
                    this.InjuryDateField = value;
                    this.RaisePropertyChanged("InjuryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferrerName {
            get {
                return this.ReferrerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferrerNameField, value) != true)) {
                    this.ReferrerNameField = value;
                    this.RaisePropertyChanged("ReferrerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SolicitorID {
            get {
                return this.SolicitorIDField;
            }
            set {
                if ((this.SolicitorIDField.Equals(value) != true)) {
                    this.SolicitorIDField = value;
                    this.RaisePropertyChanged("SolicitorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialInstructionNotes {
            get {
                return this.SpecialInstructionNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialInstructionNotesField, value) != true)) {
                    this.SpecialInstructionNotesField = value;
                    this.RaisePropertyChanged("SpecialInstructionNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierPhone {
            get {
                return this.SupplierPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierPhoneField, value) != true)) {
                    this.SupplierPhoneField = value;
                    this.RaisePropertyChanged("SupplierPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentCategoryName {
            get {
                return this.TreatmentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentCategoryNameField, value) != true)) {
                    this.TreatmentCategoryNameField = value;
                    this.RaisePropertyChanged("TreatmentCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentTypeID {
            get {
                return this.TreatmentTypeIDField;
            }
            set {
                if ((this.TreatmentTypeIDField.Equals(value) != true)) {
                    this.TreatmentTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentTypeName {
            get {
                return this.TreatmentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentTypeNameField, value) != true)) {
                    this.TreatmentTypeNameField = value;
                    this.RaisePropertyChanged("TreatmentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkPhone {
            get {
                return this.WorkPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPhoneField, value) != true)) {
                    this.WorkPhoneField = value;
                    this.RaisePropertyChanged("WorkPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasePatientReferrer", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CasePatientReferrer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseReferrerReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferrerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseReferrerReferenceNumber {
            get {
                return this.CaseReferrerReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseReferrerReferenceNumberField, value) != true)) {
                    this.CaseReferrerReferenceNumberField = value;
                    this.RaisePropertyChanged("CaseReferrerReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerID {
            get {
                return this.ReferrerIDField;
            }
            set {
                if ((this.ReferrerIDField.Equals(value) != true)) {
                    this.ReferrerIDField = value;
                    this.RaisePropertyChanged("ReferrerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferrerName {
            get {
                return this.ReferrerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferrerNameField, value) != true)) {
                    this.ReferrerNameField = value;
                    this.RaisePropertyChanged("ReferrerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntialAssessmentReportDetail", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class IntialAssessmentReportDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseReferrerReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DelegatedAuthorisationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalSessionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseReferrerReferenceNumber {
            get {
                return this.CaseReferrerReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseReferrerReferenceNumberField, value) != true)) {
                    this.CaseReferrerReferenceNumberField = value;
                    this.RaisePropertyChanged("CaseReferrerReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DelegatedAuthorisationTypeID {
            get {
                return this.DelegatedAuthorisationTypeIDField;
            }
            set {
                if ((this.DelegatedAuthorisationTypeIDField.Equals(value) != true)) {
                    this.DelegatedAuthorisationTypeIDField = value;
                    this.RaisePropertyChanged("DelegatedAuthorisationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientFullName {
            get {
                return this.PatientFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientFullNameField, value) != true)) {
                    this.PatientFullNameField = value;
                    this.RaisePropertyChanged("PatientFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalSession {
            get {
                return this.TotalSessionField;
            }
            set {
                if ((this.TotalSessionField.Equals(value) != true)) {
                    this.TotalSessionField = value;
                    this.RaisePropertyChanged("TotalSession");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EvaluateDelegatedAuthorisationCost", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class EvaluateDelegatedAuthorisationCost : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CntField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cnt {
            get {
                return this.CntField;
            }
            set {
                if ((this.CntField.Equals(value) != true)) {
                    this.CntField = value;
                    this.RaisePropertyChanged("Cnt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseDocumentUser", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseDocumentUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ReferrerCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferrerDocumentTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SupplierCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseDocumentID {
            get {
                return this.CaseDocumentIDField;
            }
            set {
                if ((this.CaseDocumentIDField.Equals(value) != true)) {
                    this.CaseDocumentIDField = value;
                    this.RaisePropertyChanged("CaseDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ReferrerCheck {
            get {
                return this.ReferrerCheckField;
            }
            set {
                if ((this.ReferrerCheckField.Equals(value) != true)) {
                    this.ReferrerCheckField = value;
                    this.RaisePropertyChanged("ReferrerCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerDocumentID {
            get {
                return this.ReferrerDocumentIDField;
            }
            set {
                if ((this.ReferrerDocumentIDField.Equals(value) != true)) {
                    this.ReferrerDocumentIDField = value;
                    this.RaisePropertyChanged("ReferrerDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferrerDocumentTypeDesc {
            get {
                return this.ReferrerDocumentTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferrerDocumentTypeDescField, value) != true)) {
                    this.ReferrerDocumentTypeDescField = value;
                    this.RaisePropertyChanged("ReferrerDocumentTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SupplierCheck {
            get {
                return this.SupplierCheckField;
            }
            set {
                if ((this.SupplierCheckField.Equals(value) != true)) {
                    this.SupplierCheckField = value;
                    this.RaisePropertyChanged("SupplierCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadPath {
            get {
                return this.UploadPathField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadPathField, value) != true)) {
                    this.UploadPathField = value;
                    this.RaisePropertyChanged("UploadPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseTreatmentPricingType", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseTreatmentPricingType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AuthorizationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseTreatmentPricingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PatientDidNotAttendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PatientDidNotAttendDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricingTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReferrerPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerPricingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SupplierPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierPriceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> WasAbandonedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AuthorizationStatus {
            get {
                return this.AuthorizationStatusField;
            }
            set {
                if ((this.AuthorizationStatusField.Equals(value) != true)) {
                    this.AuthorizationStatusField = value;
                    this.RaisePropertyChanged("AuthorizationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseTreatmentPricingID {
            get {
                return this.CaseTreatmentPricingIDField;
            }
            set {
                if ((this.CaseTreatmentPricingIDField.Equals(value) != true)) {
                    this.CaseTreatmentPricingIDField = value;
                    this.RaisePropertyChanged("CaseTreatmentPricingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfService {
            get {
                return this.DateOfServiceField;
            }
            set {
                if ((this.DateOfServiceField.Equals(value) != true)) {
                    this.DateOfServiceField = value;
                    this.RaisePropertyChanged("DateOfService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsComplete {
            get {
                return this.IsCompleteField;
            }
            set {
                if ((this.IsCompleteField.Equals(value) != true)) {
                    this.IsCompleteField = value;
                    this.RaisePropertyChanged("IsComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PatientDidNotAttend {
            get {
                return this.PatientDidNotAttendField;
            }
            set {
                if ((this.PatientDidNotAttendField.Equals(value) != true)) {
                    this.PatientDidNotAttendField = value;
                    this.RaisePropertyChanged("PatientDidNotAttend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PatientDidNotAttendDate {
            get {
                return this.PatientDidNotAttendDateField;
            }
            set {
                if ((this.PatientDidNotAttendDateField.Equals(value) != true)) {
                    this.PatientDidNotAttendDateField = value;
                    this.RaisePropertyChanged("PatientDidNotAttendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricingTypeName {
            get {
                return this.PricingTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PricingTypeNameField, value) != true)) {
                    this.PricingTypeNameField = value;
                    this.RaisePropertyChanged("PricingTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReferrerPrice {
            get {
                return this.ReferrerPriceField;
            }
            set {
                if ((this.ReferrerPriceField.Equals(value) != true)) {
                    this.ReferrerPriceField = value;
                    this.RaisePropertyChanged("ReferrerPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerPricingID {
            get {
                return this.ReferrerPricingIDField;
            }
            set {
                if ((this.ReferrerPricingIDField.Equals(value) != true)) {
                    this.ReferrerPricingIDField = value;
                    this.RaisePropertyChanged("ReferrerPricingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SupplierPrice {
            get {
                return this.SupplierPriceField;
            }
            set {
                if ((this.SupplierPriceField.Equals(value) != true)) {
                    this.SupplierPriceField = value;
                    this.RaisePropertyChanged("SupplierPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierPriceID {
            get {
                return this.SupplierPriceIDField;
            }
            set {
                if ((this.SupplierPriceIDField.Equals(value) != true)) {
                    this.SupplierPriceIDField = value;
                    this.RaisePropertyChanged("SupplierPriceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> WasAbandoned {
            get {
                return this.WasAbandonedField;
            }
            set {
                if ((this.WasAbandonedField.Equals(value) != true)) {
                    this.WasAbandonedField = value;
                    this.RaisePropertyChanged("WasAbandoned");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseTreatmentPricing", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseTreatmentPricing : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AuthorizationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseTreatmentPricingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PatientDidNotAttendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PatientDidNotAttendDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReferrerPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerPricingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SupplierPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierPriceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> WasAbandonedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AuthorizationStatus {
            get {
                return this.AuthorizationStatusField;
            }
            set {
                if ((this.AuthorizationStatusField.Equals(value) != true)) {
                    this.AuthorizationStatusField = value;
                    this.RaisePropertyChanged("AuthorizationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseTreatmentPricingID {
            get {
                return this.CaseTreatmentPricingIDField;
            }
            set {
                if ((this.CaseTreatmentPricingIDField.Equals(value) != true)) {
                    this.CaseTreatmentPricingIDField = value;
                    this.RaisePropertyChanged("CaseTreatmentPricingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfService {
            get {
                return this.DateOfServiceField;
            }
            set {
                if ((this.DateOfServiceField.Equals(value) != true)) {
                    this.DateOfServiceField = value;
                    this.RaisePropertyChanged("DateOfService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsChanged {
            get {
                return this.IsChangedField;
            }
            set {
                if ((this.IsChangedField.Equals(value) != true)) {
                    this.IsChangedField = value;
                    this.RaisePropertyChanged("IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsComplete {
            get {
                return this.IsCompleteField;
            }
            set {
                if ((this.IsCompleteField.Equals(value) != true)) {
                    this.IsCompleteField = value;
                    this.RaisePropertyChanged("IsComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PatientDidNotAttend {
            get {
                return this.PatientDidNotAttendField;
            }
            set {
                if ((this.PatientDidNotAttendField.Equals(value) != true)) {
                    this.PatientDidNotAttendField = value;
                    this.RaisePropertyChanged("PatientDidNotAttend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PatientDidNotAttendDate {
            get {
                return this.PatientDidNotAttendDateField;
            }
            set {
                if ((this.PatientDidNotAttendDateField.Equals(value) != true)) {
                    this.PatientDidNotAttendDateField = value;
                    this.RaisePropertyChanged("PatientDidNotAttendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReferrerPrice {
            get {
                return this.ReferrerPriceField;
            }
            set {
                if ((this.ReferrerPriceField.Equals(value) != true)) {
                    this.ReferrerPriceField = value;
                    this.RaisePropertyChanged("ReferrerPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerPricingID {
            get {
                return this.ReferrerPricingIDField;
            }
            set {
                if ((this.ReferrerPricingIDField.Equals(value) != true)) {
                    this.ReferrerPricingIDField = value;
                    this.RaisePropertyChanged("ReferrerPricingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SupplierPrice {
            get {
                return this.SupplierPriceField;
            }
            set {
                if ((this.SupplierPriceField.Equals(value) != true)) {
                    this.SupplierPriceField = value;
                    this.RaisePropertyChanged("SupplierPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierPriceID {
            get {
                return this.SupplierPriceIDField;
            }
            set {
                if ((this.SupplierPriceIDField.Equals(value) != true)) {
                    this.SupplierPriceIDField = value;
                    this.RaisePropertyChanged("SupplierPriceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> WasAbandoned {
            get {
                return this.WasAbandonedField;
            }
            set {
                if ((this.WasAbandonedField.Equals(value) != true)) {
                    this.WasAbandonedField = value;
                    this.RaisePropertyChanged("WasAbandoned");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseTreatmentPricingCaseSearch", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseTreatmentPricingCaseSearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseTreatmentPricingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PatientDidNotAttendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricingTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReferrerPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerPricingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SupplierPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierPriceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> WasAbandonedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseTreatmentPricingID {
            get {
                return this.CaseTreatmentPricingIDField;
            }
            set {
                if ((this.CaseTreatmentPricingIDField.Equals(value) != true)) {
                    this.CaseTreatmentPricingIDField = value;
                    this.RaisePropertyChanged("CaseTreatmentPricingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfService {
            get {
                return this.DateOfServiceField;
            }
            set {
                if ((this.DateOfServiceField.Equals(value) != true)) {
                    this.DateOfServiceField = value;
                    this.RaisePropertyChanged("DateOfService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsChanged {
            get {
                return this.IsChangedField;
            }
            set {
                if ((this.IsChangedField.Equals(value) != true)) {
                    this.IsChangedField = value;
                    this.RaisePropertyChanged("IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsComplete {
            get {
                return this.IsCompleteField;
            }
            set {
                if ((this.IsCompleteField.Equals(value) != true)) {
                    this.IsCompleteField = value;
                    this.RaisePropertyChanged("IsComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PatientDidNotAttend {
            get {
                return this.PatientDidNotAttendField;
            }
            set {
                if ((this.PatientDidNotAttendField.Equals(value) != true)) {
                    this.PatientDidNotAttendField = value;
                    this.RaisePropertyChanged("PatientDidNotAttend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricingTypeName {
            get {
                return this.PricingTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PricingTypeNameField, value) != true)) {
                    this.PricingTypeNameField = value;
                    this.RaisePropertyChanged("PricingTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReferrerPrice {
            get {
                return this.ReferrerPriceField;
            }
            set {
                if ((this.ReferrerPriceField.Equals(value) != true)) {
                    this.ReferrerPriceField = value;
                    this.RaisePropertyChanged("ReferrerPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerPricingID {
            get {
                return this.ReferrerPricingIDField;
            }
            set {
                if ((this.ReferrerPricingIDField.Equals(value) != true)) {
                    this.ReferrerPricingIDField = value;
                    this.RaisePropertyChanged("ReferrerPricingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SupplierPrice {
            get {
                return this.SupplierPriceField;
            }
            set {
                if ((this.SupplierPriceField.Equals(value) != true)) {
                    this.SupplierPriceField = value;
                    this.RaisePropertyChanged("SupplierPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierPriceID {
            get {
                return this.SupplierPriceIDField;
            }
            set {
                if ((this.SupplierPriceIDField.Equals(value) != true)) {
                    this.SupplierPriceIDField = value;
                    this.RaisePropertyChanged("SupplierPriceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> WasAbandoned {
            get {
                return this.WasAbandonedField;
            }
            set {
                if ((this.WasAbandonedField.Equals(value) != true)) {
                    this.WasAbandonedField = value;
                    this.RaisePropertyChanged("WasAbandoned");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentReferrerSupplierPricing", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentReferrerSupplierPricing : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PricingTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricingTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReferrerPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerPricingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerProjectTreatmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SupplierPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierPriceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierTreatmentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PricingTypeID {
            get {
                return this.PricingTypeIDField;
            }
            set {
                if ((this.PricingTypeIDField.Equals(value) != true)) {
                    this.PricingTypeIDField = value;
                    this.RaisePropertyChanged("PricingTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricingTypeName {
            get {
                return this.PricingTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PricingTypeNameField, value) != true)) {
                    this.PricingTypeNameField = value;
                    this.RaisePropertyChanged("PricingTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReferrerPrice {
            get {
                return this.ReferrerPriceField;
            }
            set {
                if ((this.ReferrerPriceField.Equals(value) != true)) {
                    this.ReferrerPriceField = value;
                    this.RaisePropertyChanged("ReferrerPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerPricingID {
            get {
                return this.ReferrerPricingIDField;
            }
            set {
                if ((this.ReferrerPricingIDField.Equals(value) != true)) {
                    this.ReferrerPricingIDField = value;
                    this.RaisePropertyChanged("ReferrerPricingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerProjectTreatmentID {
            get {
                return this.ReferrerProjectTreatmentIDField;
            }
            set {
                if ((this.ReferrerProjectTreatmentIDField.Equals(value) != true)) {
                    this.ReferrerProjectTreatmentIDField = value;
                    this.RaisePropertyChanged("ReferrerProjectTreatmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SupplierPrice {
            get {
                return this.SupplierPriceField;
            }
            set {
                if ((this.SupplierPriceField.Equals(value) != true)) {
                    this.SupplierPriceField = value;
                    this.RaisePropertyChanged("SupplierPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierPriceID {
            get {
                return this.SupplierPriceIDField;
            }
            set {
                if ((this.SupplierPriceIDField.Equals(value) != true)) {
                    this.SupplierPriceIDField = value;
                    this.RaisePropertyChanged("SupplierPriceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierTreatmentID {
            get {
                return this.SupplierTreatmentIDField;
            }
            set {
                if ((this.SupplierTreatmentIDField.Equals(value) != true)) {
                    this.SupplierTreatmentIDField = value;
                    this.RaisePropertyChanged("SupplierTreatmentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EPNATreatmentSession", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class EPNATreatmentSession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionsAttendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionsAuthorisedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionsAttended {
            get {
                return this.SessionsAttendedField;
            }
            set {
                if ((this.SessionsAttendedField.Equals(value) != true)) {
                    this.SessionsAttendedField = value;
                    this.RaisePropertyChanged("SessionsAttended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionsAuthorised {
            get {
                return this.SessionsAuthorisedField;
            }
            set {
                if ((this.SessionsAuthorisedField.Equals(value) != true)) {
                    this.SessionsAuthorisedField = value;
                    this.RaisePropertyChanged("SessionsAuthorised");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseBespokeServicePricing", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseBespokeServicePricing : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseBespokeServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PatientDidNotAttendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReferrerPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SupplierPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryBespokeServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> WasAbandonedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseBespokeServiceID {
            get {
                return this.CaseBespokeServiceIDField;
            }
            set {
                if ((this.CaseBespokeServiceIDField.Equals(value) != true)) {
                    this.CaseBespokeServiceIDField = value;
                    this.RaisePropertyChanged("CaseBespokeServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfService {
            get {
                return this.DateOfServiceField;
            }
            set {
                if ((this.DateOfServiceField.Equals(value) != true)) {
                    this.DateOfServiceField = value;
                    this.RaisePropertyChanged("DateOfService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsComplete {
            get {
                return this.IsCompleteField;
            }
            set {
                if ((this.IsCompleteField.Equals(value) != true)) {
                    this.IsCompleteField = value;
                    this.RaisePropertyChanged("IsComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PatientDidNotAttend {
            get {
                return this.PatientDidNotAttendField;
            }
            set {
                if ((this.PatientDidNotAttendField.Equals(value) != true)) {
                    this.PatientDidNotAttendField = value;
                    this.RaisePropertyChanged("PatientDidNotAttend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReferrerPrice {
            get {
                return this.ReferrerPriceField;
            }
            set {
                if ((this.ReferrerPriceField.Equals(value) != true)) {
                    this.ReferrerPriceField = value;
                    this.RaisePropertyChanged("ReferrerPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SupplierPrice {
            get {
                return this.SupplierPriceField;
            }
            set {
                if ((this.SupplierPriceField.Equals(value) != true)) {
                    this.SupplierPriceField = value;
                    this.RaisePropertyChanged("SupplierPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryBespokeServiceID {
            get {
                return this.TreatmentCategoryBespokeServiceIDField;
            }
            set {
                if ((this.TreatmentCategoryBespokeServiceIDField.Equals(value) != true)) {
                    this.TreatmentCategoryBespokeServiceIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryBespokeServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> WasAbandoned {
            get {
                return this.WasAbandonedField;
            }
            set {
                if ((this.WasAbandonedField.Equals(value) != true)) {
                    this.WasAbandonedField = value;
                    this.RaisePropertyChanged("WasAbandoned");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseCommunicationHistory", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseCommunicationHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseCommunicationHistoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SentCCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SentToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseCommunicationHistoryID {
            get {
                return this.CaseCommunicationHistoryIDField;
            }
            set {
                if ((this.CaseCommunicationHistoryIDField.Equals(value) != true)) {
                    this.CaseCommunicationHistoryIDField = value;
                    this.RaisePropertyChanged("CaseCommunicationHistoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SentCC {
            get {
                return this.SentCCField;
            }
            set {
                if ((object.ReferenceEquals(this.SentCCField, value) != true)) {
                    this.SentCCField = value;
                    this.RaisePropertyChanged("SentCC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SentTo {
            get {
                return this.SentToField;
            }
            set {
                if ((object.ReferenceEquals(this.SentToField, value) != true)) {
                    this.SentToField = value;
                    this.RaisePropertyChanged("SentTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadPath {
            get {
                return this.UploadPathField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadPathField, value) != true)) {
                    this.UploadPathField = value;
                    this.RaisePropertyChanged("UploadPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseCommunicationHistoryUser", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseCommunicationHistoryUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseCommunicationHistoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SentCCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SentToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseCommunicationHistoryID {
            get {
                return this.CaseCommunicationHistoryIDField;
            }
            set {
                if ((this.CaseCommunicationHistoryIDField.Equals(value) != true)) {
                    this.CaseCommunicationHistoryIDField = value;
                    this.RaisePropertyChanged("CaseCommunicationHistoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SentCC {
            get {
                return this.SentCCField;
            }
            set {
                if ((object.ReferenceEquals(this.SentCCField, value) != true)) {
                    this.SentCCField = value;
                    this.RaisePropertyChanged("SentCC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SentTo {
            get {
                return this.SentToField;
            }
            set {
                if ((object.ReferenceEquals(this.SentToField, value) != true)) {
                    this.SentToField = value;
                    this.RaisePropertyChanged("SentTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadPath {
            get {
                return this.UploadPathField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadPathField, value) != true)) {
                    this.UploadPathField = value;
                    this.RaisePropertyChanged("UploadPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedReferrerSupplierCaseSearch", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class PagedReferrerSupplierCaseSearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSPublicApp.Web.ITSService.CaseService.ReferrerSupplierCases[] CasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSPublicApp.Web.ITSService.CaseService.ReferrerSupplierCases[] Cases {
            get {
                return this.CasesField;
            }
            set {
                if ((object.ReferenceEquals(this.CasesField, value) != true)) {
                    this.CasesField = value;
                    this.RaisePropertyChanged("Cases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReferrerAndSupplierPricing", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class ReferrerAndSupplierPricing : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PricingTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricingTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ReferrerPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReferrerPricingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferrerProjectTreatmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SupplierPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SupplierPriceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SupplierTreatmentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PricingTypeID {
            get {
                return this.PricingTypeIDField;
            }
            set {
                if ((this.PricingTypeIDField.Equals(value) != true)) {
                    this.PricingTypeIDField = value;
                    this.RaisePropertyChanged("PricingTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricingTypeName {
            get {
                return this.PricingTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PricingTypeNameField, value) != true)) {
                    this.PricingTypeNameField = value;
                    this.RaisePropertyChanged("PricingTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ReferrerPrice {
            get {
                return this.ReferrerPriceField;
            }
            set {
                if ((this.ReferrerPriceField.Equals(value) != true)) {
                    this.ReferrerPriceField = value;
                    this.RaisePropertyChanged("ReferrerPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReferrerPricingID {
            get {
                return this.ReferrerPricingIDField;
            }
            set {
                if ((this.ReferrerPricingIDField.Equals(value) != true)) {
                    this.ReferrerPricingIDField = value;
                    this.RaisePropertyChanged("ReferrerPricingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferrerProjectTreatmentID {
            get {
                return this.ReferrerProjectTreatmentIDField;
            }
            set {
                if ((this.ReferrerProjectTreatmentIDField.Equals(value) != true)) {
                    this.ReferrerProjectTreatmentIDField = value;
                    this.RaisePropertyChanged("ReferrerProjectTreatmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SupplierPrice {
            get {
                return this.SupplierPriceField;
            }
            set {
                if ((this.SupplierPriceField.Equals(value) != true)) {
                    this.SupplierPriceField = value;
                    this.RaisePropertyChanged("SupplierPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SupplierPriceID {
            get {
                return this.SupplierPriceIDField;
            }
            set {
                if ((this.SupplierPriceIDField.Equals(value) != true)) {
                    this.SupplierPriceIDField = value;
                    this.RaisePropertyChanged("SupplierPriceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SupplierTreatmentID {
            get {
                return this.SupplierTreatmentIDField;
            }
            set {
                if ((this.SupplierTreatmentIDField.Equals(value) != true)) {
                    this.SupplierTreatmentIDField = value;
                    this.RaisePropertyChanged("SupplierTreatmentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseVAT", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseVAT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VATField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VAT {
            get {
                return this.VATField;
            }
            set {
                if ((this.VATField.Equals(value) != true)) {
                    this.VATField = value;
                    this.RaisePropertyChanged("VAT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentSessionByCaseID", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentSessionByCaseID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllFailedTreatmentSessionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllTreatmentSessionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShowAllAttendedSessionsDateOfServiceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllFailedTreatmentSessions {
            get {
                return this.AllFailedTreatmentSessionsField;
            }
            set {
                if ((this.AllFailedTreatmentSessionsField.Equals(value) != true)) {
                    this.AllFailedTreatmentSessionsField = value;
                    this.RaisePropertyChanged("AllFailedTreatmentSessions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllTreatmentSessions {
            get {
                return this.AllTreatmentSessionsField;
            }
            set {
                if ((this.AllTreatmentSessionsField.Equals(value) != true)) {
                    this.AllTreatmentSessionsField = value;
                    this.RaisePropertyChanged("AllTreatmentSessions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowAllAttendedSessionsDateOfService {
            get {
                return this.ShowAllAttendedSessionsDateOfServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowAllAttendedSessionsDateOfServiceField, value) != true)) {
                    this.ShowAllAttendedSessionsDateOfServiceField = value;
                    this.RaisePropertyChanged("ShowAllAttendedSessionsDateOfService");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationBubble", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class NotificationBubble : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorisationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExistingPatientsInitialAssessmentCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExistingPatientsNextAssessmentCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewPatientCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StoppedCaseCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorisationCount {
            get {
                return this.AuthorisationCountField;
            }
            set {
                if ((this.AuthorisationCountField.Equals(value) != true)) {
                    this.AuthorisationCountField = value;
                    this.RaisePropertyChanged("AuthorisationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExistingPatientsInitialAssessmentCount {
            get {
                return this.ExistingPatientsInitialAssessmentCountField;
            }
            set {
                if ((this.ExistingPatientsInitialAssessmentCountField.Equals(value) != true)) {
                    this.ExistingPatientsInitialAssessmentCountField = value;
                    this.RaisePropertyChanged("ExistingPatientsInitialAssessmentCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExistingPatientsNextAssessmentCount {
            get {
                return this.ExistingPatientsNextAssessmentCountField;
            }
            set {
                if ((this.ExistingPatientsNextAssessmentCountField.Equals(value) != true)) {
                    this.ExistingPatientsNextAssessmentCountField = value;
                    this.RaisePropertyChanged("ExistingPatientsNextAssessmentCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewPatientCount {
            get {
                return this.NewPatientCountField;
            }
            set {
                if ((this.NewPatientCountField.Equals(value) != true)) {
                    this.NewPatientCountField = value;
                    this.RaisePropertyChanged("NewPatientCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StoppedCaseCount {
            get {
                return this.StoppedCaseCountField;
            }
            set {
                if ((this.StoppedCaseCountField.Equals(value) != true)) {
                    this.StoppedCaseCountField = value;
                    this.RaisePropertyChanged("StoppedCaseCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseReferrerAssignedUser", Namespace="http://schemas.datacontract.org/2004/07/ITSService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseReferrerAssignedUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseReferrerAssignedUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseReferrerAssignedUserID {
            get {
                return this.CaseReferrerAssignedUserIDField;
            }
            set {
                if ((this.CaseReferrerAssignedUserIDField.Equals(value) != true)) {
                    this.CaseReferrerAssignedUserIDField = value;
                    this.RaisePropertyChanged("CaseReferrerAssignedUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ITSService.CaseService.ICaseService")]
    public interface ICaseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/DeleteCaseReferrerAssignedUserByID", ReplyAction="http://tempuri.org/ICaseService/DeleteCaseReferrerAssignedUserByIDResponse")]
        int DeleteCaseReferrerAssignedUserByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetAllGips", ReplyAction="http://tempuri.org/ICaseService/GetAllGipsResponse")]
        ITSPublicApp.Web.ITSService.CaseService.Gip[] GetAllGips();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetAllTpds", ReplyAction="http://tempuri.org/ICaseService/GetAllTpdsResponse")]
        ITSPublicApp.Web.ITSService.CaseService.Tpd[] GetAllTpds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetAllIips", ReplyAction="http://tempuri.org/ICaseService/GetAllIipsResponse")]
        ITSPublicApp.Web.ITSService.CaseService.Iip[] GetAllIips();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetAllElRehabs", ReplyAction="http://tempuri.org/ICaseService/GetAllElRehabsResponse")]
        ITSPublicApp.Web.ITSService.CaseService.ElRehab[] GetAllElRehabs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetJobDemandByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetJobDemandByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.JobDemand GetJobDemandByCaseID(int _caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetDrugTestByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetDrugTestByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.DrugTest GetDrugTestByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddCase", ReplyAction="http://tempuri.org/ICaseService/AddCaseResponse")]
        int AddCase(ITSPublicApp.Web.ITSService.CaseService.Case @case);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.Case GetCaseByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseByPatientID", ReplyAction="http://tempuri.org/ICaseService/GetCaseByPatientIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.Case GetCaseByPatientID(int PatientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetEmploymentByEmploymentID", ReplyAction="http://tempuri.org/ICaseService/GetEmploymentByEmploymentIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.Employment GetEmploymentByEmploymentID(int EmploymentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetEmployeeDetailById", ReplyAction="http://tempuri.org/ICaseService/GetEmployeeDetailByIdResponse")]
        ITSPublicApp.Web.ITSService.CaseService.EmployeeDetail GetEmployeeDetailById(int EmpDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetPolicyByPolicyID", ReplyAction="http://tempuri.org/ICaseService/GetPolicyByPolicyIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.Policie GetPolicyByPolicyID(int _policyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseByLikeCaseNumber", ReplyAction="http://tempuri.org/ICaseService/GetCaseByLikeCaseNumberResponse")]
        ITSPublicApp.Web.ITSService.CaseService.Case[] GetCaseByLikeCaseNumber(string caseNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReferrerCasesByWorkflowID", ReplyAction="http://tempuri.org/ICaseService/GetReferrerCasesByWorkflowIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.Case[] GetReferrerCasesByWorkflowID(int workflowID, int referrerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetPolicyOpenDetailById", ReplyAction="http://tempuri.org/ICaseService/GetPolicyOpenDetailByIdResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PolicyOpenDetail GetPolicyOpenDetailById(int _ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddReferral", ReplyAction="http://tempuri.org/ICaseService/AddReferralResponse")]
        int AddReferral(ITSPublicApp.Web.ITSService.CaseService.Case caseObj, ITSPublicApp.Web.ITSService.CaseService.Patient patient, int userID, ITSPublicApp.Web.ITSService.CaseService.Solicitor solicitor, ITSPublicApp.Web.ITSService.CaseService.InjuredPartyRepresentative objInjuredPartyRepresentative, ITSPublicApp.Web.ITSService.CaseService.Employment objEmployment, ITSPublicApp.Web.ITSService.CaseService.Policie objPolicie, ITSPublicApp.Web.ITSService.CaseService.EmployeeDetail objDetail, ITSPublicApp.Web.ITSService.CaseService.PolicyOpenDetail policyOpenDetail, ITSPublicApp.Web.ITSService.CaseService.DrugTest objDrugTest, ITSPublicApp.Web.ITSService.CaseService.JobDemand objjobDemand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateReferral", ReplyAction="http://tempuri.org/ICaseService/UpdateReferralResponse")]
        int UpdateReferral(ITSPublicApp.Web.ITSService.CaseService.Case caseObj, ITSPublicApp.Web.ITSService.CaseService.Patient patient, int userID, ITSPublicApp.Web.ITSService.CaseService.Solicitor solicitor, ITSPublicApp.Web.ITSService.CaseService.InjuredPartyRepresentative objInjuredPartyRepresentative, ITSPublicApp.Web.ITSService.CaseService.Employment objEmployment, ITSPublicApp.Web.ITSService.CaseService.Policie objPolicie, ITSPublicApp.Web.ITSService.CaseService.EmployeeDetail objDetail, ITSPublicApp.Web.ITSService.CaseService.PolicyOpenDetail policyOpenDetail, ITSPublicApp.Web.ITSService.CaseService.DrugTest objDrugTest, ITSPublicApp.Web.ITSService.CaseService.JobDemand objjobDemand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddCaseContact", ReplyAction="http://tempuri.org/ICaseService/AddCaseContactResponse")]
        int AddCaseContact(ITSPublicApp.Web.ITSService.CaseService.CaseContact caseContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseContactsByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseContactsByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseContact[] GetCaseContactsByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseContactByCaseID", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseContactByCaseIDResponse")]
        int UpdateCaseContactByCaseID(ITSPublicApp.Web.ITSService.CaseService.CaseContact caseContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/DeleteCaseContactByID", ReplyAction="http://tempuri.org/ICaseService/DeleteCaseContactByIDResponse")]
        void DeleteCaseContactByID(int _contactCaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCasesByWorkFlowID", ReplyAction="http://tempuri.org/ICaseService/GetCasesByWorkFlowIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.Case[] GetCasesByWorkFlowID(int workflowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReferrerAuthorisationsByReferrerID", ReplyAction="http://tempuri.org/ICaseService/GetReferrerAuthorisationsByReferrerIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedReferrerAuthorisations GetReferrerAuthorisationsByReferrerID(int referrerID, int UserID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseCounts", ReplyAction="http://tempuri.org/ICaseService/GetCaseCountsResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseWorkflowCount[] GetCaseCounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseCountByTreatmentCategoryID", ReplyAction="http://tempuri.org/ICaseService/GetCaseCountByTreatmentCategoryIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseWorkflowCount[] GetCaseCountByTreatmentCategoryID(int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseSupplier", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseSupplierResponse")]
        int UpdateCaseSupplier(int caseID, int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddCaseAppointmentDate", ReplyAction="http://tempuri.org/ICaseService/AddCaseAppointmentDateResponse")]
        int AddCaseAppointmentDate(ITSPublicApp.Web.ITSService.CaseService.CaseAppointmentDate caseAppointmentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseAppointmentDate", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseAppointmentDateResponse")]
        int UpdateCaseAppointmentDate(ITSPublicApp.Web.ITSService.CaseService.CaseAppointmentDate caseAppointmentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseAppointmentDateByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseAppointmentDateByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseAppointmentDate GetCaseAppointmentDateByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddPatientContactAttempt", ReplyAction="http://tempuri.org/ICaseService/AddPatientContactAttemptResponse")]
        int AddPatientContactAttempt(ITSPublicApp.Web.ITSService.CaseService.CasePatientContactAttempt casePatientContactAttempt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/DeletePatientContactAttempt", ReplyAction="http://tempuri.org/ICaseService/DeletePatientContactAttemptResponse")]
        int DeletePatientContactAttempt(int CasePatientContactAttemptID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetPatientContactAttemptsByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetPatientContactAttemptsByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CasePatientContactAttempt[] GetPatientContactAttemptsByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReferralCases", ReplyAction="http://tempuri.org/ICaseService/GetReferralCasesResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetReferralCases(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReferralCasesByTreatmentCategoryID", ReplyAction="http://tempuri.org/ICaseService/GetReferralCasesByTreatmentCategoryIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetReferralCasesByTreatmentCategoryID(int treatmentCategoryID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetInitialAssessmentQACaseWorkflowPatientProjects" +
            "", ReplyAction="http://tempuri.org/ICaseService/GetInitialAssessmentQACaseWorkflowPatientProjects" +
            "Response")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetInitialAssessmentQACaseWorkflowPatientProjects(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetInitialAssessmentQACaseWorkflowPatientProjects" +
            "ByTreatmentCategoryID", ReplyAction="http://tempuri.org/ICaseService/GetInitialAssessmentQACaseWorkflowPatientProjects" +
            "ByTreatmentCategoryIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetInitialAssessmentQACaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetAuthorisationCaseWorkflowPatientProjects", ReplyAction="http://tempuri.org/ICaseService/GetAuthorisationCaseWorkflowPatientProjectsRespon" +
            "se")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetAuthorisationCaseWorkflowPatientProjects(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetAuthorisationCaseWorkflowPatientProjectsByTrea" +
            "tmentCategoryID", ReplyAction="http://tempuri.org/ICaseService/GetAuthorisationCaseWorkflowPatientProjectsByTrea" +
            "tmentCategoryIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetAuthorisationCaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReviewAssessmentQACaseWorkflowPatientProjects", ReplyAction="http://tempuri.org/ICaseService/GetReviewAssessmentQACaseWorkflowPatientProjectsR" +
            "esponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetReviewAssessmentQACaseWorkflowPatientProjects(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReviewAssessmentQACaseWorkflowPatientProjectsB" +
            "yTreatmentCategoryID", ReplyAction="http://tempuri.org/ICaseService/GetReviewAssessmentQACaseWorkflowPatientProjectsB" +
            "yTreatmentCategoryIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetReviewAssessmentQACaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseStoppedCaseWorkflowPatientProjects", ReplyAction="http://tempuri.org/ICaseService/GetCaseStoppedCaseWorkflowPatientProjectsResponse" +
            "")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetCaseStoppedCaseWorkflowPatientProjects(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseStoppedCaseWorkflowPatientProjectsByTreatm" +
            "entCategoryID", ReplyAction="http://tempuri.org/ICaseService/GetCaseStoppedCaseWorkflowPatientProjectsByTreatm" +
            "entCategoryIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetCaseStoppedCaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetFinalAssessmentCaseWorkflowPatientProjects", ReplyAction="http://tempuri.org/ICaseService/GetFinalAssessmentCaseWorkflowPatientProjectsResp" +
            "onse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetFinalAssessmentCaseWorkflowPatientProjects(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetFinalAssessmentCaseWorkflowPatientProjectsByTr" +
            "eatmentCategoryID", ReplyAction="http://tempuri.org/ICaseService/GetFinalAssessmentCaseWorkflowPatientProjectsByTr" +
            "eatmentCategoryIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetFinalAssessmentCaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetTriageAssessmentQACaseWorkflowPatientProjects", ReplyAction="http://tempuri.org/ICaseService/GetTriageAssessmentQACaseWorkflowPatientProjectsR" +
            "esponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetTriageAssessmentQACaseWorkflowPatientProjects(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetTriageAssessmentQACaseWorkflowPatientProjectsB" +
            "yTreatmentCategoryID", ReplyAction="http://tempuri.org/ICaseService/GetTriageAssessmentQACaseWorkflowPatientProjectsB" +
            "yTreatmentCategoryIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetTriageAssessmentQACaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseWorkFlow", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseWorkFlowResponse")]
        bool UpdateCaseWorkFlow(int caseID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseWorkFlowStoppedCase", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseWorkFlowStoppedCaseResponse")]
        bool UpdateCaseWorkFlowStoppedCase(int caseID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetInitialAssessmentCasePatientSupplierPractition" +
            "erByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetInitialAssessmentCasePatientSupplierPractition" +
            "erByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CasePatientSupplierPractitioner GetInitialAssessmentCasePatientSupplierPractitionerByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetBookIACasePatientByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetBookIACasePatientByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CasePatient GetBookIACasePatientByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddBookIA", ReplyAction="http://tempuri.org/ICaseService/AddBookIAResponse")]
        int AddBookIA(int caseID, System.DateTime patientContactDate, System.Nullable<int> supplierAssignedUser, ITSPublicApp.Web.ITSService.CaseService.CaseAppointmentDate caseAppointmentDate, string InnovateNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCasePatientReferrerSupplierByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCasePatientReferrerSupplierByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CasePatientReferrerSupplier GetCasePatientReferrerSupplierByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseSearchLikePatientName", ReplyAction="http://tempuri.org/ICaseService/GetCaseSearchLikePatientNameResponse")]
        ITSPublicApp.Web.ITSService.CaseService.ReferrerSupplierCases[] GetCaseSearchLikePatientName(string patientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseSearchLikeReferrerReferenceNumber", ReplyAction="http://tempuri.org/ICaseService/GetCaseSearchLikeReferrerReferenceNumberResponse")]
        ITSPublicApp.Web.ITSService.CaseService.ReferrerSupplierCases[] GetCaseSearchLikeReferrerReferenceNumber(string referrerReferenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddCaseDocument", ReplyAction="http://tempuri.org/ICaseService/AddCaseDocumentResponse")]
        int AddCaseDocument(ITSPublicApp.Web.ITSService.CaseService.CaseDocument caseDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetTriageCaseDocumentByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetTriageCaseDocumentByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseDocument GetTriageCaseDocumentByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReferralCaseDocumentByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetReferralCaseDocumentByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseDocument GetReferralCaseDocumentByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateTriageCaseDocumentByCaseID", ReplyAction="http://tempuri.org/ICaseService/UpdateTriageCaseDocumentByCaseIDResponse")]
        int UpdateTriageCaseDocumentByCaseID(ITSPublicApp.Web.ITSService.CaseService.CaseDocument caseDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCasePatientLikeCaseNumber", ReplyAction="http://tempuri.org/ICaseService/GetCasePatientLikeCaseNumberResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CasePatientSearch[] GetCasePatientLikeCaseNumber(string caseNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseIsTreatmentRequired", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseIsTreatmentRequiredResponse")]
        int UpdateCaseIsTreatmentRequired(int caseID, bool isTreatmentRequired);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetAllCaseStopReason", ReplyAction="http://tempuri.org/ICaseService/GetAllCaseStopReasonResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseStopReason[] GetAllCaseStopReason();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseCompletedCaseWorkflowPatientProjects", ReplyAction="http://tempuri.org/ICaseService/GetCaseCompletedCaseWorkflowPatientProjectsRespon" +
            "se")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetCaseCompletedCaseWorkflowPatientProjects(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseCompletedCaseWorkflowPatientProjectsByTrea" +
            "tmentCategoryID", ReplyAction="http://tempuri.org/ICaseService/GetCaseCompletedCaseWorkflowPatientProjectsByTrea" +
            "tmentCategoryIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetCaseCompletedCaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddCaseNote", ReplyAction="http://tempuri.org/ICaseService/AddCaseNoteResponse")]
        int AddCaseNote(ITSPublicApp.Web.ITSService.CaseService.CaseNote caseNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseNotesByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseNotesByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseNoteUser[] GetCaseNotesByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikePatientName", ReplyAction="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikePatientNameRes" +
            "ponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikePatientName(string additionalParam, string patientName, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikeReferrerName", ReplyAction="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikeReferrerNameRe" +
            "sponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikeReferrerName(string additionalParam, string referrerName, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikeCaseNumber", ReplyAction="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikeCaseNumberResp" +
            "onse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikeCaseNumber(string additionalParam, string caseNumber, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikeCaseReferrerRe" +
            "ferenceNumber", ReplyAction="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikeCaseReferrerRe" +
            "ferenceNumberResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikeCaseReferrerReferenceNumber(string additionalParam, string referrerReferenceNumber, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikeTreatmentCateg" +
            "oryName", ReplyAction="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikeTreatmentCateg" +
            "oryNameResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikeTreatmentCategoryName(string additionalParam, string treatmentCategoryName, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikeTreatmentTypeN" +
            "ame", ReplyAction="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikeTreatmentTypeN" +
            "ameResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikeTreatmentTypeName(string additionalParam, string treatmentTypeName, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikePostCode", ReplyAction="http://tempuri.org/ICaseService/GetCasePatientTreatmentWorkflowLikePostCodeRespon" +
            "se")]
        ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikePostCode(string additionalParam, string postCode, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseHistoriesByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseHistoriesByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseHistoryUser[] GetCaseHistoriesByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseBespokeServicePricingForInvoice", ReplyAction="http://tempuri.org/ICaseService/GetCaseBespokeServicePricingForInvoiceResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseBespokeServicePricingType[] GetCaseBespokeServicePricingForInvoice(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseInvoiceDate", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseInvoiceDateResponse")]
        int UpdateCaseInvoiceDate(System.DateTime invoiceDate, int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCasePatientReferrerSupplierWorkflowByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCasePatientReferrerSupplierWorkflowByCaseIDRes" +
            "ponse")]
        ITSPublicApp.Web.ITSService.CaseService.CasePatientReferrerSupplierWorkflow GetCasePatientReferrerSupplierWorkflowByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCasePatientReferrerByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCasePatientReferrerByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CasePatientReferrer GetCasePatientReferrerByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetIntialAssessmentReportDetailsByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetIntialAssessmentReportDetailsByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.IntialAssessmentReportDetail GetIntialAssessmentReportDetailsByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetInitialReviewAssessmentByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetInitialReviewAssessmentByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.IntialAssessmentReportDetail GetInitialReviewAssessmentByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetEvaluateDelegatedAuthorisationCost", ReplyAction="http://tempuri.org/ICaseService/GetEvaluateDelegatedAuthorisationCostResponse")]
        ITSPublicApp.Web.ITSService.CaseService.EvaluateDelegatedAuthorisationCost GetEvaluateDelegatedAuthorisationCost(int caseID, int assessmentTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseDocumentUserByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseDocumentUserByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseDocumentUser[] GetCaseDocumentUserByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseDocumentForSupplierUserByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseDocumentForSupplierUserByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseDocumentUser[] GetCaseDocumentForSupplierUserByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseDocumentForReferrerUserByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseDocumentForReferrerUserByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseDocumentUser[] GetCaseDocumentForReferrerUserByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseTreatmentPricingsForInvoice", ReplyAction="http://tempuri.org/ICaseService/GetCaseTreatmentPricingsForInvoiceResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricingType[] GetCaseTreatmentPricingsForInvoice(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddCaseTreatmentPricing", ReplyAction="http://tempuri.org/ICaseService/AddCaseTreatmentPricingResponse")]
        int AddCaseTreatmentPricing(ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricing[] caseTreatmentPricings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseTreatmentPricing", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseTreatmentPricingResponse")]
        int UpdateCaseTreatmentPricing(ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricing[] caseTreatmentPricings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseTreatmentPricingByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseTreatmentPricingByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricing[] GetCaseTreatmentPricingByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCheckCaseTreatmentPricingByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCheckCaseTreatmentPricingByCaseIDResponse")]
        int GetCheckCaseTreatmentPricingByCaseID(int caseID, int AssessmentServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseTreatmentPricingByCaseIDAndComplete", ReplyAction="http://tempuri.org/ICaseService/GetCaseTreatmentPricingByCaseIDAndCompleteRespons" +
            "e")]
        ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricingType[] GetCaseTreatmentPricingByCaseIDAndComplete(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseTreatmentPricingByCaseIDAndInComplete", ReplyAction="http://tempuri.org/ICaseService/GetCaseTreatmentPricingByCaseIDAndInCompleteRespo" +
            "nse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricingType[] GetCaseTreatmentPricingByCaseIDAndInComplete(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseTreatmentPricingByCaseTreatmentPricingI" +
            "D", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseTreatmentPricingByCaseTreatmentPricingI" +
            "DResponse")]
        int UpdateCaseTreatmentPricingByCaseTreatmentPricingID(ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricing caseTreatmentPricing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseTreatmentPricingPriceByReferrerPricingI" +
            "D", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseTreatmentPricingPriceByReferrerPricingI" +
            "DResponse")]
        int UpdateCaseTreatmentPricingPriceByReferrerPricingID(ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricingCaseSearch caseTreatmentPricing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetTreatmentReferrerSupplierPricing", ReplyAction="http://tempuri.org/ICaseService/GetTreatmentReferrerSupplierPricingResponse")]
        ITSPublicApp.Web.ITSService.CaseService.TreatmentReferrerSupplierPricing[] GetTreatmentReferrerSupplierPricing(int supplierID, int referrerProjectTreatmentID, int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetTreatmentReferrerSupplierPricingQA", ReplyAction="http://tempuri.org/ICaseService/GetTreatmentReferrerSupplierPricingQAResponse")]
        ITSPublicApp.Web.ITSService.CaseService.TreatmentReferrerSupplierPricing[] GetTreatmentReferrerSupplierPricingQA(int supplierID, int referrerProjectTreatmentID, int treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/DeleteCaseTreatmentPricingByCaseTreatmentPricingI" +
            "D", ReplyAction="http://tempuri.org/ICaseService/DeleteCaseTreatmentPricingByCaseTreatmentPricingI" +
            "DResponse")]
        int DeleteCaseTreatmentPricingByCaseTreatmentPricingID(int caseTreatmentPricingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseTreatmentReferrerPriceByCaseTreatmentPr" +
            "icingID", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseTreatmentReferrerPriceByCaseTreatmentPr" +
            "icingIDResponse")]
        int UpdateCaseTreatmentReferrerPriceByCaseTreatmentPricingID(int caseTreatmentPricingID, decimal referrerPrice, int ReferrerPricingID, System.DateTime DateOfService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/DeleteCaseTreatmentPricingByCaseIDCaseStopped", ReplyAction="http://tempuri.org/ICaseService/DeleteCaseTreatmentPricingByCaseIDCaseStoppedResp" +
            "onse")]
        int DeleteCaseTreatmentPricingByCaseIDCaseStopped(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseTreatmentPricingAuthorisationStatusByCa" +
            "seID", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseTreatmentPricingAuthorisationStatusByCa" +
            "seIDResponse")]
        int UpdateCaseTreatmentPricingAuthorisationStatusByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetEPNATreatmentSessionDetail", ReplyAction="http://tempuri.org/ICaseService/GetEPNATreatmentSessionDetailResponse")]
        ITSPublicApp.Web.ITSService.CaseService.EPNATreatmentSession GetEPNATreatmentSessionDetail(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddCaseBespokeServicePricing", ReplyAction="http://tempuri.org/ICaseService/AddCaseBespokeServicePricingResponse")]
        int AddCaseBespokeServicePricing(ITSPublicApp.Web.ITSService.CaseService.CaseBespokeServicePricing[] caseBespokeServicePricings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseBespokeServicePricingByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseBespokeServicePricingByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseBespokeServicePricing[] GetCaseBespokeServicePricingByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseBespokeServicePricingByCaseBespokeServi" +
            "ceID", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseBespokeServicePricingByCaseBespokeServi" +
            "ceIDResponse")]
        int UpdateCaseBespokeServicePricingByCaseBespokeServiceID(ITSPublicApp.Web.ITSService.CaseService.CaseBespokeServicePricing caseBespokeServicePricing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/DeleteCaseBespokeServiceByCaseBespokeServiceID", ReplyAction="http://tempuri.org/ICaseService/DeleteCaseBespokeServiceByCaseBespokeServiceIDRes" +
            "ponse")]
        int DeleteCaseBespokeServiceByCaseBespokeServiceID(int caseBespokeServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseBespokeReferrerPriceByCaseBespokeServic" +
            "eID", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseBespokeReferrerPriceByCaseBespokeServic" +
            "eIDResponse")]
        int UpdateCaseBespokeReferrerPriceByCaseBespokeServiceID(int caseBespokeServiceID, decimal referrerPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseBespokeServicePricingByCaseIDAndComplete", ReplyAction="http://tempuri.org/ICaseService/GetCaseBespokeServicePricingByCaseIDAndCompleteRe" +
            "sponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseBespokeServicePricingType[] GetCaseBespokeServicePricingByCaseIDAndComplete(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseBespokeServicePricingByCaseIDAndInComplete" +
            "", ReplyAction="http://tempuri.org/ICaseService/GetCaseBespokeServicePricingByCaseIDAndInComplete" +
            "Response")]
        ITSPublicApp.Web.ITSService.CaseService.CaseBespokeServicePricingType[] GetCaseBespokeServicePricingByCaseIDAndInComplete(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddCaseCommunicationHistory", ReplyAction="http://tempuri.org/ICaseService/AddCaseCommunicationHistoryResponse")]
        int AddCaseCommunicationHistory(ITSPublicApp.Web.ITSService.CaseService.CaseCommunicationHistory caseCommunicationHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseCommunicationHistoriesByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseCommunicationHistoriesByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseCommunicationHistoryUser[] GetCaseCommunicationHistoriesByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReferrerSupplierCaseLikePatientNameAndReferrer" +
            "ID", ReplyAction="http://tempuri.org/ICaseService/GetReferrerSupplierCaseLikePatientNameAndReferrer" +
            "IDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedReferrerSupplierCaseSearch GetReferrerSupplierCaseLikePatientNameAndReferrerID(string additionalParam, string patientName, int referrerID, int userID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReferrerSupplierCaseLikePatientNameAndSupplier" +
            "ID", ReplyAction="http://tempuri.org/ICaseService/GetReferrerSupplierCaseLikePatientNameAndSupplier" +
            "IDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedReferrerSupplierCaseSearch GetReferrerSupplierCaseLikePatientNameAndSupplierID(string patientName, int supplierID, int userID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReferrerSupplierCaseLikeReferrerReferenceNumbe" +
            "rAndReferrerID", ReplyAction="http://tempuri.org/ICaseService/GetReferrerSupplierCaseLikeReferrerReferenceNumbe" +
            "rAndReferrerIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedReferrerSupplierCaseSearch GetReferrerSupplierCaseLikeReferrerReferenceNumberAndReferrerID(string additionalParam, string referrerReferenceNumber, int referrerID, int userID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReferrerSupplierCaseLikeCaseNumberAndSupplierI" +
            "D", ReplyAction="http://tempuri.org/ICaseService/GetReferrerSupplierCaseLikeCaseNumberAndSupplierI" +
            "DResponse")]
        ITSPublicApp.Web.ITSService.CaseService.PagedReferrerSupplierCaseSearch GetReferrerSupplierCaseLikeCaseNumberAndSupplierID(string caseNumber, int supplierID, int userID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReferrerAndSupplierPricingVat", ReplyAction="http://tempuri.org/ICaseService/GetReferrerAndSupplierPricingVatResponse")]
        ITSPublicApp.Web.ITSService.CaseService.ReferrerAndSupplierPricing GetReferrerAndSupplierPricingVat(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReferrerAndSupplierPricingTriageAssessment", ReplyAction="http://tempuri.org/ICaseService/GetReferrerAndSupplierPricingTriageAssessmentResp" +
            "onse")]
        ITSPublicApp.Web.ITSService.CaseService.ReferrerAndSupplierPricing GetReferrerAndSupplierPricingTriageAssessment(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReferrerAndSupplierPricing", ReplyAction="http://tempuri.org/ICaseService/GetReferrerAndSupplierPricingResponse")]
        ITSPublicApp.Web.ITSService.CaseService.ReferrerAndSupplierPricing[] GetReferrerAndSupplierPricing(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddCaseVAT", ReplyAction="http://tempuri.org/ICaseService/AddCaseVATResponse")]
        int AddCaseVAT(ITSPublicApp.Web.ITSService.CaseService.CaseVAT caseVAT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseVATByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseVATByCaseIDResponse")]
        decimal GetCaseVATByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseTreatmentPricingPriceByCaseTreatmentPri" +
            "cingID", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseTreatmentPricingPriceByCaseTreatmentPri" +
            "cingIDResponse")]
        int UpdateCaseTreatmentPricingPriceByCaseTreatmentPricingID(ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricing caseTreatmentPricing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseWorkflowCustomByCaseID", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseWorkflowCustomByCaseIDResponse")]
        bool UpdateCaseWorkflowCustomByCaseID(int caseID, int userID, int workflowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetReferrerProjectTreatmentDocumentSetup", ReplyAction="http://tempuri.org/ICaseService/GetReferrerProjectTreatmentDocumentSetupResponse")]
        int GetReferrerProjectTreatmentDocumentSetup(int caseID, int AssessmentServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseAssessmentCustomsByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseAssessmentCustomsByCaseIDResponse")]
        int GetCaseAssessmentCustomsByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseTreatmentPricingByCaseIDCaseSearch", ReplyAction="http://tempuri.org/ICaseService/GetCaseTreatmentPricingByCaseIDCaseSearchResponse" +
            "")]
        ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricingType[] GetCaseTreatmentPricingByCaseIDCaseSearch(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddCaseTreatmentPricingCaseSearch", ReplyAction="http://tempuri.org/ICaseService/AddCaseTreatmentPricingCaseSearchResponse")]
        int AddCaseTreatmentPricingCaseSearch(ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricing caseTreatmentPricings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetFinalUploadByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetFinalUploadByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseDocument GetFinalUploadByCaseID(int caseID, int documentTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseNoteByCaseIDAndWorkflowID", ReplyAction="http://tempuri.org/ICaseService/GetCaseNoteByCaseIDAndWorkflowIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseNote GetCaseNoteByCaseIDAndWorkflowID(int caseID, int workflowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetTreatmentSessionByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetTreatmentSessionByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.TreatmentSessionByCaseID GetTreatmentSessionByCaseID(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/UpdateCaseAndReferrerDocumentByCaseID", ReplyAction="http://tempuri.org/ICaseService/UpdateCaseAndReferrerDocumentByCaseIDResponse")]
        int UpdateCaseAndReferrerDocumentByCaseID(ITSPublicApp.Web.ITSService.CaseService.CaseDocumentUser caseDocumnetUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetUnsuccessfulContactDate", ReplyAction="http://tempuri.org/ICaseService/GetUnsuccessfulContactDateResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CasePatientContactAttempt[] GetUnsuccessfulContactDate(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetPatientContactDate", ReplyAction="http://tempuri.org/ICaseService/GetPatientContactDateResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CasePatientContactAttempt[] GetPatientContactDate(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetNotificationBubbleCountBySupplierID", ReplyAction="http://tempuri.org/ICaseService/GetNotificationBubbleCountBySupplierIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.NotificationBubble GetNotificationBubbleCountBySupplierID(int _supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseReferrerAssignedUsersByCaseID", ReplyAction="http://tempuri.org/ICaseService/GetCaseReferrerAssignedUsersByCaseIDResponse")]
        ITSPublicApp.Web.ITSService.CaseService.CaseReferrerAssignedUser[] GetCaseReferrerAssignedUsersByCaseID(int CaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddCaseReferrerAssignedUser", ReplyAction="http://tempuri.org/ICaseService/AddCaseReferrerAssignedUserResponse")]
        int AddCaseReferrerAssignedUser(ITSPublicApp.Web.ITSService.CaseService.CaseReferrerAssignedUser _CaseReferrerAssignedUser);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICaseServiceChannel : ITSPublicApp.Web.ITSService.CaseService.ICaseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CaseServiceClient : System.ServiceModel.ClientBase<ITSPublicApp.Web.ITSService.CaseService.ICaseService>, ITSPublicApp.Web.ITSService.CaseService.ICaseService {
        
        public CaseServiceClient() {
        }
        
        public CaseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CaseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CaseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CaseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int DeleteCaseReferrerAssignedUserByID(int id) {
            return base.Channel.DeleteCaseReferrerAssignedUserByID(id);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.Gip[] GetAllGips() {
            return base.Channel.GetAllGips();
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.Tpd[] GetAllTpds() {
            return base.Channel.GetAllTpds();
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.Iip[] GetAllIips() {
            return base.Channel.GetAllIips();
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.ElRehab[] GetAllElRehabs() {
            return base.Channel.GetAllElRehabs();
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.JobDemand GetJobDemandByCaseID(int _caseID) {
            return base.Channel.GetJobDemandByCaseID(_caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.DrugTest GetDrugTestByCaseID(int caseID) {
            return base.Channel.GetDrugTestByCaseID(caseID);
        }
        
        public int AddCase(ITSPublicApp.Web.ITSService.CaseService.Case @case) {
            return base.Channel.AddCase(@case);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.Case GetCaseByCaseID(int caseID) {
            return base.Channel.GetCaseByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.Case GetCaseByPatientID(int PatientID) {
            return base.Channel.GetCaseByPatientID(PatientID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.Employment GetEmploymentByEmploymentID(int EmploymentID) {
            return base.Channel.GetEmploymentByEmploymentID(EmploymentID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.EmployeeDetail GetEmployeeDetailById(int EmpDetailID) {
            return base.Channel.GetEmployeeDetailById(EmpDetailID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.Policie GetPolicyByPolicyID(int _policyID) {
            return base.Channel.GetPolicyByPolicyID(_policyID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.Case[] GetCaseByLikeCaseNumber(string caseNumber) {
            return base.Channel.GetCaseByLikeCaseNumber(caseNumber);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.Case[] GetReferrerCasesByWorkflowID(int workflowID, int referrerID) {
            return base.Channel.GetReferrerCasesByWorkflowID(workflowID, referrerID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PolicyOpenDetail GetPolicyOpenDetailById(int _ID) {
            return base.Channel.GetPolicyOpenDetailById(_ID);
        }
        
        public int AddReferral(ITSPublicApp.Web.ITSService.CaseService.Case caseObj, ITSPublicApp.Web.ITSService.CaseService.Patient patient, int userID, ITSPublicApp.Web.ITSService.CaseService.Solicitor solicitor, ITSPublicApp.Web.ITSService.CaseService.InjuredPartyRepresentative objInjuredPartyRepresentative, ITSPublicApp.Web.ITSService.CaseService.Employment objEmployment, ITSPublicApp.Web.ITSService.CaseService.Policie objPolicie, ITSPublicApp.Web.ITSService.CaseService.EmployeeDetail objDetail, ITSPublicApp.Web.ITSService.CaseService.PolicyOpenDetail policyOpenDetail, ITSPublicApp.Web.ITSService.CaseService.DrugTest objDrugTest, ITSPublicApp.Web.ITSService.CaseService.JobDemand objjobDemand) {
            return base.Channel.AddReferral(caseObj, patient, userID, solicitor, objInjuredPartyRepresentative, objEmployment, objPolicie, objDetail, policyOpenDetail, objDrugTest, objjobDemand);
        }
        
        public int UpdateReferral(ITSPublicApp.Web.ITSService.CaseService.Case caseObj, ITSPublicApp.Web.ITSService.CaseService.Patient patient, int userID, ITSPublicApp.Web.ITSService.CaseService.Solicitor solicitor, ITSPublicApp.Web.ITSService.CaseService.InjuredPartyRepresentative objInjuredPartyRepresentative, ITSPublicApp.Web.ITSService.CaseService.Employment objEmployment, ITSPublicApp.Web.ITSService.CaseService.Policie objPolicie, ITSPublicApp.Web.ITSService.CaseService.EmployeeDetail objDetail, ITSPublicApp.Web.ITSService.CaseService.PolicyOpenDetail policyOpenDetail, ITSPublicApp.Web.ITSService.CaseService.DrugTest objDrugTest, ITSPublicApp.Web.ITSService.CaseService.JobDemand objjobDemand) {
            return base.Channel.UpdateReferral(caseObj, patient, userID, solicitor, objInjuredPartyRepresentative, objEmployment, objPolicie, objDetail, policyOpenDetail, objDrugTest, objjobDemand);
        }
        
        public int AddCaseContact(ITSPublicApp.Web.ITSService.CaseService.CaseContact caseContact) {
            return base.Channel.AddCaseContact(caseContact);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseContact[] GetCaseContactsByCaseID(int caseID) {
            return base.Channel.GetCaseContactsByCaseID(caseID);
        }
        
        public int UpdateCaseContactByCaseID(ITSPublicApp.Web.ITSService.CaseService.CaseContact caseContact) {
            return base.Channel.UpdateCaseContactByCaseID(caseContact);
        }
        
        public void DeleteCaseContactByID(int _contactCaseID) {
            base.Channel.DeleteCaseContactByID(_contactCaseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.Case[] GetCasesByWorkFlowID(int workflowID) {
            return base.Channel.GetCasesByWorkFlowID(workflowID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedReferrerAuthorisations GetReferrerAuthorisationsByReferrerID(int referrerID, int UserID, int skip, int take) {
            return base.Channel.GetReferrerAuthorisationsByReferrerID(referrerID, UserID, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseWorkflowCount[] GetCaseCounts() {
            return base.Channel.GetCaseCounts();
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseWorkflowCount[] GetCaseCountByTreatmentCategoryID(int treatmentCategoryID) {
            return base.Channel.GetCaseCountByTreatmentCategoryID(treatmentCategoryID);
        }
        
        public int UpdateCaseSupplier(int caseID, int supplierID) {
            return base.Channel.UpdateCaseSupplier(caseID, supplierID);
        }
        
        public int AddCaseAppointmentDate(ITSPublicApp.Web.ITSService.CaseService.CaseAppointmentDate caseAppointmentDate) {
            return base.Channel.AddCaseAppointmentDate(caseAppointmentDate);
        }
        
        public int UpdateCaseAppointmentDate(ITSPublicApp.Web.ITSService.CaseService.CaseAppointmentDate caseAppointmentDate) {
            return base.Channel.UpdateCaseAppointmentDate(caseAppointmentDate);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseAppointmentDate GetCaseAppointmentDateByCaseID(int caseID) {
            return base.Channel.GetCaseAppointmentDateByCaseID(caseID);
        }
        
        public int AddPatientContactAttempt(ITSPublicApp.Web.ITSService.CaseService.CasePatientContactAttempt casePatientContactAttempt) {
            return base.Channel.AddPatientContactAttempt(casePatientContactAttempt);
        }
        
        public int DeletePatientContactAttempt(int CasePatientContactAttemptID) {
            return base.Channel.DeletePatientContactAttempt(CasePatientContactAttemptID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CasePatientContactAttempt[] GetPatientContactAttemptsByCaseID(int caseID) {
            return base.Channel.GetPatientContactAttemptsByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetReferralCases(int skip, int take) {
            return base.Channel.GetReferralCases(skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetReferralCasesByTreatmentCategoryID(int treatmentCategoryID, int skip, int take) {
            return base.Channel.GetReferralCasesByTreatmentCategoryID(treatmentCategoryID, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetInitialAssessmentQACaseWorkflowPatientProjects(int skip, int take) {
            return base.Channel.GetInitialAssessmentQACaseWorkflowPatientProjects(skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetInitialAssessmentQACaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take) {
            return base.Channel.GetInitialAssessmentQACaseWorkflowPatientProjectsByTreatmentCategoryID(treatmentCategoryID, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetAuthorisationCaseWorkflowPatientProjects(int skip, int take) {
            return base.Channel.GetAuthorisationCaseWorkflowPatientProjects(skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetAuthorisationCaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take) {
            return base.Channel.GetAuthorisationCaseWorkflowPatientProjectsByTreatmentCategoryID(treatmentCategoryID, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetReviewAssessmentQACaseWorkflowPatientProjects(int skip, int take) {
            return base.Channel.GetReviewAssessmentQACaseWorkflowPatientProjects(skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetReviewAssessmentQACaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take) {
            return base.Channel.GetReviewAssessmentQACaseWorkflowPatientProjectsByTreatmentCategoryID(treatmentCategoryID, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetCaseStoppedCaseWorkflowPatientProjects(int skip, int take) {
            return base.Channel.GetCaseStoppedCaseWorkflowPatientProjects(skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetCaseStoppedCaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take) {
            return base.Channel.GetCaseStoppedCaseWorkflowPatientProjectsByTreatmentCategoryID(treatmentCategoryID, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetFinalAssessmentCaseWorkflowPatientProjects(int skip, int take) {
            return base.Channel.GetFinalAssessmentCaseWorkflowPatientProjects(skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetFinalAssessmentCaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take) {
            return base.Channel.GetFinalAssessmentCaseWorkflowPatientProjectsByTreatmentCategoryID(treatmentCategoryID, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetTriageAssessmentQACaseWorkflowPatientProjects(int skip, int take) {
            return base.Channel.GetTriageAssessmentQACaseWorkflowPatientProjects(skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetTriageAssessmentQACaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take) {
            return base.Channel.GetTriageAssessmentQACaseWorkflowPatientProjectsByTreatmentCategoryID(treatmentCategoryID, skip, take);
        }
        
        public bool UpdateCaseWorkFlow(int caseID, int userID) {
            return base.Channel.UpdateCaseWorkFlow(caseID, userID);
        }
        
        public bool UpdateCaseWorkFlowStoppedCase(int caseID, int userID) {
            return base.Channel.UpdateCaseWorkFlowStoppedCase(caseID, userID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CasePatientSupplierPractitioner GetInitialAssessmentCasePatientSupplierPractitionerByCaseID(int caseID) {
            return base.Channel.GetInitialAssessmentCasePatientSupplierPractitionerByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CasePatient GetBookIACasePatientByCaseID(int caseID) {
            return base.Channel.GetBookIACasePatientByCaseID(caseID);
        }
        
        public int AddBookIA(int caseID, System.DateTime patientContactDate, System.Nullable<int> supplierAssignedUser, ITSPublicApp.Web.ITSService.CaseService.CaseAppointmentDate caseAppointmentDate, string InnovateNote) {
            return base.Channel.AddBookIA(caseID, patientContactDate, supplierAssignedUser, caseAppointmentDate, InnovateNote);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CasePatientReferrerSupplier GetCasePatientReferrerSupplierByCaseID(int caseID) {
            return base.Channel.GetCasePatientReferrerSupplierByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.ReferrerSupplierCases[] GetCaseSearchLikePatientName(string patientName) {
            return base.Channel.GetCaseSearchLikePatientName(patientName);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.ReferrerSupplierCases[] GetCaseSearchLikeReferrerReferenceNumber(string referrerReferenceNumber) {
            return base.Channel.GetCaseSearchLikeReferrerReferenceNumber(referrerReferenceNumber);
        }
        
        public int AddCaseDocument(ITSPublicApp.Web.ITSService.CaseService.CaseDocument caseDocument) {
            return base.Channel.AddCaseDocument(caseDocument);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseDocument GetTriageCaseDocumentByCaseID(int caseID) {
            return base.Channel.GetTriageCaseDocumentByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseDocument GetReferralCaseDocumentByCaseID(int caseID) {
            return base.Channel.GetReferralCaseDocumentByCaseID(caseID);
        }
        
        public int UpdateTriageCaseDocumentByCaseID(ITSPublicApp.Web.ITSService.CaseService.CaseDocument caseDocument) {
            return base.Channel.UpdateTriageCaseDocumentByCaseID(caseDocument);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CasePatientSearch[] GetCasePatientLikeCaseNumber(string caseNumber) {
            return base.Channel.GetCasePatientLikeCaseNumber(caseNumber);
        }
        
        public int UpdateCaseIsTreatmentRequired(int caseID, bool isTreatmentRequired) {
            return base.Channel.UpdateCaseIsTreatmentRequired(caseID, isTreatmentRequired);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseStopReason[] GetAllCaseStopReason() {
            return base.Channel.GetAllCaseStopReason();
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetCaseCompletedCaseWorkflowPatientProjects(int skip, int take) {
            return base.Channel.GetCaseCompletedCaseWorkflowPatientProjects(skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCaseWorkflowPatientReferrerProject GetCaseCompletedCaseWorkflowPatientProjectsByTreatmentCategoryID(int treatmentCategoryID, int skip, int take) {
            return base.Channel.GetCaseCompletedCaseWorkflowPatientProjectsByTreatmentCategoryID(treatmentCategoryID, skip, take);
        }
        
        public int AddCaseNote(ITSPublicApp.Web.ITSService.CaseService.CaseNote caseNote) {
            return base.Channel.AddCaseNote(caseNote);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseNoteUser[] GetCaseNotesByCaseID(int caseID) {
            return base.Channel.GetCaseNotesByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikePatientName(string additionalParam, string patientName, int skip, int take) {
            return base.Channel.GetCasePatientTreatmentWorkflowLikePatientName(additionalParam, patientName, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikeReferrerName(string additionalParam, string referrerName, int skip, int take) {
            return base.Channel.GetCasePatientTreatmentWorkflowLikeReferrerName(additionalParam, referrerName, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikeCaseNumber(string additionalParam, string caseNumber, int skip, int take) {
            return base.Channel.GetCasePatientTreatmentWorkflowLikeCaseNumber(additionalParam, caseNumber, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikeCaseReferrerReferenceNumber(string additionalParam, string referrerReferenceNumber, int skip, int take) {
            return base.Channel.GetCasePatientTreatmentWorkflowLikeCaseReferrerReferenceNumber(additionalParam, referrerReferenceNumber, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikeTreatmentCategoryName(string additionalParam, string treatmentCategoryName, int skip, int take) {
            return base.Channel.GetCasePatientTreatmentWorkflowLikeTreatmentCategoryName(additionalParam, treatmentCategoryName, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikeTreatmentTypeName(string additionalParam, string treatmentTypeName, int skip, int take) {
            return base.Channel.GetCasePatientTreatmentWorkflowLikeTreatmentTypeName(additionalParam, treatmentTypeName, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedCasePatientTreatmentWorkflow GetCasePatientTreatmentWorkflowLikePostCode(string additionalParam, string postCode, int skip, int take) {
            return base.Channel.GetCasePatientTreatmentWorkflowLikePostCode(additionalParam, postCode, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseHistoryUser[] GetCaseHistoriesByCaseID(int caseID) {
            return base.Channel.GetCaseHistoriesByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseBespokeServicePricingType[] GetCaseBespokeServicePricingForInvoice(int caseID) {
            return base.Channel.GetCaseBespokeServicePricingForInvoice(caseID);
        }
        
        public int UpdateCaseInvoiceDate(System.DateTime invoiceDate, int caseID) {
            return base.Channel.UpdateCaseInvoiceDate(invoiceDate, caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CasePatientReferrerSupplierWorkflow GetCasePatientReferrerSupplierWorkflowByCaseID(int caseID) {
            return base.Channel.GetCasePatientReferrerSupplierWorkflowByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CasePatientReferrer GetCasePatientReferrerByCaseID(int caseID) {
            return base.Channel.GetCasePatientReferrerByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.IntialAssessmentReportDetail GetIntialAssessmentReportDetailsByCaseID(int caseID) {
            return base.Channel.GetIntialAssessmentReportDetailsByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.IntialAssessmentReportDetail GetInitialReviewAssessmentByCaseID(int caseID) {
            return base.Channel.GetInitialReviewAssessmentByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.EvaluateDelegatedAuthorisationCost GetEvaluateDelegatedAuthorisationCost(int caseID, int assessmentTypeID) {
            return base.Channel.GetEvaluateDelegatedAuthorisationCost(caseID, assessmentTypeID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseDocumentUser[] GetCaseDocumentUserByCaseID(int caseID) {
            return base.Channel.GetCaseDocumentUserByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseDocumentUser[] GetCaseDocumentForSupplierUserByCaseID(int caseID) {
            return base.Channel.GetCaseDocumentForSupplierUserByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseDocumentUser[] GetCaseDocumentForReferrerUserByCaseID(int caseID) {
            return base.Channel.GetCaseDocumentForReferrerUserByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricingType[] GetCaseTreatmentPricingsForInvoice(int caseID) {
            return base.Channel.GetCaseTreatmentPricingsForInvoice(caseID);
        }
        
        public int AddCaseTreatmentPricing(ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricing[] caseTreatmentPricings) {
            return base.Channel.AddCaseTreatmentPricing(caseTreatmentPricings);
        }
        
        public int UpdateCaseTreatmentPricing(ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricing[] caseTreatmentPricings) {
            return base.Channel.UpdateCaseTreatmentPricing(caseTreatmentPricings);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricing[] GetCaseTreatmentPricingByCaseID(int caseID) {
            return base.Channel.GetCaseTreatmentPricingByCaseID(caseID);
        }
        
        public int GetCheckCaseTreatmentPricingByCaseID(int caseID, int AssessmentServiceID) {
            return base.Channel.GetCheckCaseTreatmentPricingByCaseID(caseID, AssessmentServiceID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricingType[] GetCaseTreatmentPricingByCaseIDAndComplete(int caseID) {
            return base.Channel.GetCaseTreatmentPricingByCaseIDAndComplete(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricingType[] GetCaseTreatmentPricingByCaseIDAndInComplete(int caseID) {
            return base.Channel.GetCaseTreatmentPricingByCaseIDAndInComplete(caseID);
        }
        
        public int UpdateCaseTreatmentPricingByCaseTreatmentPricingID(ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricing caseTreatmentPricing) {
            return base.Channel.UpdateCaseTreatmentPricingByCaseTreatmentPricingID(caseTreatmentPricing);
        }
        
        public int UpdateCaseTreatmentPricingPriceByReferrerPricingID(ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricingCaseSearch caseTreatmentPricing) {
            return base.Channel.UpdateCaseTreatmentPricingPriceByReferrerPricingID(caseTreatmentPricing);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.TreatmentReferrerSupplierPricing[] GetTreatmentReferrerSupplierPricing(int supplierID, int referrerProjectTreatmentID, int treatmentCategoryID) {
            return base.Channel.GetTreatmentReferrerSupplierPricing(supplierID, referrerProjectTreatmentID, treatmentCategoryID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.TreatmentReferrerSupplierPricing[] GetTreatmentReferrerSupplierPricingQA(int supplierID, int referrerProjectTreatmentID, int treatmentCategoryID) {
            return base.Channel.GetTreatmentReferrerSupplierPricingQA(supplierID, referrerProjectTreatmentID, treatmentCategoryID);
        }
        
        public int DeleteCaseTreatmentPricingByCaseTreatmentPricingID(int caseTreatmentPricingID) {
            return base.Channel.DeleteCaseTreatmentPricingByCaseTreatmentPricingID(caseTreatmentPricingID);
        }
        
        public int UpdateCaseTreatmentReferrerPriceByCaseTreatmentPricingID(int caseTreatmentPricingID, decimal referrerPrice, int ReferrerPricingID, System.DateTime DateOfService) {
            return base.Channel.UpdateCaseTreatmentReferrerPriceByCaseTreatmentPricingID(caseTreatmentPricingID, referrerPrice, ReferrerPricingID, DateOfService);
        }
        
        public int DeleteCaseTreatmentPricingByCaseIDCaseStopped(int caseID) {
            return base.Channel.DeleteCaseTreatmentPricingByCaseIDCaseStopped(caseID);
        }
        
        public int UpdateCaseTreatmentPricingAuthorisationStatusByCaseID(int caseID) {
            return base.Channel.UpdateCaseTreatmentPricingAuthorisationStatusByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.EPNATreatmentSession GetEPNATreatmentSessionDetail(int caseID) {
            return base.Channel.GetEPNATreatmentSessionDetail(caseID);
        }
        
        public int AddCaseBespokeServicePricing(ITSPublicApp.Web.ITSService.CaseService.CaseBespokeServicePricing[] caseBespokeServicePricings) {
            return base.Channel.AddCaseBespokeServicePricing(caseBespokeServicePricings);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseBespokeServicePricing[] GetCaseBespokeServicePricingByCaseID(int caseID) {
            return base.Channel.GetCaseBespokeServicePricingByCaseID(caseID);
        }
        
        public int UpdateCaseBespokeServicePricingByCaseBespokeServiceID(ITSPublicApp.Web.ITSService.CaseService.CaseBespokeServicePricing caseBespokeServicePricing) {
            return base.Channel.UpdateCaseBespokeServicePricingByCaseBespokeServiceID(caseBespokeServicePricing);
        }
        
        public int DeleteCaseBespokeServiceByCaseBespokeServiceID(int caseBespokeServiceID) {
            return base.Channel.DeleteCaseBespokeServiceByCaseBespokeServiceID(caseBespokeServiceID);
        }
        
        public int UpdateCaseBespokeReferrerPriceByCaseBespokeServiceID(int caseBespokeServiceID, decimal referrerPrice) {
            return base.Channel.UpdateCaseBespokeReferrerPriceByCaseBespokeServiceID(caseBespokeServiceID, referrerPrice);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseBespokeServicePricingType[] GetCaseBespokeServicePricingByCaseIDAndComplete(int caseID) {
            return base.Channel.GetCaseBespokeServicePricingByCaseIDAndComplete(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseBespokeServicePricingType[] GetCaseBespokeServicePricingByCaseIDAndInComplete(int caseID) {
            return base.Channel.GetCaseBespokeServicePricingByCaseIDAndInComplete(caseID);
        }
        
        public int AddCaseCommunicationHistory(ITSPublicApp.Web.ITSService.CaseService.CaseCommunicationHistory caseCommunicationHistory) {
            return base.Channel.AddCaseCommunicationHistory(caseCommunicationHistory);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseCommunicationHistoryUser[] GetCaseCommunicationHistoriesByCaseID(int caseID) {
            return base.Channel.GetCaseCommunicationHistoriesByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedReferrerSupplierCaseSearch GetReferrerSupplierCaseLikePatientNameAndReferrerID(string additionalParam, string patientName, int referrerID, int userID, int skip, int take) {
            return base.Channel.GetReferrerSupplierCaseLikePatientNameAndReferrerID(additionalParam, patientName, referrerID, userID, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedReferrerSupplierCaseSearch GetReferrerSupplierCaseLikePatientNameAndSupplierID(string patientName, int supplierID, int userID, int skip, int take) {
            return base.Channel.GetReferrerSupplierCaseLikePatientNameAndSupplierID(patientName, supplierID, userID, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedReferrerSupplierCaseSearch GetReferrerSupplierCaseLikeReferrerReferenceNumberAndReferrerID(string additionalParam, string referrerReferenceNumber, int referrerID, int userID, int skip, int take) {
            return base.Channel.GetReferrerSupplierCaseLikeReferrerReferenceNumberAndReferrerID(additionalParam, referrerReferenceNumber, referrerID, userID, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.PagedReferrerSupplierCaseSearch GetReferrerSupplierCaseLikeCaseNumberAndSupplierID(string caseNumber, int supplierID, int userID, int skip, int take) {
            return base.Channel.GetReferrerSupplierCaseLikeCaseNumberAndSupplierID(caseNumber, supplierID, userID, skip, take);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.ReferrerAndSupplierPricing GetReferrerAndSupplierPricingVat(int caseID) {
            return base.Channel.GetReferrerAndSupplierPricingVat(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.ReferrerAndSupplierPricing GetReferrerAndSupplierPricingTriageAssessment(int caseID) {
            return base.Channel.GetReferrerAndSupplierPricingTriageAssessment(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.ReferrerAndSupplierPricing[] GetReferrerAndSupplierPricing(int caseID) {
            return base.Channel.GetReferrerAndSupplierPricing(caseID);
        }
        
        public int AddCaseVAT(ITSPublicApp.Web.ITSService.CaseService.CaseVAT caseVAT) {
            return base.Channel.AddCaseVAT(caseVAT);
        }
        
        public decimal GetCaseVATByCaseID(int caseID) {
            return base.Channel.GetCaseVATByCaseID(caseID);
        }
        
        public int UpdateCaseTreatmentPricingPriceByCaseTreatmentPricingID(ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricing caseTreatmentPricing) {
            return base.Channel.UpdateCaseTreatmentPricingPriceByCaseTreatmentPricingID(caseTreatmentPricing);
        }
        
        public bool UpdateCaseWorkflowCustomByCaseID(int caseID, int userID, int workflowID) {
            return base.Channel.UpdateCaseWorkflowCustomByCaseID(caseID, userID, workflowID);
        }
        
        public int GetReferrerProjectTreatmentDocumentSetup(int caseID, int AssessmentServiceID) {
            return base.Channel.GetReferrerProjectTreatmentDocumentSetup(caseID, AssessmentServiceID);
        }
        
        public int GetCaseAssessmentCustomsByCaseID(int caseID) {
            return base.Channel.GetCaseAssessmentCustomsByCaseID(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricingType[] GetCaseTreatmentPricingByCaseIDCaseSearch(int caseID) {
            return base.Channel.GetCaseTreatmentPricingByCaseIDCaseSearch(caseID);
        }
        
        public int AddCaseTreatmentPricingCaseSearch(ITSPublicApp.Web.ITSService.CaseService.CaseTreatmentPricing caseTreatmentPricings) {
            return base.Channel.AddCaseTreatmentPricingCaseSearch(caseTreatmentPricings);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseDocument GetFinalUploadByCaseID(int caseID, int documentTypeID) {
            return base.Channel.GetFinalUploadByCaseID(caseID, documentTypeID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseNote GetCaseNoteByCaseIDAndWorkflowID(int caseID, int workflowID) {
            return base.Channel.GetCaseNoteByCaseIDAndWorkflowID(caseID, workflowID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.TreatmentSessionByCaseID GetTreatmentSessionByCaseID(int caseID) {
            return base.Channel.GetTreatmentSessionByCaseID(caseID);
        }
        
        public int UpdateCaseAndReferrerDocumentByCaseID(ITSPublicApp.Web.ITSService.CaseService.CaseDocumentUser caseDocumnetUser) {
            return base.Channel.UpdateCaseAndReferrerDocumentByCaseID(caseDocumnetUser);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CasePatientContactAttempt[] GetUnsuccessfulContactDate(int caseID) {
            return base.Channel.GetUnsuccessfulContactDate(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CasePatientContactAttempt[] GetPatientContactDate(int caseID) {
            return base.Channel.GetPatientContactDate(caseID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.NotificationBubble GetNotificationBubbleCountBySupplierID(int _supplierID) {
            return base.Channel.GetNotificationBubbleCountBySupplierID(_supplierID);
        }
        
        public ITSPublicApp.Web.ITSService.CaseService.CaseReferrerAssignedUser[] GetCaseReferrerAssignedUsersByCaseID(int CaseID) {
            return base.Channel.GetCaseReferrerAssignedUsersByCaseID(CaseID);
        }
        
        public int AddCaseReferrerAssignedUser(ITSPublicApp.Web.ITSService.CaseService.CaseReferrerAssignedUser _CaseReferrerAssignedUser) {
            return base.Channel.AddCaseReferrerAssignedUser(_CaseReferrerAssignedUser);
        }
    }
}
