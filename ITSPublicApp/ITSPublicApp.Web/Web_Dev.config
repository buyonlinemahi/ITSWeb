<?xml version="1.0"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->

<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
 <appSettings>
    <add key="webpages:Version" value="1.0.0.0"/>
    <add key="ClientValidationEnabled" value="true"/>
    <add key="UnobtrusiveJavaScriptEnabled" value="true"/>
    <add key="StoragePath" value="/Storage"/>
    <add key="TemplateUpload" value="~/Storage/Template/"/>
   <add key="PhysioTriageAssessmentForm" value="~/Content/AssessmentForms/TriageAssessmentForm.docx"/>
    <add key="PsychologicalTriageAssessmentForm" value="~/Content/AssessmentForms/PsychologicalTriageAssessment.docx"/>
 <!--For send ing Email-->
<!--    <add key="SupportInnovateHMGEmail" value="support@innovatehmg.co.uk"/> -->
    <add key="SupportInnovateHMGEmail" value="hsingh@vsaindia.com"/>
    <add key="EmailHost" value="smtp.office365.com"/>
    <add key="EmailPort" value="587"/>
    <add key="EmailUserId" value="software@hcrg.com"/>
    <add key="EmailPwd" value="Cuxo9003"/>
    <!--End-->

	  <!--URL Settings-->
	  <add key="ReSetUrl" value="http://itsdev.medspectra.com/" />
	  <!--URL Settings-->

  </appSettings>
<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <typeAliases>
      <typeAlias alias="ITask" type="ITSPublicApp.Infrastructure.ApplicationServices.Contracts.ITask, ITSPublicApp.Infrastructure.ApplicationServices.Contracts" />
      <typeAlias alias="ConfigureAutoMapper" type="ITSPublicApp.Web.Configurations.ConfigureAutoMapper, ITSPublicApp.Web" />
      <typeAlias alias="RegisterGlobalFilters" type="ITSPublicApp.Web.Configurations.RegisterGlobalFilters, ITSPublicApp.Web" />
      <typeAlias alias="RegisterRoutes" type="ITSPublicApp.Web.Configurations.RegisterRoutes, ITSPublicApp.Web" />
      <typeAlias alias="IUserService" type="ITSPublicApp.Web.ITSService.UserService.IUserService, ITSPublicApp.Web" />
      <typeAlias alias="UserService" type="ITSPublicApp.Web.ITSService.UserService.UserServiceClient, ITSPublicApp.Web" />

      <typeAlias alias="ICaseService" type="ITSPublicApp.Web.ITSService.CaseService.ICaseService, ITSPublicApp.Web" />
      <typeAlias alias="CaseService" type="ITSPublicApp.Web.ITSService.CaseService.CaseServiceClient, ITSPublicApp.Web" />

      <typeAlias alias="IReferrerService" type="ITSPublicApp.Web.ITSService.ReferrerService.IReferrerService, ITSPublicApp.Web" />
      <typeAlias alias="ReferrerService" type="ITSPublicApp.Web.ITSService.ReferrerService.ReferrerServiceClient, ITSPublicApp.Web" />
      <typeAlias alias="ISupplierService" type="ITSPublicApp.Web.ITSService.SupplierService.ISupplierService, ITSPublicApp.Web" />
      <typeAlias alias="SupplierService" type="ITSPublicApp.Web.ITSService.SupplierService.SupplierServiceClient, ITSPublicApp.Web" />
      <typeAlias alias="IPatientService" type="ITSPublicApp.Web.ITSService.PatientService.IPatientService, ITSPublicApp.Web" />
      <typeAlias alias="PatientService" type="ITSPublicApp.Web.ITSService.PatientService.PatientServiceClient, ITSPublicApp.Web" />
      <typeAlias alias="IAssessmentService" type="ITSPublicApp.Web.ITSService.AssessmentService.IAssessmentService, ITSPublicApp.Web" />
      <typeAlias alias="AssessmentService" type="ITSPublicApp.Web.ITSService.AssessmentService.AssessmentServiceClient, ITSPublicApp.Web" />

      <typeAlias alias="IPractitionerService" type="ITSPublicApp.Web.ITSService.PractitionerService.IPractitionerService, ITSPublicApp.Web" />
      <typeAlias alias="PractitionerService" type="ITSPublicApp.Web.ITSService.PractitionerService.PractitionerServiceClient, ITSPublicApp.Web" />

      <typeAlias alias="IReferrerStorage" type="ITSPublicApp.Infrastructure.ApplicationServices.Contracts.IReferrerStorage, ITSPublicApp.Infrastructure.ApplicationServices.Contracts" />
      <typeAlias alias="ReferrerStorageService" type="ITSPublicApp.Infrastructure.ApplicationServices.ReferrerStorageService, ITSPublicApp.Infrastructure.ApplicationServices" />
      <typeAlias alias="ISupplierStorage" type="ITSPublicApp.Infrastructure.ApplicationServices.Contracts.ISupplierStorage, ITSPublicApp.Infrastructure.ApplicationServices.Contracts" />
      <typeAlias alias="SupplierStorageService" type="ITSPublicApp.Infrastructure.ApplicationServices.SupplierStorageService, ITSPublicApp.Infrastructure.ApplicationServices" />

      <typeAlias alias="ILookUpService" type="ITSPublicApp.Web.ITSService.LookUpService.ILookUpService, ITSPublicApp.Web" />
      <typeAlias alias="LookUpService" type="ITSPublicApp.Web.ITSService.LookUpService.LookUpServiceClient, ITSPublicApp.Web" />
     
      <typeAlias alias="IEncryption" type="ITSPublicApp.Infrastructure.ApplicationServices.Contracts.IEncryption, ITSPublicApp.Infrastructure.ApplicationServices.Contracts" />
      <typeAlias alias="EncryptionService" type="ITSPublicApp.Infrastructure.ApplicationServices.EncryptionService, ITSPublicApp.Infrastructure.ApplicationServices" />
      
      <typeAlias alias="IITSCommonService" type="ITSPublicApp.Infrastructure.ApplicationServices.Contracts.IITSCommonService, ITSPublicApp.Infrastructure.ApplicationServices.Contracts" />
      <typeAlias alias="ITSCommonService" type="ITSPublicApp.Infrastructure.ApplicationServices.ITSCommonService, ITSPublicApp.Infrastructure.ApplicationServices" />
    </typeAliases>
    <containers>
      <container name="">
        <type type="ITask" mapTo="ConfigureAutoMapper" name="ConfigureAutoMapper">
          <constructor />
        </type>
        <type type="ITask" mapTo="RegisterGlobalFilters" name="RegisterGlobalFilters">
          <constructor />
        </type>
        <type type="ITask" mapTo="RegisterRoutes" name="RegisterRoutes">
          <constructor />
        </type>
        <type type="IUserService" mapTo="UserService">
          <constructor />
        </type>
        <type type="ICaseService" mapTo="CaseService">
          <constructor />
        </type>
        <type type="IReferrerService" mapTo="ReferrerService">
          <constructor />
        </type>
        <type type="ISupplierService" mapTo="SupplierService">
          <constructor />
        </type>
        <type type="IReferrerStorage" mapTo="ReferrerStorageService">
          <constructor />
        </type>
        <type type="ISupplierStorage" mapTo="SupplierStorageService">
          <constructor />
        </type>

        <type type="IPatientService" mapTo="PatientService">
          <constructor />
        </type>
        <type type="IAssessmentService" mapTo="AssessmentService">
          <constructor />
        </type>

        <type type="IPractitionerService" mapTo="PractitionerService">
          <constructor />
        </type>

        <type type="ILookUpService" mapTo="LookUpService">
          <constructor />
        </type>
        <type type="IEncryption" mapTo="EncryptionService">
          <constructor />
        </type>
      <type type="IITSCommonService" mapTo="ITSCommonService">
          <constructor />
        </type>
      </container>
    </containers>
  </unity>

  <system.web>
 <customErrors mode="Off"/>
  <globalization culture="en-GB" uiCulture="en-GB"/>
    

    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>

    <authentication mode="Forms">
      <forms loginUrl="~/Account/LogOn" timeout="2880" />
    </authentication>

    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages"/>
      </namespaces>
    </pages>
  </system.web>

  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_IUserService" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          allowCookies="false" bypassProxyOnLocal="false" maxBufferPoolSize="2147483647"
          maxReceivedMessageSize="2147483647" useDefaultWebProxy="true" />
        <binding name="BasicHttpBinding_IReferrerService" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          allowCookies="false" bypassProxyOnLocal="false" maxBufferPoolSize="2147483647"
          maxReceivedMessageSize="2147483647" useDefaultWebProxy="true" />
        <binding name="BasicHttpBinding_ICaseService" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          allowCookies="false" bypassProxyOnLocal="false" maxBufferPoolSize="2147483647"
          maxReceivedMessageSize="2147483647" useDefaultWebProxy="true" />
        <binding name="BasicHttpBinding_ISupplierService" maxReceivedMessageSize="2147483647"/>
        <binding name="BasicHttpBinding_IPatientService" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          allowCookies="false" bypassProxyOnLocal="false" maxBufferPoolSize="2147483647"
          maxReceivedMessageSize="2147483647" useDefaultWebProxy="true" />
        <binding name="BasicHttpBinding_IAssessmentService" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          allowCookies="false" bypassProxyOnLocal="false" maxBufferPoolSize="2147483647"
          maxReceivedMessageSize="2147483647" useDefaultWebProxy="true">
          <security>
            <transport realm="" />
          </security>
        </binding>
        <binding name="BasicHttpBinding_IPractitionerService" />
        <binding name="BasicHttpBinding_IUserService1" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
          maxBufferPoolSize="2147483647" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647"
          textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true"
          messageEncoding="Text">
<readerQuotas maxDepth="2000000" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None"
              realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
        <binding name="BasicHttpBinding_ILookUpService" />
        <binding name="BasicHttpBinding_IAssessmentService1" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          allowCookies="false" bypassProxyOnLocal="false" maxBufferPoolSize="2147483647"
          maxReceivedMessageSize="2147483647" useDefaultWebProxy="true" />
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint address="http://itswsdev.medspectra.com/AssessmentService.svc"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IAssessmentService"
        contract="ITSService.AssessmentService.IAssessmentService" name="BasicHttpBinding_IAssessmentService" />
      <endpoint address="http://itswsdev.medspectra.com/CaseService.svc"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ICaseService"
        contract="ITSService.CaseService.ICaseService" name="BasicHttpBinding_ICaseService" />
      <endpoint address="http://itswsdev.medspectra.com/LookUpService.svc"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ILookUpService"
        contract="ITSService.LookUpService.ILookUpService" name="BasicHttpBinding_ILookUpService" />
      <endpoint address="http://itswsdev.medspectra.com/PatientService.svc"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IPatientService"
        contract="ITSService.PatientService.IPatientService" name="BasicHttpBinding_IPatientService" />
      <endpoint address="http://itswsdev.medspectra.com/PractitionerService.svc"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IPractitionerService"
        contract="ITSService.PractitionerService.IPractitionerService"
        name="BasicHttpBinding_IPractitionerService" />
      <endpoint address="http://itswsdev.medspectra.com/ReferrerService.svc"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IReferrerService"
        contract="ITSService.ReferrerService.IReferrerService" name="BasicHttpBinding_IReferrerService" />
      <endpoint address="http://itswsdev.medspectra.com/SupplierService.svc"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ISupplierService"
        contract="ITSService.SupplierService.ISupplierService" name="BasicHttpBinding_ISupplierService" />
      <endpoint address="http://itswsdev.medspectra.com/UserService.svc"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IUserService"
        contract="ITSService.UserService.IUserService" name="BasicHttpBinding_IUserService" />
    </client>
  </system.serviceModel>
</configuration>
